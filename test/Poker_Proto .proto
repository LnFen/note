/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/
syntax = "proto2";
package protobuf;

/* CGAME_MACRO_GROUP version:1.3.0*/
enum CGAME_MACRO_GROUP 
{
    CGAME_MACRO_GROUP_0 = 0;    /* CGAME_MACRO_GROUP_0  version:1.3.0*/
    CGAME_MACRO_GROUP_1 = 1;    /* CGAME_MACRO_GROUP_1  version:1.3.0*/
};

/* MsgID version:1.3.0*/
enum MsgID 
{
    MSGID_PING = 10001;     /* 客户端与网关服务器的PING  version:1.3.0*/
    MSGID_RECONNECT_REQ = 1002;     /* 客户端重连  version:1.3.0*/
    MSGID_RECONNECT_RES = 1003;     /* 客户端重连返回  version:1.3.0*/
    MSGID_SERVERPING = 10004;   /* 游戏服务器与网关服务器的PING  version:1.3.0*/
    MSGID_REGISTER_SERVER = 10005;  /* 注册服务器到大厅服  version:1.3.0*/
    MSGID_BROADCAST_MODIFY_DATA = 10006;    /* 广播数据更改  version:1.3.0*/
    MSGID_BROADCAST_SLOTS_DELETE_JACKPORT = 10007;//jackport奖池扣除
    MSGID_LOGIN_REQ = 1;    /* 登陆请求  version:1.3.0*/
    MSGID_LOGIN_RES = 2;    /* 登陆返回  version:1.3.0*/
    MSGID_BIND_REQ = 3;     /* 绑定请求  version:1.3.0*/
    MSGID_BIND_RES = 4;     /* 绑定返回  version:1.3.0*/
    MSGID_USERBASEDATA_REQ = 11;    /* 获取玩家基本信息请求  version:1.3.0*/
    MSGID_USERBASEDATA_RES = 12;    /* 获取玩家基本信息返回  version:1.3.0*/
    MSGID_MINRANKLIST_REQ = 13;     /* 获取小排行榜请求  version:1.3.0*/
    MSGID_MINRANKLIST_RES = 14;     /* 获取小排行榜返回  version:1.3.0*/
    MSGID_USERPAYINFO_REQ = 15;     /* 获取玩家支付信息请求  version:1.3.0*/
    MSGID_USERPAYINFO_RES = 16;     /* 获取玩家支付信息返回  version:1.3.0*/
    MSGID_PLAYER_INFO_DATA = 17;    /* 个人讯息请求 */
    MSGID_PLAYER_INFO_MODIFY = 18;   /* 个人信息修改 */
   MSGID_STOREDATA_REQ = 31;   /* 充值数据请求   version:1.3.0*/
    MSGID_STOREDATA_RES = 32;   /* 充值数据返回   version:1.3.0*/
    MSGID_RECHARGE_REQ = 33;    /* 充值请求  version:1.3.0*/
    MSGID_RECHARGE_RES = 34;    /* 充值返回  version:1.3.0*/
    MSGID_RECHARGEVER_REQ = 35;     /* 充值验证请求  version:1.3.0*/
    MSGID_RECHARGEVER_RES = 36;     /* 充值验证返回  version:1.3.0*/
    MSGID_NICKNAME_REQ = 37;    /* 昵称请求  version:1.3.0*/
    MSGID_NICKNAME_RES = 38;    /* 昵称返回  version:1.3.0*/
    MSGID_NOTICE_REQ = 39;  /* 公告请求  version:1.3.0*/
    MSGID_NOTICE_RES = 40;  /* 公告返回  version:1.3.0*/
    MSGID_BROADCAST_RES = 41;   /* 下行广播  version:1.3.0*/
    MSGID_PIGGLYBANKSTATE_RES = 42;     /* 小猪银行的状态推送  version:1.3.0*/
    MSGID_PIGBANKDATA_REQ = 43;     /* 小猪银行的数据信息请求   version:1.3.0*/
    MSGID_PIGBANKDATA_RES = 44;     /* 小猪银行的数据信息返回   version:1.3.0*/
    MSGID_TURNTABLE_REQ = 45;//转盘请求
    MSGID_TURNTABLE_RES = 46;//转盘返回
	MSGID_TURNTABLE_GETREWARD_REQ = 47;//转盘奖励获取请求
    MSGID_TURNTABLE_GETREWARD_RES = 48;//转盘奖励获取返回	
    MSGID_TURNTABLE_GETFREECOUNT = 49;//转盘每天免费次数
    MSGID_CONTINUSLOG_RES = 50;     /* 连续登陆奖励的推送消息  version:1.3.0*/
    MSGID_CONTINUSREWARD_REQ = 51;  /* 连续登陆奖励领取请求  version:1.3.0*/
    MSGID_CONTINUSREWARD_RES = 52;  /* 连续登陆奖励领取返回  version:1.3.0*/
    MSGID_TEAM_START_GAME_REQ = 54;     /* 开始游戏请求  version:1.3.0*/
    MSGID_WEXIN_RECHARGE_RES = 60;  /* 微信订单返回  version:1.3.0*/
    MSGID_ZHIFUBAO_RECHARGE_RES = 61;   /* 支付宝订单返回  version:1.3.0*/
    MSGID_LOGINLOGIC_REQ = 609;     /* 登陆逻辑服请求   version:1.3.0*/
    MSGID_LOGINLOGIC_RES = 610;     /* 登陆逻辑服回包   version:1.3.0*/
    MSGID_DATALOAD_RES = 611;   /* 数据加载成功   version:1.3.0*/
    MSGID_ADDITEM_REQ = 555;    /* 测试消息,加物品  version:1.3.0*/
    MSGID_REG_REQ = 700;    /* 用户注册请求   version:1.3.0*/
    MSGID_REG_RES = 701;    /* 用户注册返回   version:1.3.0*/
    MSGID_LEVELUP_RES = 702;    /* 用户升级主动推送  version:1.3.0*/
    MSGID_REDPOINT_RES = 703;   /* 小红点主动推送  version:1.3.0*/
    MSGID_VIP_EXTRAREWARDS_RES = 704;   /* VIP每日登录奖励  version:1.4.0*/
    MSGID_GETVIP_EXTRAREWARDS_REQ = 705;    /* 领取VIP每日登录奖励请求 version:1.4.0*/
    MSGID_GETVIP_EXTRAREWARDS_RES = 706;    /* 领取VIP每日登录奖励返回  version:1.4.0*/
    MSGID_JOIN_ROOM_REQ = 999;  /* 加入房间  version:1.3.0*/
    MSGID_JOIN_ROOM_RES = 1000;     /* 加入房间返回  version:1.3.0*/

    MSGID_FREECHIPS_INFO_REQ = 1201;    /* 免费筹码的倒计时及数量请求  version:1.3.0*/
    MSGID_FREECHIPS_INFO_RES = 1202;    /* 免费筹码的倒计时及数量返回  version:1.3.0*/
    MSGID_GET_FREECHIPS_REQ = 1203;     /* 领取免费筹码请求  version:1.3.0*/
    MSGID_GET_FREECHIPS_RES = 1204;     /* 领取免费筹码返回  version:1.3.0*/
    MSGID_FIGHTINFO_REQ = 1205;     /* 玩家战斗数据请求  version:1.3.0*/
    MSGID_FIGHTINFO_RES = 1206;     /* 玩家战斗数据返回  version:1.3.0*/
    MSGID_MODIFYUSERDATA_REQ = 1207;    /* 修改玩家个人信息请求  version:1.3.0*/
    MSGID_MODIFYUSERDATA_RES = 1208;    /* 修改玩家个人信息返回  version:1.3.0*/
    MSGID_BUYHEADWITHCHIPS_REQ = 1209;  /* 用筹码购买头像请求  version:1.3.0*/
    MSGID_BUYHEADWITHCHIPS_RES = 1210;  /* 用筹码购买头像返回  version:1.3.0*/
    MSGID_NEWSHORTDATA_REQ = 1211;  /* 个人简短信息请求（仅头像、昵称、筹码数）  version:1.3.0*/
    MSGID_NEWSHORTDATA_RES = 1212;  /* 个人简短信息返回（仅头像、昵称、筹码数）  version:1.3.0*/
    MSGID_BJL_ROOM_RANKINGLIST_REQ = 1213;  /* 排行榜  version:1.3.0*/
    MSGID_BJL_ROOM_RANKINGLIST_RES = 1214;  /* 排行榜  version:1.3.0*/
    MSGID_MY_RANKINGDATA_REQ = 1215;    /* 本人自己的排行榜數據請求  version:1.3.0*/
    MSGID_MY_RANKINGDATA_RES = 1216;    /* 本人自己的排行榜數據返回  version:1.3.0*/
    MSGID_FRIENDLIST_REQ = 1217;    /* 本人好友數據請求  version:1.3.0*/
    MSGID_FRIENDLIST_RES = 1218;    /* 本人好友数据返回  version:1.3.0*/
    MSGID_DELETEFRIEND_REQ = 1219;  /* 删除好友請求  version:1.3.0*/
    MSGID_DELETEFRIEND_RES = 1220;  /* 删除好友返回  version:1.3.0*/
    MSGID_SEARCHFRIEND_REQ = 1221;  /* 搜索好友請求  version:1.3.0*/
    MSGID_SEARCHFRIEND_RES = 1222;  /* 搜索好友返回  version:1.3.0*/
    MSGID_FRIENDPERMISSION_REQ = 1223;  /* 好友权限操作请求  version:1.3.0*/
    MSGID_FRIENDPERMISSION_RES = 1224;  /* 好友权限操作返回  version:1.3.0*/
    MSGID_SENDEMAIL_REQ = 1225;     /* 发送邮件請求  version:1.3.0*/
    MSGID_SENDEMAIL_RES = 1226;     /* 发送邮件返回  version:1.3.0*/
    MSGID_EMAILDATA_REQ = 1227;     /* 邮件数据請求  version:1.3.0*/
    MSGID_EMAILDATA_RES = 1228;     /* 邮件数据返回  version:1.3.0*/
    MSGID_OPERATEEMAIL_REQ = 1229;  /* 操作邮件請求  version:1.5.0*/
    MSGID_OPERATEEMAIL_RES = 1230;  /* 操作邮件返回  version:1.5.0*/
    MSGID_TASK_REQ = 1231;  /* 获取今日任务  version:1.3.0*/
    MSGID_TASK_RES = 1232;  /* 今日任务返回  version:1.3.0*/
    MSGID_GETTASKAWARD_REQ = 1233;  /* 领取今日任务奖励  version:1.3.0*/
    MSGID_GETTASKAWARD_RES = 1234;  /* 今日任务奖励领取返回  version:1.3.0*/
    MSGID_COMPLETETASK_REQ = 1235;  /* 上传今日任务  version:1.3.0*/
    MSGID_CHANGEACHIEVEMENT_REQ = 1236;     /* 更换成就称号请求  version:1.3.0*/
    MSGID_CHANGEACHIEVEMENT_RES = 1237;     /* 更换成就称号返回  version:1.3.0*/
    MSGID_ACHIEVEMENTDATA_REQ = 1238;   /* 成就数据请求  version:1.3.0*/
    MSGID_ACHIEVEMENTDATA_RES = 1239;   /* 成就数据返回  version:1.3.0*/
    MSGID_ACHIEVEMENTDONE_RES = 1240;   /* 成就达成返回  version:1.3.0*/
    MSGID_ADDFRIEND_REQ = 1241;     /* 添加好友請求  version:1.3.0*/
    MSGID_ADDFRIEND_RES = 1242;     /* 添加好友返回  version:1.3.0*/
    MSGID_LOTTERYLIST_REQ = 1250;   /* 请求抽奖或兑换的物品列表  version:1.5.0*/
    MSGID_LOTTERYLIST_RES = 1251;   /* 返回抽奖或兑换的物品列表  version:1.5.0*/
    MSGID_GETVIPCHIPS_REQ = 1260;   /* 获取VIP补齐筹码  version:1.3.0*/
    MSGID_GETVIPCHIPS_RES = 1261;   /* 返回vip补齐筹码  version:1.3.0*/
    MSGID_TOPSMALLMARQUEE_RES = 1262;   /* 顶部小走马灯通知  version:1.3.0*/
    MSGID_BOTTOMSMALLMARQUEE = 1263;    /* 底部小走马灯通知  version:1.3.0*/
    MSGID_SEND_SERVICE_REQ = 1264;  /* 发送客服请求  version:1.3.0*/
    MSGID_SEND_SERVICE_RES = 1265;  /* 发送客服返回  version:1.3.0*/
    MSGID_SERVICELIST_REQ = 1266;   /* 请求客服消息列表  version:1.3.0*/
    MSGID_SERVICELIST_RES = 1267;   /* 返回客服消息列表  version:1.3.0*/
    MSGID_FRIEND_MSG_LIST_REQ = 1268;   /* 好友消息數據請求  version:1.4.0*/
    MSGID_FRIEND_MSG_LIST_RES = 1269;   /* 好友消息数据返回  version:1.4.0*/
    MSGID_FRIEND_SENDCHIPS_REQ = 1270;  /* 给好友赠送筹码請求  version:1.4.0*/
    MSGID_FRIEND_SENDCHIPS_RES = 1271;  /* 给好友赠送筹码返回  version:1.4.0*/
    MSGID_FBFRIEND_IDLIST_SEND = 1272;  /* 向服务器发送我的fb好友的ID列表  version:1.4.0*/
    MSGID_CHIPS_TRADE_REQ = 1273;   /* 筹码交易請求  version:1.4.0*/
    MSGID_CHIPS_TRADE_RES = 1274;   /* 筹码交易返回  version:1.4.0*/
    MSGID_FRIEND_RECIEVECHIPS_REQ = 1275;   /* 领取免费筹码請求  version:1.4.0*/
    MSGID_FRIEND_RECIEVECHIPS_RES = 1276;   /* 领取免费筹码返回  version:1.4.0*/
    MSGID_CHIPS_TRADEBASEINFO_REQ = 1277;   /* 筹码交易系统基本数据请求  version:1.4.0*/
    MSGID_CHIPS_TRADEBASEINFO_RES = 1278;   /* 筹码交易系统基本数据请求  version:1.4.0*/
    MSGID_RECIEVE_TRADECHIPS_RES=1279;  /* 收到玩家转让筹码给我的消息  version:1.4.0*/
    MSGID_LOTTERYDRAW_REQ = 1280;   /* 请求抽奖  version:1.5.0*/
    MSGID_LOTTERYDRAW_RES = 1281;   /* 抽奖结果返回  version:1.5.0*/
    MSGID_LOTTERYEXCHANGE_REQ = 1282;   /* 请求兑换  version:1.5.0*/
    MSGID_LOTTERYEXCHANGE_RES = 1283;   /* 兑换结果返回  version:1.5.0*/
    MSGID_LOTTERYCONTACTINFO_REQ=1284;  /*发送个人联系方式请求 version1.5.0*/
    MSGID_LOTTERYCONTACTINFO_RES=1285;  /*发送个人联系方式返回 version1.5.0*/
    MSGID_CHIPS_CANCEL_TRADE=1286;       /* 撤销赠送给别人筹码*/
    MSGID_ACTIVITY_NOTICE_CONFIG_C2S = 1287;        /*请求活动和公告信息*/
    MSGID_ACTIVITY_NOTICE_CONFIG_S2C = 1288;        /*返回活动和公告信息*/
	MSGID_WEBVIEW_INFO_S2C = 1289;		/* webview未读聊天提醒 */
    MSGID_RECHARGE_CUSTOMER_SERVICE = 1290;	/*充值客服信息*/
	MSGID_RECHARGE_RECORD_DATA = 1291;	/*充值记录*/
    MSGID_PLAYERSTATECHANGE = 1300;     /* 服务器之间通信，及时报告玩家状态  version:1.3.0*/
    MSGID_KICKOUTPLAYER = 1400;     /* 踢人协议 客户端在收到协议后 直接退出到登录界面*/
     
    
    MSGID_BJL_ROOM_STATETRANSFORM_RES = 2001;   /* 百家乐房间状态转换返回  version:1.3.0*/
    MSGID_BJL_ROOM_CHIPS_REQ = 2002;    /* 玩家下注/撤回请求  version:1.3.0*/
    MSGID_BJL_ROOM_CHIPS_RES = 2003;    /* 玩家下注/撤回返回（仅用于自己请求下注/撤回的返回结果）  version:1.3.0*/
    MSGID_BJL_ROOM_FAPAI_RES = 2005;    /* 发牌  version:1.3.0*/
    MSGID_BJL_ROOM_BUPAI_RES = 2007;    /* 补牌  version:1.3.0*/
    MSGID_BJL_ROOM_MIPAI_REQ = 2009;    /* 咪牌  version:1.3.0*/
    MSGID_BJL_ROOM_MIPAI_RES = 2010;    /* 咪牌  version:1.3.0*/
    MSGID_BJL_ROOM_KAIPAI_REQ = 2011;   /* 开牌  version:1.3.0*/
    MSGID_BJL_ROOM_KAIPAI_RES = 2012;   /* 开牌  version:1.3.0*/
    MSGID_BJL_ROOM_RESULT_RES = 2014;   /* 游戏结果  version:1.3.0*/
    MSGID_BJL_ROOM_WINCHIPS_RES = 2015;     /* 收筹码  version:1.3.0*/
    MSGID_BJL_ROOM_PLAY_CHIPLIST = 2016;    /* 停止下注后各玩家下注情况  version:1.3.0*/
    MSGID_BJL_QUIT_ROOM_REQ = 2019;     /* 退出房间  version:1.3.0*/
    MSGID_BJL_CARD_ROAD_REQ = 2021;     /* 查询牌路  version:1.3.0*/
    MSGID_BJL_CARD_ROAD_RES = 2022;     /* 返回牌路  version:1.3.0*/
    MSGID_BJL_TIMER_RES = 2024;     /* 倒计时  version:1.3.0*/
    MSGID_BJL_ROOM_CHECK_REQ = 2025;    /* 定时校对房间内玩家请求  version:1.3.0*/
    MSGID_BJL_ROOM_CHECK_RES = 2026;    /* 定时校对房间内玩家返回  version:1.3.0*/
    MSGID_BJL_ROOM_MSG_REQ = 2027;  /* 喊话，通知，跑马灯  version:1.3.0*/
    MSGID_BJL_ROOM_MSG_RES = 2028;  /* 喊话，通知，跑马灯  version:1.3.0*/
    MSGID_BJL_ROOM_UPDATEPLAYER_RES = 2031;     /* 更新玩家信息（添加或者删除）  version:1.3.0*/
    MSGID_BJL_ROOM_CHANGESEAT_REQ = 2033;   /* 换座位请求  version:1.3.0*/
    MSGID_BJL_ROOM_CHANGESEAT_RES = 2034;   /* 换座位返回(适用于围观)  version:1.3.0*/
    MSGID_BJL_PLAYERSCHIP_INFO = 2035;  /* 其他玩家下注消息（除自己以外的其他玩家下注或撤回）  version:1.3.0*/
    MSGID_BJL_ROTATE_POKER_REQ = 2036;  /* 点击旋转牌  version:1.3.0*/
    MSGID_BJL_ROTATE_POKER_RES = 2037;  /* 点击旋转牌  version:1.3.0*/
    MSGID_BJL_DRAG_POKER_REQ = 2038;    /* 咪牌  version:1.3.0*/
    MSGID_BJL_DRAG_POKER_RES = 2039;    /* 咪牌  version:1.3.0*/
    MSGID_BJL_SETTOUCH_POINT_REQ = 2040;    /* 设置触摸点  version:1.3.0*/
    MSGID_BJL_SETTOUCH_POINT_RES = 2041;    /* 设置触摸点  version:1.3.0*/
    MSGID_BJL_SHUFFLE_RES = 2045;   /* 百家乐洗牌  version:1.3.0*/
    MSGID_BJL_GET_NO_SIT_PLAYER = 2046; /*百家乐场外玩家*/
    MSGID_VP_JOIN_REQ = 3001;   /* 加入VP请求  version:1.3.0*/
    MSGID_VP_QUIT_REQ = 3002;   /* 退出VP请求  version:1.3.0*/
    MSGID_VP_JOIN_RES = 3003;   /* 加入VP返回  version:1.3.0*/
    MSGID_VP_BET_REQ = 3004;    /* VP下注请求  version:1.3.0*/
    MSGID_VP_BET_RES = 3005;    /* VP下注返回  version:1.3.0*/
    MSGID_VP_EXCHANGECARD_REQ = 3006;   /* 换牌请求  version:1.3.0*/
    MSGID_VP_EXCHANGECARD_RES = 3007;   /* 换牌返回  version:1.3.0*/
    MSGID_VP_RESULT_REQ = 3010;     /* 出结果请求  version:1.3.0*/
    MSGID_VP_RESULT_RES = 3011;     /* 出结果返回  version:1.3.0*/
    MSGID_VP_COMPARE_REQ = 3012;    /* 比大小请求  version:1.3.0*/
    MSGID_VP_COMPARE_RES = 3013;    /* 比大小返回  version:1.3.0*/
    MSGID_VP_COLLECT_REQ = 3014;    /* 结算筹码请求  version:1.3.0*/
    MSGID_VP_COLLECT_RES = 3015;    /* 结算筹码请求  version:1.3.0*/
    MSGID_ENTER_SLOTO_REQ = 4001;   /* 玩家进入老虎机请求  version:1.3.0*/
    MSGID_ENTER_SLOTO_RES = 4002;   /* 玩家进入老虎机返回  version:1.3.0*/
    MSGID_SLOTO_SPIN_REQ = 4003;    /* 玩家开始Spin  version:1.3.0*/
    MSGID_SLOTO_SPIN_RES = 4004;    /* 玩家Spin返回  version:1.3.0*/
    SLOTO_JACKPOT_RES = 4005;   /* slots大奖池数主动推送  version:1.3.0*/
    SLOTO_UPDATEROOMMEMBER_RES = 4006;  /* 添加或者删除房间的玩家  version:1.3.0*/
    MSGID_SLOTO_GUESS=4007;  /*sloto财神猜奖*/
    MSGID_SLOTO_ELM_Fill=4008;  /*消除sloto填充内容*/
    MSGID_SLOTO_FREE_TYPE = 4009;//免费模式
    
    MSGID_BLACKJACK_JOIN_REQ = 5001;    /* 玩家进入21点游戏请求  version:1.3.0*/
    MSGID_BLACKJACK_JOIN_RES = 5002;    /* 玩家进入21点游戏返回  version:1.3.0*/
    MSGID_BLACKJACK_QUIT_REQ = 5003;    /* 玩家退出21点游戏请求  version:1.3.0*/
    MSGID_BLACKJACK_QUIT_RES = 5004;    /* 玩家退出21点游戏返回  version:1.3.0*/
    MSGID_BLACKJAC_READY_RES = 5009;    /* 服务器通知开始准备  version:1.3.0*/
    MSGID_BLACKJAC_STARTCHIPS_RES = 5010;   /* 服务器通知开始下注  version:1.3.0*/
    MSGID_BLACKJAC_BET_REQ = 5011;  /* 21点下注请求  version:1.3.0*/
    MSGID_BLACKJAC_BET_RES = 5012;  /* 21点下注返回  version:1.3.0*/
    MSGID_BLACKJAC_ASSIGNPOKERFIRST_RES = 5020;     /* 每人发两张牌,同时包含所有玩家的下注列表  version:1.3.0*/
    MSGID_BLACKJAC_BLACKJACKPLAYERLIST_RES = 5021;  /* 获得BlackJack的玩家列表  version:1.3.0*/
    MSGID_BLACKJAC_INSURANCE_RES = 5022;    /* 服务器通知通知开始购买保险  version:1.3.0*/
    MSGID_BLACKJAC_BUYINSURANCE_REQ = 5023;     /* 21点购买保险请求  version:1.3.0*/
    MSGID_BLACKJAC_BUYINSURANCE_RES = 5024;     /* 21点购买保险返回  version:1.3.0*/
    MSGID_BLACKJAC_BETLIST = 5030;  /* 停止下注后各玩家下注列表  version:1.3.0*/
    MSGID_BLACKJAC_INSURANCERESLUT_RES = 5031;  /* 21点购买保险的结算结果  version:1.3.0*/
    MSGID_BLACKJAC_PLAYEROPERTIMER_RES = 5041;  /* 21点通知玩家操作倒计时  version:1.3.0*/
    MSGID_BLACKJAC_PLAYEROPER_REQ = 5042;   /* 21点玩家操作请求，1:加倍，2:分牌，3:要牌，4:停牌  version:1.3.0*/
    MSGID_BLACKJAC_PLAYEDOUBLECHIP_RES = 5043;  /* 21点玩家加倍请求返回  version:1.3.0*/
    MSGID_BLACKJAC_PLAYEBREAKUP_RES = 5044;     /* 21点玩家分牌请求返回  version:1.3.0*/
    MSGID_BLACKJAC_PLAYGETCARD_RES = 5045;  /* 21点玩家要牌请求返回  version:1.3.0*/
    MSGID_BLACKJAC_STOPCARD_RES = 5046;     /* 21点玩家停牌请求返回  version:1.3.0*/
    MSGID_BLACKJAC_BANKERGETCARD_RES = 5047;    /* 21点庄家要牌返回  version:1.3.0*/
    MSGID_BLACK_UPDATEPLAYER_RES = 5051;    /* 更新玩家信息（添加或者删除）  version:1.3.0*/
    MSGID_BLACK_COUNTDOWN_RES = 5052;   /* 倒计时  version:1.3.0*/
    MSGID_BLACKJAC_FINALRESULT_RES = 5053;  /* 21点结算消息返回  version:1.3.0*/
    MSGID_RESET_PIGLEVEL_REQ = 6000;    /* 充值金猪等级请求  version:1.3.0*/
    MSGID_RESET_PIGLEVEL_RES = 6001;    /* 充值金猪等级返回  version:1.3.0*/
    MSGID_TASK_STATE = 8001;    /* 任务完成情况  version:1.3.0*/
    MSGID_SERVERTASK = 8002;    /* 各个服务器的任务完成  version:1.3.0*/
    MSGID_COMPLETETASK_RES = 8010;  /* 任务完成情况  version:1.3.0*/
    MSGID_SERVER_PLAYER_CHIPCHANGE_RES = 8011;  /* 服务器筹码发生变化  version:1.3.0*/

    //9000-10000新增
   MSGID_LOGIN_CHECK = 9001;    /* 账号密码登陆*/
   MSGID_LOGIN_CHECK_PHONE = 9019;  /* 账号密码登陆*/
    MSGID_REGISTER = 9002;/*注册账号*/
    MSGID_EXCHANGE_DTC=9003;/*钻石兑换筹码*/
    MSGID_CHAT_WORLD=9004;/*世界聊天*/
    MSGID_CHANGENAME_PRICE=9005;/*改名价格*/
    MSGID_RELIEF_CHIP=9006;/*救济金*/
    MSGIDNEW_GETCHIP_PIG=9007;/*敲金猪*/
    MSGID_ADD_FRIEND_ACCPET=9008;/*申请添加好友*/
    MSGID_GET_FRIEND_ACCPET_LIST=9009;/*获取申请者列表*/
    MSGID_MODIFY_PASSWORD=9010;/*修改密码*/
    MSGID_BIND_PHONE=9011;/*绑定电话*/
    MSGID_GET_AUTH=9012;/*获取交易码*/
    MSGID_SET_BANEK_PASSWORD=9013;/*设置银行密码*/
    MSGID_SAVING_CHIPS=9014;/*存钱*/
    MSGID_LOADING_CHIPS=9015;/*取钱*/
    MSGID_REDEEM_CODE=9016;/*兑换码*/
    MSGID_BIND_BANKER_CODE=9017;/*绑定银商账号*/
    MSGID_PAY_PING=9018;//ping++平台支付请求
    MSGID_REQUEST_BINDCARD_REQ=9020;//请求绑定兑换
    MSGID_REQUEST_BINDCARD_RES=9021;//回复兑换兑换
    MSGID_REQUEST_EXCHANGE_REQ=9022;//请求兑换
    MSGID_REQUEST_EXCHANGE_RES=9023;//回复兑换
    MSGID_REQUEST_EXCHANGELIST_REQ=9024;//请求兑换列表
    MSGID_REQUEST_EXCHANGELIST_RES=9025;//回复兑换列表
    MSGID_REQUEST_UNLIMITELIST_REQ=9026;//请求无限代列表
    MSGID_REQUEST_UNLIMITELIST_RES=9027;//回复无限代列表
    MSGID_REQUEST_UNLIMITEEXCHANGE_REQ=9028;//请求兑换
    MSGID_REQUEST_UNLIMITEEXCHANGE_RES=9029;//回复兑换
    MSGID_REQUEST_UNLIMITEXCHANGELIST_REQ=9030;//代理请求兑换列表
    MSGID_REQUEST_UNLIMITEXCHANGELIST_RES=9031;//代理回复兑换列表
    MSGID_REQUEST_UNLIMITEBIND_REQ=9032;//绑定推广关系
    MSGID_REQUEST_UNLIMITEBIND_RES=9033;//绑定推广关系回复
    MSGID_REQUEST_UNLIMITTRADER_REQ=9034;//请求成为代理
    MSGID_REQUEST_UNLIMITTRADER_RES=9035;//请求成为代理回复
    MSGID_REQUEST_UNLIMITSETAWARD_REQ=9036;//设置奖励
    MSGID_REQUEST_UNLIMITSETAWARD_RES=9037;//设置奖励回复
    MSGID_AUTO_KICK_S2C = 9099;//服务器踢人（长时间不下注）
   
   //GM相关20000
   MSGID_MODIFY_NIUNIU_CARD=20001;//修改牛牛下次出牌
   MSGID_MODIFY_NIUNIU_JACKPOT_COMMISSION=20002;//修改牛牛房间抽水率
    
    // 捕鱼相关段 from: 60000
    MSGID_CATCHFISH_JOIN_ROOM_RES = 60000;      /* 捕鱼加入房间 */
    MSGID_CATCHFISH_JOIN_ROOM_REQ = 60001;
    MSGID_CATCHFISH_QUIT_ROOM_RES = 60002;      /* 捕鱼退出房间 */
    MSGID_CATCHFISH_QUIT_ROOM_REQ = 60003;
    MSGID_CATCHFISH_SPAWN_FISH_RES = 60004;     /* 生成鱼 */
    MSGID_CATCHFISH_DELETE_FISH_RES = 60005;    /* 删除鱼 */
    MSGID_CATCHFISH_PLAYER_FIRE_RES = 60006;    /* 玩家射击 */
    MSGID_CATCHFISH_PLAYER_FIRE_REQ = 60007;    /* 玩家射击 */
    MSGID_CATCHFISH_UPDATE_PLAYER_RES = 60008;
    MSGID_CATCHFISH_ASYNC_FISHES_RES = 60009;   /* 同步房间的鱼 */
    MSGID_CATCHFISH_PLAYER_HIT_REQ = 60010;     /* 命中请求 */
    MSGID_CATCHFISH_PLAYER_HIT_RES = 60011;     /* 命中请求回复 */
    MSGID_CATCHFISH_CHANGE_ALL_FISH_PLAYSPEED = 60012;      /* 改变所有鱼动作播放速度 */
    MSGID_CATCHFISH_CHANGE_FISH_PLAYSPEED = 60013;      /* 改变鱼动作播放速度 */
    MSGID_CATCHFISH_LOCK_FISH_REQ = 60014; /* 玩家锁定鱼 */
    MSGID_CATCHFISH_LOCK_FISH_RES = 60015; /* 玩家锁定鱼 */
    MSGID_CATCHFISH_USE_SKILL_REQ = 60016; /* 玩家使用技能 */
    MSGID_CATCHFISH_USE_SKILL_RES = 60017; /* 玩家使用技能 */
	MSGID_CATCHFISH_SUPER_BGIN_RES = 60018; /* 钻头蟹技能开始 */
	MSGID_CATCHFISH_SUPER_BOMB_RES = 60019; /*钻头蟹爆炸*/
	MSGID_CATCHFISH_SUPER_FIRE_RES = 60020;/*钻头蟹发射*/
	MSGID_CATCHFISH_SUPER_FIRE_REQ = 60021; /*钻头蟹发射*/
	MSGID_CATCHFISH_FIRE_STROM_RES = 60022; /*烈焰风暴*/
	MSGID_CATCHFISH_ELECSTORM_BGIN_RES = 60023; /* 电磁蟹技能开始 */
    MSGID_CATCHFISH_ELECSTORM_BOMB_RES = 60024; /*电磁蟹爆炸*/
    MSGID_CATCHFISH_ELECSTORM_FIRE_RES = 60025;/*电磁蟹发射*/
    MSGID_CATCHFISH_ELECSTORM_FIRE_REQ = 60026; /*电磁蟹发射*/
    MSGID_CATCHFISH_MUlTI_BOMB_RES = 60027;     /*连环炸弹爆炸*/
    MSGID_CATCHFISH_ATTACKFISH_ATTACK_RES = 60028;     /*鳄鱼攻击*/
    
    //牛牛相关60500
    MSGID_NIUNIU_JOIN_ROOM=60501;           //进入房间
    MSGID_NIUNIU_EXIT_ROOM=60502;           //退出房间
    MSGID_NIUNIU_SIT_DOWN=60503;            //坐下
    MSGID_NIUNIU_BETTING=60504;             //下注SQGetRoomData
    MSGID_NIUNIU_GET_ROOM_DATA=60505;       //广播当前房间数据
    MSGID_NIUNIU_START_GAME=60506;       //广播开始游戏了
    MSGID_NIUNIU_OVER_GAME=60507;       //广播游戏结束一局
    MSGID_NIUNIU_STAND_UP=60508;       //从座位起来
    MSGID_NIUNIU_GET_TREND=60509;       //输赢走势
    MSGID_NIUNIU_GET_NO_SIT_PLAYER=60510;       //没坐下的玩家
    MSGID_NIUNIU_POOL_INFO=60511;     //水池详情
    MSGID_NIUNIU_GET_ZHUANG_LIST_PLAYER=60512;       //排队上庄的玩家
    
    //红黑大战相关61000
    MSGID_HHDZ_JOIN_ROOM=61001;           //进入房间
    MSGID_HHDZ_EXIT_ROOM=61002;           //退出房间
    MSGID_HHDZ_SIT_DOWN=61003;            //坐下
    MSGID_HHDZ_BETTING=61004;             //下注SQGetRoomData
    MSGID_HHDZ_GET_ROOM_DATA=61005;       //广播当前房间数据
    MSGID_HHDZ_START_GAME=61006;       //广播开始游戏了
    MSGID_HHDZ_OVER_GAME=61007;       //广播游戏结束一局
    MSGID_HHDZ_STAND_UP=61008;       //从座位起来
    MSGID_HHDZ_GET_TREND=61009;       //输赢走势
    MSGID_HHDZ_GET_NO_SIT_PLAYER=61010;       //没坐下的玩家
    MSGID_HHDZ_POOL_INFO=61011;     //水池详情

    //龙虎相关62000
    MSGID_LH_JOIN_ROOM=62001;           //进入房间
    MSGID_LH_EXIT_ROOM=62002;           //退出房间
    MSGID_LH_SIT_DOWN=62003;            //坐下
    MSGID_LH_BETTING=62004;             //下注SQGetRoomData
    MSGID_LH_GET_ROOM_DATA=62005;       //广播当前房间数据
    MSGID_LH_START_GAME=62006;       //广播开始游戏了
    MSGID_LH_OVER_GAME=62007;       //广播游戏结束一局
    MSGID_LH_STAND_UP=62008;       //从座位起来
    MSGID_LH_GET_TREND=62009;       //输赢走势
    MSGID_LH_GET_NO_SIT_PLAYER=62010;       //没坐下的玩家
    MSGID_LH_POOL_INFO=62011;     //水池详情

    //德州牛仔相关51000
    MSGID_COWBOY_JOIN_ROOM=51001;           //进入房间
    MSGID_COWBOY_EXIT_ROOM=51002;           //退出房间
    MSGID_COWBOY_SIT_DOWN=51003;            //坐下
    MSGID_COWBOY_BETTING=51004;             //下注SQGetRoomData
    MSGID_COWBOY_GET_ROOM_DATA=51005;       //广播当前房间数据
    MSGID_COWBOY_START_GAME=51006;       //广播开始游戏了
    MSGID_COWBOY_OVER_GAME=51007;       //广播游戏结束一局
    MSGID_COWBOY_STAND_UP=51008;       //从座位起来
    MSGID_COWBOY_GET_TREND=51009;       //输赢走势
    MSGID_COWBOY_GET_NO_SIT_PLAYER=51010;       //没坐下的玩家
    MSGID_COWBOY_POOL_INFO=51011;     //水池详情

    //街机游戏相关

    //急速时刻
    MSGID_JSSK_JOIN_ROOM = 63001;       //进入房间
    MSGID_JSSK_EXIT_ROOM = 63002;       //退出房间
    MSGID_JSSK_GET_ROOM_DATA = 63003;   //房间当前数据
    MSGID_JSSK_GAME_START = 63004;      //游戏开始
    MSGID_JSSK_GAME_OVER = 63005;        //游戏结束
    MSGID_JSSK_OWN_BET = 63006;     //自己下注
    MSGID_JSSK_ALL_BET = 63007;     //全区域下注
    MSGID_JSSK_IS_THE_LOTTERY = 63008; //正在开奖
    MSGID_JSSK_LOTTERY_RESULT = 63009;  //开奖结果
	MSGID_JSSK_AUTO_BET = 63010;//自动下注
	MSGID_JSSK_CLERA_BET = 63011;//清空下注
	MSGID_JSSK_GET_NO_SIT_PLAYER=63012;       //没坐下的玩家
    //疯狂水果
    MSGID_FKSG_JOIN_ROOM = 63101;       //进入房间
    MSGID_FKSG_EXIT_ROOM = 63102;       //退出房间
    MSGID_FKSG_GET_ROOM_DATA = 63103;   //房间当前数据
    MSGID_FKSG_GAME_START = 63104;      //游戏开始
    MSGID_FKSG_GAME_OVER = 63105;        //游戏结束
    MSGID_FKSG_OWN_BET = 63106;     //自己下注
    MSGID_FKSG_ALL_BET = 63107;     //全区域下注
    MSGID_FKSG_IS_THE_LOTTERY = 63108; //正在开奖
    MSGID_FKSG_LOTTERY_RESULT = 63109;  //开奖结果
	MSGID_FKSG_AUTO_BET = 63110;//自动下注
	MSGID_FKSG_CLERA_BET = 63111;//清空下注
	MSGID_FKSG_GET_NO_SIT_PLAYER=63112;       //没坐下的玩家
	//魔法宝石
	MSGID_MFBS_JOIN_ROOM = 63201;       //进入房间
    MSGID_MFBS_EXIT_ROOM = 63202;       //退出房间
    MSGID_MFBS_GET_ROOM_DATA = 63203;   //房间当前数据
    MSGID_MFBS_GAME_START = 63204;      //游戏开始
	MSGID_MFBS_GAME_OVER = 63205;        //游戏结束
    MSGID_MFBS_OWN_BET = 63206;     //自己下注
    MSGID_MFBS_ALL_BET = 63207;     //全区域下注
    MSGID_MFBS_IS_THE_LOTTERY = 63208; //正在开奖
    MSGID_MFBS_LOTTERY_RESULT = 63209;  //开奖结果
	MSGID_MFBS_AUTO_BET = 63210;//自动下注
	MSGID_MFBS_CLERA_BET = 63211;//清空下注
	MSGID_MFBS_GET_NO_SIT_PLAYER=63212;       //没坐下的玩家
	
	//战无不胜
	MSGID_ZWBS_JOIN_ROOM = 64001;       //进入房间
    MSGID_ZWBS_EXIT_ROOM = 64002;       //退出房间
    MSGID_ZWBS_GET_ROOM_DATA = 64003;   //房间当前数据
    MSGID_ZWBS_GAME_START = 64004;      //游戏开始
	MSGID_ZWBS_GAME_OVER = 64005;        //游戏结束
    MSGID_ZWBS_OWN_BET = 64006;     //自己下注
    MSGID_ZWBS_ALL_BET = 64007;     //全区域下注
    MSGID_ZWBS_IS_THE_LOTTERY = 64008; //正在开奖
    MSGID_ZWBS_LOTTERY_RESULT = 64009;  //开奖结果
	MSGID_ZWBS_AUTO_BET = 64010;//自动下注
	
	//五星宏辉
	MSGID_WXHH_JOIN_ROOM = 64101;       //进入房间
    MSGID_WXHH_EXIT_ROOM = 64102;       //退出房间
    MSGID_WXHH_GET_ROOM_DATA = 64103;   //房间当前数据
    MSGID_WXHH_GAME_START = 64104;      //游戏开始	
    MSGID_WXHH_OWN_BET = 64106;         //自己下注
    MSGID_WXHH_ALL_BET = 64107;         //全区域下注
	MSGID_WXHH_GAME_OVER = 64108;       //游戏结束
    MSGID_WXHH_IS_THE_LOTTERY = 64109;  //正在开奖   
	MSGID_WXHH_AUTO_BET = 64110;       //自动下注
	MSGID_WXHH_GET_NO_SIT_PLAYER=64111;       //没坐下的玩家
	
	//飞禽走兽
	MSGID_FQZS_JOIN_ROOM = 64201;		//进入房间
	MSGID_FQZS_EXIT_ROOM = 64202;		//退出房间
	MSGID_FQZS_GET_ROOM_DATA = 64203;	//房间当前数据
	MSGID_FQZS_GAME_START = 64204;		//游戏开始
	MSGID_FQZS_GAME_OVER = 64207;		//游戏结束
	MSGID_FQZS_OWN_BET = 64205;		//自己下注
	MSGID_FQZS_ALL_BET = 64206;			//全服下注
	MSGID_FQZS_IS_THE_LOTTERY = 64208;	//正在开奖
	MSGID_FQZS_AUTO_BET = 64209;		//自动下注
    MSGID_FQZS_GET_NO_SIT_PLAYER=64210;       //没坐下的玩家
	
    //众博赛马
    MSGID_ZBSM_JOIN_ROOM = 64301;       //进入房间
    MSGID_ZBSM_EXIT_ROOM = 64302;       //退出房间
    MSGID_ZBSM_GET_ROOM_DATA = 64303;   //房间当前数据
    MSGID_ZBSM_GAME_START = 64304;      //游戏开始
    MSGID_ZBSM_GAME_OVER = 64305;        //游戏结束
    MSGID_ZBSM_OWN_BET = 64306;     //自己下注
    MSGID_ZBSM_ALL_BET = 64307;     //全区域下注
    MSGID_ZBSM_IS_THE_LOTTERY = 64308; //正在开奖
    MSGID_ZBSM_LOTTERY_RESULT = 64309;  //开奖结果
    MSGID_ZBSM_AUTO_BET = 64310;//自动下注
    MSGID_ZBSM_CLERA_BET = 64311;//清空下注
	
	//斗地主 form:40001
	MSGID_LANDLORDS_JOIN_ROOM = 40001;	//进入房间
	MSGID_LANDLORDS_EXIT_ROOM = 40002;	//离开房间
	MSGID_LANDLORDS_GET_ROOM_DATA = 40003;	//获取房间数据
	MSGID_LANDLORDS_PLAYER_JOIN = 40004;	//玩家进入斗地主
	MSGID_LANDLORDS_GAME_START = 40005;		//游戏开始
	MSGID_LANDLORDS_PLAYER_ALLOW_OPERATE = 40006;	//玩家可执行操作
	MSGID_LANDLORDS_PLAYER_OPERATE = 40007;	//玩家操作
	MSGID_LANDLORDS_PLAYER_PLAYPOKER = 40008;//玩家出牌
	MSGID_LANDLORDS_GAME_OVER = 40009;	//游戏结束
	MSGID_UPDATE_LANDLORD_POKER = 40010;//更新抢地主成功玩家的牌
	MSGID_LANDLORDS_MULTIPLE_CHANGE = 40011;//当前倍数
	MSGID_LANDLORDS_CONTIUNE_GAME = 40012;//继续游戏
	MSGID_LANDLORDS_PLAYER_STATUS = 40013;//掉线,重连状态
	
	//炸金花 41000
	MSGID_GOLDFLOWER_JOIN_ROOM = 41001;	//进入房间
	MSGID_GOLDFLOWER_EXIT_ROOM = 41002;	//离开房间
	MSGID_GOLDFLOWER_GET_ROOM_DATA = 41003;	//获取房间数据
	MSGID_GOLDFLOWER_PLAYER_JOIN = 41004;	//玩家进入炸金花
	MSGID_GOLDFLOWER_GAME_START = 41005;		//游戏开始	
	MSGID_GOLDFLOWER_COMPARE_POKER = 41006;//比牌	
	MSGID_GOLDFLOWER_ALWAYS_FOLLOW = 41007;//跟到底
	MSGID_GOLDFLOWER_GAME_OVER = 41009;	//游戏结束
	MSGID_GOLDFLOWER_ALL_BET=41008;//全部下注  
    MSGID_GOLDFLOWER_GIVE_UP = 41010; //弃牌
    MSGID_GOLDFLOWER_LOOK_CART = 41011;//看牌
    MSGID_GOLDFLOWER_ADD_SCORE = 41012;//加注
    MSGID_GOLDFLOWER_GAME_ABOUT_START = 41013;//游戏即将开始
   
   
};

/* RankType version:1.3.0*/
enum RankType 
{
   WINRANK = 1;     /* 赌神榜  version:1.3.0*/
   WEALTHRANK = 2;  /* 财富榜  version:1.3.0*/
   WINRANKBy7 = 3;  /* 赌神榜7天  version:1.3.0*/
   BANKERS = 4; /* 银商榜  version:1.3.0*/
};

/* LoginResDef version:1.3.0*/
enum LoginResDef 
{
    CS_LOGIN_SUCCESS = 0; 
    CS_LOGIN_ERROR = 1; 
    CS_LOGIN_DISABLE = 2; 
};

/* PayType version:1.3.0*/
enum PayType 
{
    PAYTYPE_ADUITINGPAY = 1;    /* 审核服充值  version:1.3.0*/
    PAYTYPE_OFFICIALPAY = 2;    /* 正式服充值  version:1.3.0*/
    PAYTYPE_RECOMMENDPAY = 3;   /* 正式服推荐充值  version:1.3.0*/
    PAYTYPE_PIGPAY = 4;     /* 正式服金猪充值  version:1.3.0*/
};

/* SYSTEMRESULT version:1.3.0*/
enum SYSTEMRESULT 
{
    SUCCESS_GENERAL = 10000;    /* 成功  version:1.3.0*/
    FAILURE_GENERAL = 10001;    /* 失败  version:1.3.0*/
    ERR_PASSPORT_PWD = 10002;   /* 账号与密码不符，请重新输入  version:1.3.0*/
    ERR_VERSION_UPDATE = 10003;     /* 游戏版本有更新  version:1.3.0*/
    ERR_ALREADY_LOGIN = 10004;  /* 账号已经在其他设备登陆  version:1.3.0*/
    ERR_NOTCONNECTED = 10005;   /* 无法连接服务器  version:1.3.0*/
    ERR_SERVER_MAINTAIN = 10006;    /* 服务器维护中  version:1.3.0*/
    ERR_PASSPORT_NOTEXIST = 10007;  /* 账号不存在，请重新输入  version:1.3.0*/
    ERR_PASSPORT_FORMAT = 10008;    /* 输入的昵称不符合规范，请重新输入  version:1.3.0*/
    ERR_EMAIL_FORMAT = 10009;   /* 您输入的邮箱格式错误，请重新输入  version:1.3.0*/
    ERR_PASSWORD_NOTSAME = 10011;   /* 您输入的密码不符合规范，请重新输入  version:1.3.0*/
    ERR_EMAIL_EXIST = 10012;    /* 该邮箱已经被使用，请重新输入  version:1.3.0*/
    ERR_JOINROOM = 10013;   /* 进入房间失败，请重试  version:1.3.0*/
    ERR_LEVEL_LOW = 10014;  /* 等级不足，无法进入房间  version:1.3.0*/
    ERR_CHIP_LOW_NOTSEAT = 10015;   /* 筹码不足，无法入座  version:1.3.0*/
    ERR_CHIP_TIMEOUT = 10016;   /* 下注时间到，无法下注  version:1.3.0*/
    ERR_CHIP_PAY = 10017;   /* 购买筹码失败，请重试  version:1.3.0*/
    ERR_CHIP_LOW = 10018;   /* 筹码不足  version:1.3.0*/
    ERR_IN_ROOM = 10019;    /* 已在房间中，请稍等重试  version:1.3.0*/
    ERR_NOT_ROOM = 10020;   /* 无可围观的房间，请稍后重试  version:1.3.0*/
    ERR_CHIP_NETWORK_TIMEOUT = 10021;   /* 网络超时，下注失败  version:1.3.0*/
    ERR_ABOVE_MAXCHIP = 10022;  /* 超出限红上限  version:1.3.0*/
    ERR_NETWORK_TIMEOUT = 10023;    /* 网络超时  version:1.3.0*/
    ERR_GAME_NOTREADY = 10024;  /* 游戏暂未开放  version:1.3.0*/
    ERR_PLAYINFO = 10025;   /* 获取玩家信息失败  version:1.3.0*/
    ERR_FRIEND_ADD = 10026;     /* 添加好友失败，请重试  version:1.3.0*/
    ERR_HEADICON_PAY = 10027;   /* 购买头像失败，请重试  version:1.3.0*/
    ERR_HEADICON_GET = 10028;   /* 获取头像信息失败  version:1.3.0*/
    ERR_FACEBOOK_GET = 10029;   /* 获取facebook信息失败  version:1.3.0*/
    ERR_RANKLIST_GET = 10030;   /* 获取排名信息失败  version:1.3.0*/
    ERR_TIME_NOT = 10031;   /* 领取时间未到  version:1.3.0*/
    ERR_CHIP_ABOVEMAX = 10032;  /* 今日领取好友筹码达到上限  version:1.3.0*/
    ERR_BLACK_INSURANCE_ERR = 10300;    /* 当前不能购买保险  version:1.3.0*/
    ERR_CHAT_TEXT = 10033;  /* vip1及以上玩家才可使文字聊天  version:1.3.0*/
    ERR_CHAT_EMOJI = 10034;     /* vip2及以上玩家才可使表情聊天  version:1.3.0*/
    ERR_CHAT_INTERACT = 10035;  /* vip3及以上玩家才可使用互动表情  version:1.3.0*/
    ERR_FRIEND_NOTFOUND = 10036;    /* 该ID不存在，请重新输入  version:1.4.0*/
    ERR_FRIENDCOUNTS_OVERLIMIT = 10037;     /* 好友人数已达上限，请先删除一些好友  version:1.4.0*/
    ERR_RECIEVECOUNTS_OVERLIMIT = 10038;    /* 今日收取免费筹码次数已达上限  version:1.4.0*/
    ERR_FRIEND_HAVESEND = 10039;    /* 今天已经给好友赠送过筹码了，明天再试  version:1.4.0*/
    ERR_VIPLEVEL_LOW = 10040;   /* VIP等级不足  version:1.5.0*/
    ERR_LOTTO_LOW = 10041;  /* 积分等级不足  version:1.5.0*/
    ERR_ITEMNOTENOUGH_LOW = 10042;  /* 兑换物品不足  version:1.5.0*/
    ERR_EXCHANGE_FAIL=10043;     /*钻石不足*/
    ERR_CHANGE_NAME_FAIL=10044;     /*改名钱不够*/
    ERR_APPLIED_FALL=10064;         /*已经申请添加好友*/
    ERR_APPLY_FALL=2172;            /*申请好友失败*/
    ERR_SAME_NICKNAME=10045;        /*该昵称已经存在*/
    ERR_PHONENUMBER=10046;          /*手机号错误*/
    ERR_OLDPASSWORD=10047;          /*旧密码错误*/
    ERR_FORBIDDEN=10048;            /*封号*/
    ERR_TRADE_FAIL=10049;           /*赠送失败，请检查对方ID*/
    ERR_CHECKID_FAIL=10050;         /*检查的ID不存在或非法*/
    ERR_TRADE_NO_AUTHORITY=10051;   /*您的账号无赠送权限*/
    ERR_REDEEM_FAIL_CODE=10052;     /*兑换码不存在*/
    ERR_REDEEM_FAIL_GOT=10053;      /*兑换码已使用过*/
    ERR_PHONE_USED_TOO_MUCH=10054;      /*电话使用次数太多*/
    ERR_PLAYER_LOGIN_OTHER_LOCAL=10055;      /*顶号*/
    ERR_ACTIONCODE_CHIPS_LOW=10056;      /*钱低于激活码使用限制*/
    ERR_ACTIONCODE_CHIPS_HIGH=10057;      /*钱高于激活码使用限制*/
    ERR_ACTIONCODE_DAY_LIMIT=10058;      /*激活码已达每日使用上限*/
    ERR_TRADE_PASSWORD=10059;             /*密码错误，转账失败*/
    RESULT_SHANGZHUANG_SUCCESS=60024;             /*上庄成功*/
    ERR_BETTING_ZHUANG=60025;             /*庄家不能下注*/
    RESULT_XIAZHUANG_READY=60020;             /*准备下庄成功*/
    RESULT_XIAZHUANG_LIST=60027;             /*离开下庄列表成功*/
    RESULT_PHONE_EXISTS=60128;                /*手机已经綁定*/
    RESULT_CHECK_CODE_FALSE=60129;                /*验证码错误*/
    ERROR_ULIMITED_ABOVE=60028;             /*设置奖励超过最大*/
    RESULT_ULIMITED_BELOW=60029;             /*设置奖励超过最小*/
    RESULT_ULIMITED_NOTCHILD=60030;             /*不是自己的直属下级*/
};

/* GoodsSignType version:1.3.0*/
enum GoodsSignType 
{
    NONESIGN = 0; /* 默认  version:1.3.0*/
    BESTVALUE = 1; /* 最划算  version:1.3.0*/
    FIRSTBUY = 2; /* 首充  version:1.3.0*/
};

/* RechargeType version:1.3.0*/
enum RechargeType 
{
    APPROVAL = 1; /* 审核服充值标识  version:1.3.0*/
    FORMAL = 2; /* 正式服充值标识  version:1.3.0*/
    RECOMMEND = 3; /* 推荐充值标识  version:1.3.0*/
    PIGBANK = 4; /* 金猪充值标识  version:1.3.0*/
};

/* PayChannel version:1.3.0*/
enum PayChannel 
{
    PAYCHANNEL_IOS_APPLE = 0; /* iOS苹果官方充值  version:1.3.0*/
    PAYCHANNEL_IOS_WEIXIN = 1; /* iOS微信充值  version:1.3.0*/
    PAYCHANNEL_IOS_ZHIFUBAO = 2; /* iOS支付宝充值  version:1.3.0*/
    PAYCHANNEL_IOS_AIBEI = 3; /* iOS爱贝充值  version:1.3.0*/
    PAYCHANNEL_ANDRIOD_WEIXIN = 4; /* 安卓微信充值  version:1.3.0*/
    PAYCHANNEL_ANDRIOD_ZHIFUBAO = 5; /* 安卓支付宝充值  version:1.3.0*/
    PAYCHANNEL_ANDRIOD_AIBEI = 6; /* 安卓爱贝充值  version:1.3.0*/
};

/* BJL_RoomStateMachineType version:1.3.0*/
enum BJL_RoomStateMachineType 
{
    READY = 1;  /* 下注前,准备  version:1.3.0*/
    STARTCHIPS = 2;     /* 正在下注,开始下注  version:1.3.0*/
    STOPCHIPS = 3;  /* 下注后，游戏中,停止下注  version:1.3.0*/
    STARTVS = 4;    /* 开牌或咪牌  version:1.3.0*/
};

/* BJL_RoomSubState version:1.3.0*/
enum BJL_RoomSubState 
{
    MIPAI = 1;  /* 咪牌中  version:1.3.0*/
    WHOWIN = 2;     /* 游戏结果  version:1.3.0*/
    GETCHIPS = 3;   /* 收筹码  version:1.3.0*/
};

/* BJL_PokerIndex version:1.3.0*/
enum BJL_PokerIndex 
{
    PLAYER_1 = 1;   /* 闲1  version:1.3.0*/
    BANKER_1 = 2;   /* 庄1  version:1.3.0*/
    PLAYER_2 = 3;   /* 闲2  version:1.3.0*/
    BANKER_2 = 4;   /* 庄2  version:1.3.0*/
    BUPAI_1 = 5;    /* 补牌1  version:1.3.0*/
    BUPAI_2 = 6;    /* 补牌2  version:1.3.0*/
};

/* BJL_ChipsType version:1.3.0*/
enum BJL_ChipsType 
{
    BANKER = 1;     /* 庄  version:1.3.0*/
    PLAYER = 2;     /* 闲  version:1.3.0*/
    TIE = 3;    /* 和  version:1.3.0*/
    BANKPAIR = 4;   /* 庄对  version:1.3.0*/
    PLAYPAIR = 5;   /* 闲对  version:1.3.0*/
};

/* BJL_VSType version:1.3.0*/
enum BJL_VSType 
{
    PLAYER1 = 1;    /* 闲  version:1.3.0*/
    BANKER1 = 2;    /* 庄  version:1.3.0*/
};

/* BJL_GameState version:1.3.0*/
enum BJL_GameState 
{
    BJL_GAMESTATE_READY = 0;    /* 准备中  version:1.3.0*/
    BJL_GAMESTATE_CHIPIN = 1;   /* 下注中  version:1.3.0*/
    BJL_GAMESTATE_NORMAL = 2;   /* 庄闲各两张牌  version:1.3.0*/
    BJL_GAMESTATE_BANKERANDPLAYER = 3;  /* 庄闲一起补  version:1.3.0*/
    BJL_GAMESTATE_BANKER = 4;   /* 庄补  version:1.3.0*/
    BJL_GAMESTATE_PLAYER = 5;   /* 闲补  version:1.3.0*/
    BJL_GAMESTATE_PLAYER_BANKER = 6;    /* 闲先补，再补庄  version:1.3.0*/
    BJL_GAMESTATE_GAMEEND = 7;  /* 等待游戏结果  version:1.3.0*/
    BJL_GAMESTATE_SHUFFLE = 8;  /* 洗牌中  version:1.3.0*/
};

/* BJL_MiPaiDirection version:1.3.0*/
enum BJL_MiPaiDirection 
{
    UP = 1;     /* 上  version:1.3.0*/
    RIGHTUP = 2;    /* 右上  version:1.3.0*/
    RIGHT = 3;  /* 右  version:1.3.0*/
    RIGHTDOWN = 4;  /* 右下  version:1.3.0*/
    DOWN = 5;   /* 下  version:1.3.0*/
    LEFTDOWN = 6;   /* 左下  version:1.3.0*/
    LEFT = 7;   /* 左  version:1.3.0*/
    LEFTUP = 8;     /* 左上  version:1.3.0*/
};

/* BJL_MessageFormat version:1.3.0*/
enum BJL_MessageFormat 
{
    TEXT = 1;   /* 文本  version:1.3.0*/
    EMOJI = 2;  /* 表情  version:1.3.0*/
    INTERACT = 3;   /* 互动表情  version:1.3.0*/
};

/* BJL_MessageType version:1.3.0*/
enum BJL_MessageType 
{
    IM = 1;     /* 喊话  version:1.3.0*/
    NOTIFY = 2;     /* 通知  version:1.3.0*/
    HORSELAMP = 3;  /* 跑马灯  version:1.3.0*/
};

/* VP_VSResult version:1.3.0*/
enum VP_VSResult 
{
    WUTIAO = 1;     /* 五条  version:1.3.0*/
    TONGHUADASHUN = 2;  /* 同花大顺  version:1.3.0*/
    TONGHUASHUN = 3;    /* 同花顺  version:1.3.0*/
    SITIAO = 4;     /* 四条  version:1.3.0*/
    HULU = 5;   /* 葫芦  version:1.3.0*/
    TONGHUA = 6;    /* 同花  version:1.3.0*/
    SHUNZI = 7;     /* 顺子  version:1.3.0*/
    SANTIAO = 8;    /* 三条  version:1.3.0*/
    LIANGDUI = 9;   /* 两对  version:1.3.0*/
    UPYIDUISHI = 10;    /* 一对10以上  version:1.3.0*/
};

/* VP_GameState version:1.3.0*/
enum VP_GameState 
{
    GAMEREADY = 1;  /* 游戏准备，等待玩家下注  version:1.3.0*/
    BETCOMPLETED = 2;   /* 已下注，等待换牌  version:1.3.0*/
    CHANGECOMPLETED = 3;    /* 已换牌，等待猜星  version:1.3.0*/
};

/* Black_OperateType version:1.3.0*/
enum Black_OperateType 
{
    BLACK_INSURANCE = 1;    /* 保险  version:1.3.0*/
    BLACK_DOUBLE = 2;   /* 双倍  version:1.3.0*/
    BLACK_SPLIT = 3;    /* 分牌  version:1.3.0*/
    BLACK_HIT = 4;  /* 要牌  version:1.3.0*/
    BLACK_STAND = 5;    /* 停牌  version:1.3.0*/
};

/* Black_gameStateType version:1.3.0*/
enum Black_gameStateType 
{
    STATE_BETING = 1;   /* 下注中  version:1.3.0*/
    STATE_PLAYEROPER = 2;   /* 等待玩家操作中  version:1.3.0*/
    STATE_SENDINGCARD = 3;  /* 正在发牌  version:1.3.0*/
    STATE_BANKEROPER = 4;   /* 庄家操作中  version:1.3.0*/
};

/* BlackJack_RoomStateMachineType version:1.3.0*/
enum BlackJack_RoomStateMachineType 
{
    BLACKJACKREADY = 1;     /* 下注前,准备  version:1.3.0*/
    BLACKJACKSTARTCHIPS = 2;    /* 正在下注,开始下注  version:1.3.0*/
    ASSIGNPOKERFIRST = 3;   /* 每人发两张牌的阶段  version:1.3.0*/
    INSURANCEWAITING = 4;   /* 购买保险阶段  version:1.3.0*/
    PLAYEROPER = 5;     /* 玩家要牌阶段  version:1.3.0*/
    BANKEROPER = 6;     /* 庄家要牌阶段  version:1.3.0*/
    BLACKJACKGAMEEND = 7;   /* 结算阶段  version:1.3.0*/
};

/* Black_TimerType version:1.3.0*/
enum Black_TimerType 
{
    TIMER_BET = 1;  /* 下注倒计时  version:1.3.0*/
    TIMER_INSURE = 2;   /* 保险倒计时  version:1.3.0*/
    TIMER_OPER = 3;     /* 操作倒计时  version:1.3.0*/
};

/* MailState version:1.3.0*/
enum MailState 
{
    RECEIVED = 1;   /* 已领取  version:1.3.0*/
    UNRECEIVE = 2;  /* 未领取  version:1.3.0*/
};

/* MailType version:1.3.0*/
enum MailType 
{
    SYSTEM = 0;         /* 普通系统邮件  version:1.5.0*/
    DELETEIMMIDIATE=1;      /* 阅后即焚邮件  version:1.5.0*/
    FRIEND = 2;         /* 好友邮件  version:1.5.0*/  
};

/* MailAttachType version:1.5.0*/
enum MailAttachType 
{
    NONE=0;         /* 无  version:1.5.0*/
    CHIPS = 1;               /* 筹码  version:1.5.0*/
    HORN=2;         /* 喇叭  version:1.5.0*/      
    DIAMOND=3;          /* 钻石  version:1.5.0*/      
};

enum PlayMode
{
  Baccarat=0;
  BlackJack=1;
  Slots=2;
  VideoPoker=3;
  CatchFish=4;
  BaiRenNiuNiu=5;
}
/* FriendState version:1.3.0*/
enum FriendState 
{
    OFFLINE = 0;    /* 离线  version:1.3.0*/
    ONLINE = 1;     /* 大厅  version:1.3.0*/
    INBACCARAT = 2;     /* 百家乐游戏中  version:1.3.0*/
    INBLACKJACK = 3;    /* 21点游戏中  version:1.3.0*/
    INSLOTS = 4;    /* 老虎机游戏中  version:1.3.0*/
    INVIDEOPOKER = 5;   /* 翻牌机游戏中  version:1.3.0*/
};

/* FriendPermissionState version:1.3.0*/
enum FriendPermissionState 
{
    OPEN = 1;   /* 开启  version:1.3.0*/
    CLOSE = 2;  /* 关闭  version:1.3.0*/
};

/* MailDelete_Type version:1.5.0*/
enum Email_Operate_Type 
{
    READ = 1;           /* 阅读  version:1.5.0*/
    GETREWARDS = 2;         /* 领取奖励  version:1.5.0*/
    DELETE = 3;         /* 删除  version:1.5.0*/
};

/* Achievement version:1.3.0*/
enum Achievement 
{
    MPZW_1 = 1;     /* 咪牌之王1  version:1.3.0*/
    MPZW_2 = 2;     /* 咪牌之王2  version:1.3.0*/
    MPZW_3 = 3;     /* 咪牌之王3  version:1.3.0*/
    CSCD_1 = 4;     /* 成双成对1  version:1.3.0*/
    CSCD_2 = 5;     /* 成双成对2  version:1.3.0*/
    CSCD_3 = 6;     /* 成双成对3  version:1.3.0*/
    HPGC_1 = 7;     /* 和平共处1  version:1.3.0*/
    HPGC_2 = 8;     /* 和平共处2  version:1.3.0*/
    HPGC_3 = 9;     /* 和平共处3  version:1.3.0*/
    HJYS_1 = 10;    /* 黄金右手1  version:1.3.0*/
    HJYS_2 = 11;    /* 黄金右手2  version:1.3.0*/
    HJYS_3 = 12;    /* 黄金右手3  version:1.3.0*/
    JXJY_1 = 13;    /* 极限金运1  version:1.3.0*/
    JXJY_2 = 14;    /* 极限金运2  version:1.3.0*/
    JXJY_3 = 15;    /* 极限金运3  version:1.3.0*/
    SCJ_1 = 16;     /* 收藏家1  version:1.3.0*/
    SCJ_2 = 17;     /* 收藏家2  version:1.3.0*/
    SCJ_3 = 18;     /* 收藏家3  version:1.3.0*/
    XGCC_1 = 19;    /* 星光璀璨1  version:1.3.0*/
    XGCC_2 = 20;    /* 星光璀璨2  version:1.3.0*/
    XGCC_3 = 21;    /* 星光璀璨3  version:1.3.0*/
    STZFZ_1 = 22;   /* 四条征服者1  version:1.3.0*/
    STZFZ_2 = 23;   /* 四条征服者2  version:1.3.0*/
    STZFZ_3 = 24;   /* 四条征服者3  version:1.3.0*/
    THSZFZ_1 = 25;  /* 同花顺征服者1  version:1.3.0*/
    THSZFZ_2 = 26;  /* 同花顺征服者1  version:1.3.0*/
    THSZFZ_3 = 27;  /* 同花顺征服者1  version:1.3.0*/
    HJTHSZFZ_1 = 28;    /* 皇家同花顺获得者1  version:1.3.0*/
    HJTHSZFZ_2 = 29;    /* 皇家同花顺获得者2  version:1.3.0*/
    HJTHSZFZ_3 = 30;    /* 皇家同花顺获得者3  version:1.3.0*/
    FPJZW_1 = 31;   /* 翻牌机之王1  version:1.3.0*/
    FPJZW_2 = 32;   /* 翻牌机之王2  version:1.3.0*/
    FPJZW_3 = 33;   /* 翻牌机之王3  version:1.3.0*/
    BJZW_1 = 34;    /* 败家之王1  version:1.3.0*/
    BJZW_2 = 35;    /* 败家之王2  version:1.3.0*/
    BJZW_3 = 36;    /* 败家之王3  version:1.3.0*/
    CFZW_1 = 37;    /* 财富之王1  version:1.3.0*/
    CFZW_2 = 38;    /* 财富之王2  version:1.3.0*/
    CFZW_3 = 39;    /* 财富之王3  version:1.3.0*/
    JPDS_1 = 40;    /* 金牌赌圣1  version:1.3.0*/
    JPDS_2 = 41;    /* 金牌赌圣2  version:1.3.0*/
    JPDS_3 = 42;    /* 金牌赌圣3  version:1.3.0*/
    ZZDS_1 = 43;    /* 至尊赌神1  version:1.3.0*/
    ZZDS_2 = 44;    /* 至尊赌神2  version:1.3.0*/
    ZZDS_3 = 45;    /* 至尊赌神3  version:1.3.0*/
    HJK_1 = 46;     /* 黑杰克1  version:1.3.0*/
    HJK_2 = 47;     /* 黑杰克2  version:1.3.0*/
    HJK_3 = 48;     /* 黑杰克3  version:1.3.0*/
    NIUNIU_1 = 49;  /* 牛大魔王  version:1.3.0*/
    NIUNIU_2 = 52;  /* 牛气冲天  version:1.3.0*/
};

/* TopSmallMarqueeType version:1.3.0*/
enum TopSmallMarqueeType 
{
    BACCARAT_MAXWINCHIPS = 1;   /* 百家乐最大赢取筹码  version:1.3.0*/
    BACCARAT_MAXWINPLAYER = 2;  /* 百家乐最大赢取玩家  version:1.3.0*/
    SLOT_CURJACKPOTWINNER = 3;  /* slot最近jackpot得主  version:1.3.0*/
    SLOT_JACKPOTCOUNT = 4;  /* slot今日jackpot次数  version:1.3.0*/
    SLOT_MEGAWINCOUNT = 5;  /* slot今日megawin次数  version:1.3.0*/
    VIDEOPOKER_MAXWIN = 6;  /* 翻牌机今日最大赢取筹码  version:1.3.0*/
    VIDEOPOKER_ABOVEFIVESTARCOUNT = 7;  /* 翻牌机五星以上次数  version:1.3.0*/
    VIDEOPOKER_ABOVESITIAOCOUNT = 8;    /* 翻牌机四条以上次数  version:1.3.0*/
    BLACKJACK_COUNT = 9;    /* 出现黑杰克次数  version:1.3.0*/
    BLACKJACK_BIGWINNER = 10;   /* 今日21点最大赢家  version:1.3.0*/
    NiuNiu_BIGWIN=11;           /*百人牛牛每日当前最大赢取*/
    HHDZ_BIGWIN=12;             /*红黑大战每日当前最大赢取*/
    CATCHFISH_BOSS=13; /*捕鱼抓住了BOSS*/
    COWBOY_BIGWIN=14; /*德州牛仔每日当前最大赢取*/
	COWBOY_MAXWINPLAYER  = 15;
	JSSK_BIGWIN = 16;
	JSSK_MAXWINPLAYER = 17;
	MFBS_BIGWIN = 18;
	MFBS_MAXWINPLAYER = 19;
	FKSG_BINGWIN = 20;
	FKSG_MAXWINPLAYER = 21;
	WXHH_BIGWIN = 22;
	WXHH_MAXWINPLAYER = 23;
	FQZS_BIGWIN = 24;
	FQZS_MAXWINPLAYER= 25;
	SEAKING1_BOSS = 26;
	SEAKING2_BOSS = 27;
	LH_BIGWIN = 28;
	LH_MAXWINPLAYER = 29;
};

/* BottomSmallMarqueeType version:1.3.0*/
enum BottomSmallMarqueeType 
{
    BACCARAT_PAIR = 1;  /* 百家乐押对  version:1.3.0*/
    BACCARAT_TIE = 2;   /* 百家乐和  version:1.3.0*/
    BACCARAT_WINNER = 3;    /* 百家乐赢得x筹码以上  version:1.3.0*/
    SLOT_JACKPOT = 4;   /* 获得jackpot  version:1.3.0*/
    SLOT_MEGAWIN = 5;   /* 获得megawin  version:1.3.0*/
    SLOT_BIGWIN = 6;    /* 获得bigwin  version:1.3.0*/
    SLOT_FREESPIN = 7;  /* 获得freespin  version:1.3.0*/
    VIDEOPOKER_ABOVESTAR = 8;   /* 翻牌机X星以上  version:1.3.0*/
    VIDEOPOKER_FLUSH = 9;   /* 翻牌机出现同花以上  version:1.3.0*/
    BLACKJACK_BLACKJACK = 10;   /* 获得21点  version:1.3.0*/
    BLACKJACK_WINNER = 11;  /* 21点赢得x筹码以上  version:1.3.0*/
    NIUNIU_WXN=12;          /*百人牛牛押中五小牛*/
    CATCHFISH_BIGFISh=13; /*捕鱼抓住了大鱼*/
};

/* 兑换结果类型*/
enum Exchange_Operate_Type
{
    PROCESSS = 1;           /* 处理中*/
    SUCSECSS = 2;       /* 兑换成功*/
};

/* 兑换类型*/
enum Exchange_Account_Type
{
    CARD = 1;           /* 银行卡*/
    ALLIPAY = 2;        /* 支付宝*/
    INGAME = 3;         /* 游戏筹码*/
};

//注册服务器
message SQRegisterServer {
    optional string SererType = 1;
}

//广播数据更改
message SQBroadcastModifyData {
    optional int32 PlayerId = 1;
}

//金猪更改奖池
message SQBroadcastSlotsModifyData {
   optional int32 PlayerId = 1;
   optional int32 savepigmoney = 2;
}

/* MSGID_TEAM_START_GAME_REQ  version:1.3.0*/
message FLTeamStartGameReq
{
   optional int32  iActorID = 1;                        /*   队长ID  version:1.3.0*/
};

/* MSGID_ADDITEM_REQ  version:1.3.0*/
message FLTestAddItem
{
   optional int32  iItemID = 1;                         /*   物品ID  version:1.3.0*/
};

/* MSGID_BROADCAST_RES  version:1.3.0*/
message CSBroadcastRes
{
   optional int32  iType = 1;                           /*   消息类型  version:1.3.0*/
   optional string  szMsg = 2;                          /*   消息内容  version:1.3.0*/
};

/* 7天连续登陆奖励消息推送  version:1.3.0*/
message ContinuesLoginRes
{
   optional int32  iDayIndex = 1;                       /*   当前是第几天  version:1.3.0*/
   optional int32  iChips = 2;                          /*   可领取筹码数  version:1.3.0*/
};

/* VIP玩家每日登陆额外赠送筹码的消息推送MSGID_VIP_EXTRAREWARDS_RES--  version:1.4.0*/
message VipExtraRewardsRes
{
   optional int32 iChipsCount = 1;          /*   VIP每日登陆赠送的筹码数量  version:1.4.0*/
};

/* LongType  version:1.3.0*/
message LongType
{
   optional int64 iLongValue = 1;                 
};

/* MSGID_NOTICE_REQ  version:1.3.0*/
message CSNoticeReq
{
   optional int32 iActorId = 1;                   
};

/* 公告  version:1.3.0*/
message NoticeItem
{
   optional string  szMsgxml = 1;                       /*   xml  version:1.3.0*/
   optional int32 iPriority = 2;                  
};

/* MSGID_NOTICE_RES  version:1.3.0*/
message CSNoticeRes
{
   optional int32  iNum = 1;                            /*   个数 0表示结束  version:1.3.0*/
   repeated NoticeItem  astNoticeItems = 2;                 /*   公告  version:1.3.0*/
};

/* MSGID_PING  version:1.3.0*/
message FLCSPing
{
   optional float  fTimeStamp = 1;                      /*   时间戳  version:1.3.0*/
   optional uint32  dwPingCount = 2;                    /*   次数  version:1.3.0*/
   optional uint32  dwServerTick = 3;                   /*   服务器对时  version:1.3.0*/
   optional int32  iActorID = 4;                        /*   玩家ID  version:1.3.0*/
   optional string Ip=5;                                 /*客户端Ip*/
};

/* MSGID_PING  version:1.3.0*/
message ServerPing
{
   optional float  fTimeStamp = 1;                      /*   时间戳  version:1.3.0*/
   optional uint32  dwPingCount = 2;                    /*   次数  version:1.3.0*/
   optional uint32  dwServerTick = 3;                   /*   服务器对时  version:1.3.0*/
   optional int32  iServerId = 4;                       /*   游戏服务器id  version:1.3.0*/
};

/* MSGID_RECONNECT_REQ  version:1.3.0*/
message FLCSReconnectReq
{
   optional int32  iActorID = 1;                        /*   玩家ID  version:1.3.0*/
   optional string  szToken = 2;                        /*   验证码  version:1.3.0*/
};

/* MSGID_RECONNECT_RES  version:1.3.0*/
message FLCSReconnectRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional string  szToken = 2;                        /*   验证码  version:1.3.0*/
};

/* 登陆请求  version:1.3.0*/
message CGameLoginReq
{
   optional string  szloginType = 1;                    /*   guest游客 wechat微信 facebook脸书  version:1.3.0*/
   optional string  szloginID = 2;                      /*   guest:设备id,微信:openid,fb:fbID  version:1.3.0*/
   optional string  szloginToken = 3;                   /*   guest:设备id+时间MD5,微信:accesstoken,fb:fbtoken  version:1.3.0*/
   optional string  szdeviceToken = 4;                  /*   设备推送token  version:1.3.0*/
   optional int32  iplatformID = 5;                     /*   1:Android 2:iOS 3:编辑器  version:1.3.0*/
   optional string  szversion = 6;                      /*   客户端版本  version:1.3.0*/
   optional string  szversionid = 7;                    /*   客户端版本id，区分渠道的，1001：百乐宫娱乐场，1002：百乐宫娱乐城  version:1.3.0*/
   optional string  ip = 8;                              /*   客户端发的IP */
};

/* 登陆返回  version:1.3.0*/
message CGameLoginRes
{
   optional int32  iResultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional int32  iActorID = 2;                        /*   用户唯一ID  version:1.3.0*/
   optional string  szSvrToken = 3;                     /*   服务器返回的token,用于重连  version:1.3.0*/
};

/* 充值基本数据  version:1.3.0*/
message RechargeData
{
   optional int32  iID = 1;                             /*   ID(我们自己的表里面的ID)  version:1.3.0*/
   optional string  szitemID = 2;                       /*   充值ID（苹果的商品ID）  version:1.3.0*/
   optional int32  iitemType = 3;                       /*   充值类型1.表示审核服 2表示正式服 3表示推荐充值 4.表示砸金猪  version:1.3.0*/
   optional int32  ichipsBase = 4;                      /*   打折或活动之前的原始筹码数  version:1.3.0*/
   optional int32  ichipsCount = 5;                     /*   充值实际获得的筹码数量（打折活动之后的实际数量）  version:1.3.0*/
   optional float  fsellCount = 6;                      /*   打折力度，不打折为0  version:1.3.0*/
   optional int32  ibestValue = 7;                      /*   特殊显示符号（0表示没有任何标识，1表示最划算，2表示首充）  version:1.3.0*/
   optional float  fdollor = 8;                         /*   花费的金额(美元)  version:1.3.0*/
   optional int32  iextraChip = 9;                      /*   充值额外筹码  version:1.3.0*/
   optional int32  iextraLottery = 10;                  /*   充值获得积分  version:1.4.0*/
};

/* 请求充值数据  version:1.3.0*/
message RechargeDataReq
{
   optional int32  ipayType = 1;                        /*   充值类型1.表示审核服 2表示正式服 3表示推荐充值 4.表示砸金猪  version:1.3.0*/
};

/* 充值数据返回  version:1.3.0*/
message RechargeDataRes
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   repeated RechargeData  astrechargeData = 2;              /*   充值数据列表  version:1.3.0*/
};

/* 充值订单请求  version:1.3.0*/
message RechargeReq
{
   optional int32  iPayID = 1;                          /*   ID:100001  version:1.3.0*/
   optional int32  iPayType = 2;                        /*   充值类型1.表示审核服 2表示正式服 3表示推荐充值 4.表示砸金猪  version:1.3.0*/
   optional string  szVersionID = 3;                    /*   类似百乐宫娱乐城(1001)  version:1.3.0*/
   optional string  szPayPlatfrom = 4;                  /*   充值平台：apple，weixin，zhifubao  version:1.3.0*/
};

/* 充值订单返回  version:1.3.0*/
message RechargeRes
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional int32  iID = 2;                             /*   ID(我们自己的表里的ID)  version:1.3.0*/
   optional int32  iiappayID = 3;                       /*   爱贝后台添加的商品id  version:1.3.0*/
   optional string  szitemID = 4;                       /*   充值ID（苹果的商品ID）  version:1.3.0*/
   optional string  szpayOrder = 5;                     /*   服务端返回的订单号  version:1.3.0*/
};

/* weixin充值订单返回  version:1.3.0*/
message WeixinRechargeRes
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional string  szpayOrder = 2;                     /*   服务端返回的订单号  version:1.3.0*/
   optional string  szappid = 3;                        /*   微信开放平台审核通过的应用APPID  version:1.3.0*/
   optional string  szpartnerid = 4;                    /*   微信支付分配的商户号  version:1.3.0*/
   optional string  szprepayid = 5;                     /*   微信返回的支付交易会话ID  version:1.3.0*/
   optional string  szpackage = 6;                      /*   暂填写固定值Sign=WXPay  version:1.3.0*/
   optional string  sznoncestr = 7;                     /*   随机字符串  version:1.3.0*/
   optional string  sztimestamp = 8;                    /*   时间戳  version:1.3.0*/
   optional string  szsign = 9;                         /*   签名  version:1.3.0*/
};

/* 支付宝充值订单返回  version:1.3.0*/
message ZhifubaoRechargeRes
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional string  szzhifubao_app_id = 2;              /*   支付宝应用APPID  version:1.3.0*/
   optional string  szzhifubao_mch_id = 3;              /*   支付宝商户号  version:1.3.0*/
   optional string  szzhifubao_private_key = 4;         /*   支付宝  version:1.3.0*/
   optional string  szpayOrder = 5;                     /*   服务端返回的订单号  version:1.3.0*/
   optional string  sztimestamp = 6;                    /*   时间戳  version:1.3.0*/
   optional string  szsign = 7;                         /*   签名  version:1.3.0*/
   optional string  szrechargeName = 8;                 /*   充值包名  version:1.3.0*/
   optional float  fprice = 9;                          /*   价格  version:1.3.0*/
   optional string  sznotifyUrl = 10;                   /*   异步通知地址  version:1.3.0*/
   optional string  signOrder = 11;                     /*   服务端返回的已签名订单  version:1.4.0*/
};

/* 充值验证  version:1.3.0*/
message RechargeVerReq
{
   optional int32  ipayType = 1;                        /*   充值验证类型 0:AppStore  1:爱贝云支付  version:1.3.0*/
   optional string  szpayOrder = 2;                     /*   充值订单  version:1.3.0*/
   optional string  szpayReceipt = 3;                   /*   充值AppStore回执或者爱贝云支付交易订单  version:1.3.0*/
};

/* 充值验证返回  version:1.3.0*/
message RechargeVerRes
{
   optional int32  iresultId = 1;                       /*   验证结果  version:1.3.0*/
   optional int32  ipayType = 2;                        /*   充值类型1.表示审核服 2表示正式服 3表示推荐充值 4.表示砸金猪  version:1.3.0*/
   optional LongType  stGetChips = 3;                   /*   玩家充值成功获得的筹码数  version:1.3.0*/
   optional LongType  stUserChips = 4;                  /*   玩家充值成功之后的总筹码  version:1.3.0*/
   optional int32  iUserVIPLevel = 5;                   /*   玩家VIP等级  version:1.3.0*/
   optional int32  iNextVipLvNeedMoney = 6;             /*   到下一级VIP需要充值的金额  version:1.3.0*/
   optional int32  idollar = 7;                         /*   充值金额  version:1.3.0*/
   optional int32  iExtradollar = 8;                    /*   VIP赠送金额  version:1.3.0*/
   optional int32  iisFirstRecharge = 9;                /*   1表示是首充，0表示非首充  version:1.3.0*/
};

/* 小猪银行的状态推送  version:1.3.0*/
message PigglyBankStateRes
{
   optional float  fState = 1;                          /*   小猪银行的存钱比率（范围0-1，0为空，1为满）  version:1.3.0*/
   optional int32  iChipsCount = 2;                     /*   小猪内的筹码数量  version:1.3.0*/
};

/* 小猪银行的数据请求  version:1.3.0*/
message PigBankDataReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 充值金猪等级请求  version:1.3.0*/
message ResetPigLevelReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 充值金猪等级返回  version:1.3.0*/
message ResetPigLevelRes
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
};

/* 小猪银行的数据返回  version:1.3.0*/
message PigBankDataRes
{
   optional float  fState = 1;                          /*   小猪银行的存钱比率（范围0-1，0为空，1为满）  version:1.3.0*/
   optional float  fPrice = 4;                          /*   敲碎小猪的价格  version:1.3.0*/
   optional int32  iChipsCount = 5;                     /*   当前已存的筹码数  version:1.3.0*/
   optional int32  iMinGetChip = 6;                     /*   最小可领取筹码数  version:1.3.0*/
   optional int32  iextraChip = 7;                      /*   额外赠送筹码  version:1.3.0*/
   optional int32  iHammer = 8; //锤子个数
};

/* MSGID_GETVIPCHIPS_REQ VIP玩家领取补齐筹码  version:1.3.0*/
message GetVipGiveChips
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* MSGID_GETVIPCHIPS_RES VIP玩家领取补齐筹码返回  version:1.3.0*/
message ResVipGiveChips
{
   optional int32  iresultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional int32  iChips = 2;                          /*   成功领取筹码数量  version:1.3.0*/
};

/* 登录逻辑服务器请求  version:1.3.0*/
message CSLoginLogicReq
{
   optional int32  iActorId = 1;                        /*   玩家ActorId  version:1.3.0*/
   optional string  szToken = 2;                        /*   验证码  version:1.3.0*/
   optional string  szMAC = 3;                          /*   MAC地址 没有传空  version:1.3.0*/
   optional int32  iClientID = 4;                       /*   平台ID：1:android 2:ios  version:1.3.0*/
   optional string  szClientVersion = 5;                /*   客户端版本  version:1.3.0*/
};

/* 游戏子项目表  version:1.3.0*/
message GameSubItem
{
   optional int32  iGameSubID = 1;                      /*   子项目列表ID  version:1.3.0*/
   optional string  iGameSubType = 2;                   /*   子项目的细分类型ID  version:1.4.0*/
   optional string  sGameSubTexture = 3;                /*   子项目Icon图路径  version:1.4.0*/
   optional int32  iVisible = 4;                    /*   该房间是否开放（0不开放，1开放）  version:1.4.0*/
   optional int32  iLimitLevel = 5;                     /*   进入该房间所需等级  version:1.4.0*/
   optional int32  iLimitChips = 6;                     /*   进入该房间所需筹码  version:1.4.0*/
   optional int32 iSerial = 7;  //游戏排列
   optional int32 iNew = 8;
   optional int32 iHight = 9;
};

/* 游戏种类  version:1.3.0*/
message GameItem
{
   optional int32  iGameID = 1;                         /*   游戏ID  version:1.3.0*/
   optional int32  iVisual = 2;                         /*   1显示 2隐藏  version:1.3.0*/
   optional string  szIP = 3;                           /*   IP地址  version:1.3.0*/
   optional int32  iPort = 4;                           /*   Port  version:1.3.0*/
   repeated GameSubItem  astGameItems = 5;                  /*   游戏子界面列表  version:1.3.0*/   
   optional int32 iMainMenu = 6; /* 关联的大厅按键 */
   optional int32 iSerial = 7;  //游戏排列
};

/* 登录逻辑服务器回复  version:1.3.0*/
message CSLoginLogicRes
{
   optional int32  iEno = 1;                            /*    Bind Macrosgroup:LoginResDef,*/
   optional int32 iActorId = 2;                   
   optional string  szToken = 3;                        /*   验证码  version:1.3.0*/
};

/* 登录逻辑服务器回复  version:1.3.0*/
message CSDataLoadRes
{
   optional int32 iResult = 1;                    
};

/* 排行榜单个ITEM  version:1.3.0*/
message RankinglistItem
{
   optional int32  iranking = 1;                        /*   名次  version:1.3.0*/
   optional int32  iusrid = 2;                          /*   用户唯一ID  version:1.3.0*/
   optional string  szUserHead = 3;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional string  sznickname = 4;                     /*   用户昵称  version:1.3.0*/
   optional int32  iUserVIPLevel = 5;                   /*   玩家VIP等级  version:1.3.0*/
   optional LongType  stUserChips = 6;                  /*   玩家筹码  version:1.3.0*/
   optional LongType  stprofits = 7;                    /*   净赢的筹码，赌神榜，则是赢取的筹码，富豪榜，则是玩家当前的总筹码  version:1.3.0*/
   optional int32  irankChange = 8;                     /*   名次变化，上升，下降，不变  version:1.3.0*/
   optional string sign = 9; /* 用户签名 */
   optional string wechat = 10;                  /*微信*/
   optional string alipay = 11;                    /*qq*/
   optional string chips = 12;               /*用户金额*/
};

/* 大厅基础数据  version:1.3.0*/
message CGameUserLobbyData
{
    optional string  szUserName = 1;                    /*   角色名字  version:1.3.0*/
    optional int32  iUserID = 2;                        /*   角色ID  version:1.3.0*/
    optional string  szUserHead = 3;                    /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
    repeated int32  UserHeadList = 4;                   /*   玩家购买的头像IDlist  version:1.3.0*/
    optional int32  iUserVIPLevel = 5;                  /*   玩家VIP等级  version:1.3.0*/
    optional int32  iNextVipLvNeedMoney = 6;            /*   到下一级VIP需要充值的金额  version:1.3.0*/
    optional int32  iUserGrade = 7;                     /*   玩家等级  version:1.3.0*/
    optional int32  iUserExp = 8;                       /*   玩家当前累计经验值  version:1.3.0*/
    optional LongType  stUserChips = 9;                     /*   玩家筹码  version:1.3.0*/
    optional int32  iUserAchievementId = 10;            /*   当前玩家成就Id  version:1.3.0*/
    optional int32  iUserLottery = 11;                  /*   彩券  version:1.3.0*/
    repeated GameItem  astGames = 12;                       /*   游戏列表  version:1.3.0*/
    optional int32  iGiftNums = 13;                     /*   未领取的礼物数  version:1.3.0*/
    optional int32  iEmails = 14;                       /*   邮件数  version:1.3.0*/
    optional LongType  stfirstSlotsJP = 15;                 /*   第一个老虎机的jackPot  version:1.3.0*/
    optional int32  iTotalGames = 16;                   /*   总玩家数  version:1.3.0*/
    optional int32  iIsMyFriend = 17;                   /*   是否是我的好友，0不是，1是  version:1.4.0*/
    optional int32  iIsCanTrade = 18;                   /*   是否可以跟他交易，0不是，1是  version:1.4.0*/
    optional LongType  stminiSlotsJP = 19;              /*   老虎机的minijackPot值  version:1.3.0*/
    optional LongType  stmegaSlotsJP = 20;              /*   老虎机的megajackPot值  version:1.3.0*/
    optional LongType  stUserDiamond = 21;              /*   钻石  version:1.3.0*/
    optional int32  iChangeNameNum = 22;                /*   0则修改名字不扣钱  version:1.3.0*/
    optional string stSign=23;                           /*  个性签名*/
    optional int32 iReliefchipcount = 24;                /*  救济金次数*/
    optional string szAccountType = 25;                  /*  账号类型*/
    optional string bindPhone=26;                        /*  绑定的手机号*/
    optional int32 isSetBankPass=27;                     /*  是否设置过了银行密码*/
    optional int64 iBankChips=28;                        /*  银行存款*/
    required int64 iIsConsume=29;                        /*  是否是付费玩家0：不是，1是*/
    optional string wxPayCode=30;                        /* 微信支付*/
    optional string aliPayCode=31;                       /* 阿里支付*/
   
    optional string BindCard=32;                     /*  绑定银行卡*/
    optional string BindAlipay=33;                        /*  绑定支付宝*/
    optional string RealName=34;                         /*户名*/
    optional string merchant_code=35;                         /*推广号*/

   
};

//个人信息请求  17
message PlayerInfoC2S{

}

message PlayerInfoS2C{
    required string nickName = 1;
    required string realName = 2;
    required string safeCode =3;
    required string popularizeCode = 4;
    required string bankPsw = 5;
    required string areaWeChatCode = 6;
    required bool iModify = 7;
}

//个人信息修改 18
message PlayerInfoModifyC2S{
	required int32 tag = 1;
    required string content = 2;
}

message PlayerInfoModifyS2C{
   required SYSTEMRESULT isSuccess = 1;
   required int32 tag = 2;
    required string content = 3;
}

/* 积分奖券单个ITEM  version:1.5.0*/
message lotteryItem
{
   optional int32  iID = 1;                             /*   ID  version:1.5.0*/
   optional string  szitemName = 2;                     /*   兑换或者抽奖物品名字  version:1.5.0*/
   optional int32  ineedScoreNum = 3;                   /*   兑换或者抽奖所消耗的奖券数量  version:1.5.0*/
   optional int32  iitemNum = 4;                        /*   兑换或者抽奖物品剩余数量  version:1.5.0*/
   optional int32  ivipLevel = 5;                       /*   兑换或者抽奖该物品所需VIP等级  version:1.5.0*/
   optional string  szitemUrl = 6;                      /*   兑换或者抽奖物品的图片路径  version:1.5.0*/
   optional int32  iitemtype = 7;                       /*   物品类型，1 实物(需花费人民币购买的物件) 2积分  3筹码  version:1.5.0*/
};

/* 获奖记录  version:1.5.0*/
message recordinfo
{
   optional int32  playerid =1;                         /*   抽奖玩家的ID version:1.5.0*/
   optional string  playerName =2;                      /*   抽奖玩家的昵称 version:1.5.0*/
   optional int32   vipLevel = 3;                       /*   中奖玩家VIP等级  version:1.5.0*/
   optional string  szitemName = 4;                     /*   抽奖或者兑换的物品名字  version:1.5.0*/  
   optional string  sztime = 5;                         /*   抽奖或者兑换时间  version:1.5.0*/  
   optional int32   iitemType = 6;                      /*   中奖类型  version:1.5.0*/
};

/* MSGID_LOTTERYLIST_REQ 请求积分奖券内抽奖或兑换的物品列表  version:1.5.0*/
message lotterylistReq
{
   optional int32  iUserID = 1;                     /*   用户唯一id  version:1.5.0*/
   optional int32  iType = 2;                       /*   请求类型（1表示抽奖，2表示兑换）  version:1.5.0*/
};

/* MSGID_LOTTERYLIST_RES 返回实物和虚拟物品列表  version:1.5.0*/
message lotterylistRes
{
   optional int32  iResultId = 1;                        /* 返回ID  version:1.5.0*/
   optional int32  iCanExchange = 2;                     /* 兑换是否开放（0表示不开放，1表示开放）  version:1.5.0*/
   optional int32  iType = 3;                            /* 请求类型（1表示抽奖，2表示兑换）  version:1.5.0*/
   repeated lotteryItem  astlotterylist = 4;             /* 物品列表  version:1.5.0*/
   repeated recordinfo  asmyrecordlist = 5;              /* 我自己抽奖或者兑换的记录  version:1.5.0*/
   repeated recordinfo  asallrecordlist = 6;             /* 所有玩家抽奖或者兑换的记录  version:1.5.0*/
   
};

/* MSGID_LOTTERYDRAW_REQ 请求积分抽奖 version:1.5.0*/
message lotterydrawReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.5.0*/
   optional int32  iType = 2;                       /*   请求类型（1表示抽奖，2表示兑换）  version:1.5.0*/
   optional int32  iitemId = 3;                         /*   请求物品ID  version:1.5.0*/
};

/* MSGID_LOTTERYDRAW_RES 返回抽奖结果  version:1.3.0*/
message lotterydrawRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.5.0*/
   optional int32  iitemId = 2;                         /*   物品ID  version:1.5.0*/
   optional int32  iLotterycounts = 3;                   /*   玩家奖券余额  version:1.5.0*/
};

/* MSGID_ACTIVITY_NOTICE_CONFIG_C2S 请求活动配置信息 */
message ActivityAndNoticeConfigC2S
{
    required int32 userId = 1; //用户唯一ID
}

/* MSGID_ACTIVITY_NOTICE_CONFIG_S2C 返回活动配置信息 */
message ActivityAndNoticeConfigS2C
{
    repeated ActivityAndNoticeConfig activityAndNoticeConfig = 1;
}

/* 活动信息实体 */
message ActivityAndNoticeConfig{
    required int32 type = 1;
    required string title = 2;
    optional string textUrl = 3;
    optional string picUrl = 4;
}

// webview未读聊天提醒 1289
message WebViewChatTipS2C{
	repeated WebViewChatTip tipUrlsData = 1;
}
//充值客服信息 1290
message RechargeCustomerServiceC2S{

}

message RechargeCustomerServiceS2C{
	repeated CustomerServiceData data = 1;	
	repeated CustomerServiceData wechatData = 2;
}

message CustomerServiceData
{
	required string nickname = 1;
	required string headUrl = 2;
	required string skipUrl = 3;
}

//充值记录 1291
message RechargeRecordC2S{

}

message RechargeRecord{
   required string money = 1;//不缩放的
   required int64 timestamp = 2; //时间戳
   required string type = 3;   //充值类型
}

message RechargeRecordS2C{
   repeated RechargeRecord recordList = 1;//不缩放的
}


message WebViewChatTip{
	required string url = 1;
	required int32 count = 2;
}

/* MSGID_LOTTERYCONTACTINFO_REQ 提交个人联系信息请求 version:1.5.0*/
message lotteryContactinfoReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.5.0*/
   optional string  sName = 2;                      /*   姓名  version:1.5.0*/
   optional string  sPhone = 3;                         /*   电话 version:1.5.0*/
   optional string  sAddress = 4;                       /*   地址 version:1.5.0*/
};

/* MSGID_LOTTERYCONTACTINFO_RES 提交个人联系信息返回  version:1.5.0*/
message lotteryContactinfoRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.5.0*/
};


/* 获取玩家基本信息，不包括前三名的排行榜，不包括支付信息  version:1.3.0*/
message CGameUserBaseDataReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 玩家基础信息返回  version:1.3.0*/
message CGameUserBaseDataRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional CGameUserLobbyData  stBaseData = 2;                     /*   大厅基础数据  version:1.3.0*/
};

/* 充值渠道节点  version:1.3.0*/
message PayChannelNode
{
   optional string  szChannelName = 1;                  /*   充值渠道名字  version:1.3.0*/
   optional int32  iEnable = 2;                         /*   是否开放，1开放，0关闭  version:1.3.0*/
   optional float  fDiscount = 3;                       /*   折扣数据, 10表示不打折，8表示8折  version:1.3.0*/
};

/* 获取玩家支付信息  version:1.3.0*/
message UserPayInfoReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional string  szVersionId = 2;                    /*   版本id  version:1.3.0*/
};

/* 获取玩家支付信息返回  version:1.3.0*/
message UserPayInfoRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iUserSavingpotChips = 2;             /*   存钱罐资金  version:1.3.0*/
   optional int32  iResetPig = 3;                       /*   是否可以重置金猪  version:1.3.0*/
   optional int32  iUserSavingpotRatio = 4;             /*   存钱罐资金存储比例  version:1.3.0*/
   optional LongType  stfirstSlotsJP = 5;               /*   第一个老虎机的jackPot  version:1.3.0*/
   optional int32  ifirstRecharge = 6;                  /*   是否首充 1首充过 0没有首充  version:1.3.0*/
   optional int32  iPayforFlag = 7;                     /*   是否充值过 1有 0从未充值  version:1.3.0*/
   optional int32  iPayforMax = 8;                      /*   有没有充值过最大额度 1有,0没有  version:1.3.0*/
   optional int32  iRecommendPay = 9;                   /*   推荐充值金额  version:1.3.0*/
   optional int32  iRecommendTimeleft = 10;             /*   推荐充值剩余时间  version:1.3.0*/
   optional int32  iRecommendChips = 11;                /*   推荐充值获得筹码  version:1.3.0*/
   optional int32  iRecommandoriginalChip = 12;         /*   推荐充值等值金额商城售卖的筹码数量  version:1.3.0*/
   optional int32  iRecommandExtraChip = 13;            /*   推荐充值VIP额外赠送筹码  version:1.3.0*/
   optional int32  iOpenVipMaxLevel = 14;               /*   当前开放的VIP最高等级  version:1.3.0*/
   optional int32  iVipGiveChip = 15;                   /*   VIP补齐筹码  version:1.3.0*/
   repeated PayChannelNode  astPayChannelList = 16;             /*   充值渠道  version:1.3.0*/
   optional int32  isHaveGoldPig = 17;                  /*   是否开启金猪  version:1.4.0*/
   optional int32  iextraLottery = 18;                  /*   推荐充值获得积分  version:1.4.0*/
};

/* 强制踢出玩家 */
message KickOutPlayer {
    
};

/* 获取小排行榜信息，前三名  version:1.3.0*/
message MinRankInfoReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 获取小排行榜信息，前三名返回  version:1.3.0*/
message MinRankInfoRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   repeated RankinglistItem  astRankinglist = 2;                /*   前三名排行榜  version:1.3.0*/
};

/* MSGID_REDPOINT_RES 服务端主动推送的小红点协议  version:1.3.0*/
message MainPageRedPoint
{
   optional int32  iemailredPoint = 1;                  /*   邮件小红点 0.没有小红点 1.有小红点  version:1.3.0*/
   optional int32  itaskredPoint = 2;                   /*   任务小红点 0.没有小红点 1.有小红点  version:1.3.0*/
   optional int32  iServicePoint = 3;                   /*   客服小红点 0.没有小红点 1.有小红点  version:1.3.0*/
   optional int32  iFriendPoint = 4;                /*   好友小红点 0.没有小红点 1.有小红点  version:1.4.0*/
};

/* 请求个人新数据  version:1.3.0*/
message CGameShortDataReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 个人数据变化的返回  version:1.3.0*/
message CGameShortDataRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iUserID = 2;                         /*   用户唯一id  version:1.3.0*/
   optional LongType  stUserChips = 3;                  /*   玩家筹码  version:1.3.0*/
   optional string  szUserHead = 4;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional string  szUserName = 5;                     /*   角色名字  version:1.3.0*/
   optional int32  iAchievementId = 6;                  /*   成就Id  version:1.3.0*/
   optional int32  iUserVipLevel = 7;                   /*   用户vip等级  version:1.3.0*/
   optional int32  iUserLottery = 8;                    /*   玩家积分  version:1.4.0*/
   optional LongType  stUserDiamond = 9;                /*   玩家钻石  version:1.3.0*/
   optional string stSign=10;                           /*   个性签名  version:1.3.0*/
   optional int32 ChangeNameNum = 11;                   /*   改名次数   */
   optional string bindPhone=12;                        /*   绑定的手机号*/
   optional int64 iBankChips=13;                        /*   银行存款*/
   required int64 iIsConsume=14;                        /*  是否是付费玩家0：不是，1是*/
   optional string bindCard=15;                        /*   绑定的银行卡*/
   optional string bindAlipay=16;                        /*   绑定的支付宝*/
   optional string RealName=17;                        /*   户名*/
};

/* 免费筹码的数量和剩余时间请求  version:1.3.0*/
message FreeChipsInfoReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 免费筹码的数量和剩余时间返回  version:1.3.0*/
message FreeChipsInfoRes
{
   optional int32  ileftTime = 1;                       /*   剩余时间（秒）  version:1.3.0*/
   optional int32  ichipsCount = 2;                     /*   可领取的筹码数量  version:1.3.0*/
   optional int32  ihaveGetTimes = 3;                   /*   已经领取的次数  version:1.3.0*/
};

/* 领取免费筹码请求  version:1.3.0*/
message GetFreeChipsReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 领取免费筹码信息返回  version:1.3.0*/
message GetFreeChipsRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  ichipsCount = 2;                     /*   获得的筹码数  version:1.3.0*/
   optional int32  ihaveGetTimes = 3;                   /*   已经领取的次数  version:1.3.0*/
};

/* 领取连续登陆的奖励请求  version:1.3.0*/
message ContinusRewardReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional int32  iDaysIndex = 2;                      /*   天数序号  version:1.3.0*/
   optional int32  iChipsCount = 3;                     /*   奖励数量  version:1.3.0*/
};

/* 领取连续登陆的奖励返回  version:1.3.0*/
message ContinusRewardRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iDaysIndex = 2;                      /*   天数序号  version:1.3.0*/
   optional int32  iChipsCount = 3;                     /*   奖励数量  version:1.3.0*/
   optional LongType  stTotalChips = 4;                 /*   领取后我的总筹码数  version:1.3.0*/
};

/* 领取VIP每日登录奖励请求--MSGID_GETVIP_EXTRAREWARDS_REQ--  version:1.4.0*/
message GetVipExtraRewardsReq 
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.4.0*/
};

/* 领取VIP每日登录奖励返回--MSGID_GETVIP_EXTRAREWARDS_RES--  version:1.4.0*/
message GetVipExtraRewardsRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  ichipsCount = 2;                     /*   获得的筹码数  version:1.3.0*/
};



/* 玩家战斗数据请求  version:1.3.0*/
message FightInfoReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* 玩家战斗数据返回  version:1.3.0*/
message FightInfoRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iBiggestWinInBac = 2;                /*   百家乐一局内赢取的最大筹码  version:1.3.0*/
   optional int32  iBetTimesInBac = 3;                  /*   百家乐总的下注次数  version:1.3.0*/
   optional int32  iPeekTimesInBac = 4;                 /*   百家乐总的咪牌次数  version:1.3.0*/
   optional int32  iWinPairsTimesInBac = 5;             /*   百家乐押中对子的次数  version:1.3.0*/
   optional int32  iSpinTimesInSlot = 6;                /*   SLOTS总的spin次数（包含奖励的免费次数）  version:1.3.0*/
   optional int32  iBigWinTimesInSlot = 7;              /*   SLOTS里bigwin的次数  version:1.3.0*/
   optional int32  iMegaWinTimesInSlot = 8;             /*   SLOTS里megawin的次数  version:1.3.0*/
   optional int32  iJackPortTimesInSlot = 9;            /*   SLOTS里jackport的次数  version:1.3.0*/
   optional int32  iPlayTimesInVP = 10;                 /*   videopoker的游戏总次数  version:1.3.0*/
   optional int32  iFourAboveTimesInVP = 11;            /*   videopoker获得四条及以上的次数  version:1.3.0*/
   optional int32  iSevenTimesWinInVP = 12;             /*   videopoker猜大小七连中的次数  version:1.3.0*/
   optional LongType  stBiggestWinInDay = 13;           /*   每日赢取最大筹码数  version:1.3.0*/
   optional LongType  stTheBestRicher = 14;             /*   曾经拥有的最大筹码数  version:1.3.0*/
   optional int32  iPlayTimesInBJ = 15;                 /*   玩21点的总次数  version:1.3.0*/
   optional int32  iGetBjTimes = 16;                    /*   获得黑杰克的次数  version:1.3.0*/
   optional int32  iGet21pointsTimes = 17;              /*   获得21点的次数（含黑杰克）  version:1.3.0*/
};

/* 任务相关  version:1.3.0*/
message TaskItem
{
   optional int32  itaskID = 1;                         /*   任务唯一id  version:1.3.0*/
   optional int32  itaskState = 2;                      /*   任务状态,0:未完成，1：未领取，2：已领取，已完成  version:1.3.0*/
   optional int32  itaskDone = 3;                       /*   当前任务子任务完成数量，比如完成了3次玩翻牌机，实际任务是需要玩10次  version:1.3.0*/
   optional int32  itaskCount = 4;                      /*   当前任务子任务总数量  version:1.3.0*/
};

/* MSGID_TASK_REQ请求获取任务信息  version:1.3.0*/
message TaskReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
};

/* MSGID_TASK_RES任务返回  version:1.3.0*/
message TaskRes
{
   repeated TaskItem  asttasks = 1;                     /*   所有任务，默认10条  version:1.3.0*/
};

/* 任务完成情况  version:1.3.0*/
message TaskCompleteRes
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional int32  iTaskId = 2;                         /*   任务id  version:1.3.0*/
   optional int32  iTaskState = 3;                      /*   任务状态,0:未完成，1：未领取，2：已领取，已完成  version:1.3.0*/
};

/* MSGID_GETTASKAWARD_REQ请求领取任务奖励  version:1.3.0*/
message TaskGetAwardReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional int32  itaskID = 2;                         /*   任务id  version:1.3.0*/
};

/* MSGID_GETTASKAWARD_RES领取任务奖励返回  version:1.3.0*/
message TaskGetAwardRes
{
   optional int32  iResultId = 1;                       /*   返回领取结果  version:1.3.0*/
   optional int32  itaskID = 2;                         /*   任务id  version:1.3.0*/
};

/* MSGID_COMPLETETASK_REQ客户端上传完成某些特定任务  version:1.3.0*/
message TaskCompleteReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional int32  itaskID = 2;                         /*   任务ID  version:1.3.0*/
};

/* 修改个人信息请求  version:1.3.0*/
message ModifyUserDataReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional string  szNickName = 3;                     /*   昵称  version:1.3.0*/
   optional string  szSign=4;                           /*   个性签名 version:1.3.0*/
};

/* 修改个人信息返回  version:1.3.0*/
message ModifyUserDataRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
};

/* 购买头像请求  version:1.3.0*/
message BuyHeadWithChipsReq
{
   optional int32  iUserID = 1;                         /*   用户唯一id  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
};

/* 购买头像返回  version:1.3.0*/
message BuyHeadWithChipsRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iUserID = 2;                         /*   用户唯一id  version:1.3.0*/
   optional string  szUserHead = 3;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
};

/* 一个用户下注项  version:1.3.0*/
message ChipItem
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional LongType  stChips = 2;                      /*   筹码数  version:1.3.0*/
   optional int32  iChipsType = 3;                      /*   下注类型 Bind Macrosgroup:BJL_ChipsType,*/
};

/* 一张牌  version:1.3.0*/
message CardItem
{
   optional int32  iCardId = 1;                         /*   牌ID  version:1.3.0*/
   optional int32  iPaiMian = 2;                        /*   牌面值  version:1.3.0*/
   optional int32  iOpen = 3;                           /*   0:未翻；1:已翻  version:1.3.0*/
   optional int32  iWho = 4;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
};

/* 游戏结果  version:1.3.0*/
message BJL_ResultRes
{
   optional int32  iResult = 1;                         /*   1庄赢，2闲，3和，4庄对，5闲对  version:1.3.0*/
};

/* 赢后收筹码  version:1.3.0*/
message BJL_WinChipsRes
{
   repeated ChipItem astChips = 1;                   
   optional LongType  stMyTotalChips = 2;               /*   我当前的总筹码数  version:1.3.0*/
   optional int32  iUserGrade = 3;                      /*   我当前的等级  version:1.3.0*/
   optional int32  iUserLottery = 4;                    /*   我的当前总积分  version:1.4.0*/
};

/* 百家乐玩家数据  version:1.3.0*/
message BJL_PlayerData
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional int32  iSeat = 3;                           /*   玩家坐位号  version:1.3.0*/
   optional string  szNickName = 4;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 5;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 6;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 7;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 8;                         /*   VIP经验  version:1.3.0*/
   optional int32  iLottery = 9;                        /*   玩家彩券数  version:1.3.0*/
   optional LongType  stChips = 10;                     /*   筹码数  version:1.3.0*/
   repeated ChipItem  astChipitem = 11;                 /*   下注筹码数  version:1.3.0*/
   optional int32  iAchievementId = 12;                 /*   成就称号  version:1.3.0*/
};

/* 加入房间  version:1.3.0*/
message BJL_JoinRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional string  szToken = 2;                        /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 4;                     /*   房间限红类型  version:1.3.0*/
};

/* 加入返回  version:1.3.0*/
message BJL_JoinRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iRoomId = 2;                         /*   房间ID  version:1.3.0*/
   repeated BJL_PlayerData  astPlayers = 3;                     /*   房间中的所有玩家  version:1.3.0*/
   optional int32  iRoomSM = 4;                         /*   房间状态 Bind Macrosgroup:BJL_RoomStateMachineType,*/
   repeated CardItem  astCard = 5;                      /*   牌  version:1.3.0*/
   optional int32  iTotalCountDown = 6;                 /*   总倒计时  version:1.3.0*/
   optional int32  iCountDown = 7;                      /*   秒  version:1.3.0*/
   optional int32  iGameState = 8;                      /*   游戏状态 Bind Macrosgroup:BJL_GameState,*/
   optional int32  iplayid = 9;                         /*   闲  version:1.3.0*/
   optional int32  ibankid = 10;                        /*   庄  version:1.3.0*/
};

/* 百家乐洗牌  version:1.3.0*/
message BJL_Shuffle
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
};

/* 退出房间  version:1.3.0*/
message BJL_QuitRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 加入返回  version:1.3.0*/
message BJL_QuitRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
};

/* 更新房间玩家数据  version:1.3.0*/
message BJL_UpdatePlayer
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iAddPlayer = 2;                      /*   是否添加玩家，true：添加玩家，false：删除玩家  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
   optional BJL_PlayerData  stPlayer = 4;                       /*   添加或者删除的玩家  version:1.3.0*/
};

/* 系统中的所有消息  version:1.3.0*/
message BJL_MessageReq
{
   optional int32  iMsgId = 1;                          /*   消息编号  version:1.3.0*/
   optional int32  iReceiveId = 2;                      /*   互动表情玩家id  version:1.3.0*/
   optional string  szMsg = 3;                          /*   消息内容，可不填  version:1.3.0*/
   optional int32  iMsgFormat = 4;                      /*   消息格式 Bind Macrosgroup:BJL_MessageFormat,*/
   optional int32  iRoomID = 5;                         /*   房间ID  version:1.3.0*/
};


/* 系统中的所有消息  version:1.3.0*/
message BJL_MessageRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iUsrId = 2;                          /*   喊话者ID  version:1.3.0*/
   optional int32  iMsgId = 3;                          /*   消息编号  version:1.3.0*/
   optional int32  iReceiveId = 4;                      /*   互动表情玩家id  version:1.3.0*/
   optional string  szMsg = 5;                          /*   消息内容，根据消息类型决定内容  version:1.3.0*/
   optional int32  iMsgFormat = 6;                      /*   消息格式 Bind Macrosgroup:BJL_MessageFormat,*/
   optional int32  iRoomID = 7;                         /*   房间ID  version:1.3.0*/
   optional string szPlayerName=8;                      /*   喊话者名字  version:1.3.0*/
};

/* 所有游戏排行榜  version:1.3.0*/
message BJL_RankinglistReq
{
   optional int32  iRankType = 1;                       /*   排行榜类型，0：赌神榜，1：富豪榜  version:1.3.0*/
   optional int32  iPage = 2;                           /*   页码  version:1.3.0*/
};

/* 所有游戏排行榜  version:1.3.0*/
message BJL_RankinglistRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iRankType = 2;                       /*   排行榜类型，0：赌神榜，1：富豪榜  version:1.3.0*/
   optional int32  iPage = 3;                           /*   页码  version:1.3.0*/
   repeated RankinglistItem  astRankinglist = 4;                /*   总排行榜  version:1.3.0*/
};

/* 自己的排行榜數據請求  version:1.3.0*/
message MyRankDataReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 自己的排行榜數據返回  version:1.3.0*/
message MyRankDataRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional LongType  stprofits = 2;                    /*   净赢的筹码  version:1.3.0*/
   optional LongType  sttotalchips = 3;                 /*   我的總籌碼  version:1.3.0*/
};

/* 房间状态转换  version:1.3.0*/
message BJL_StateTransformRes
{
   optional int32  iRoomSM = 1;                         /*   房间状态 Bind Macrosgroup:BJL_RoomStateMachineType,*/
};

/* 停止下注后各玩家下注情况  version:1.3.0*/
message BJL_ChipList
{
   optional int32  iplayid = 1;                         /*   闲  version:1.3.0*/
   optional int32  ibankid = 2;                         /*   庄  version:1.3.0*/
   repeated BJL_PlayerData  astPlayers = 3;                     /*   房间中的所有玩家  version:1.3.0*/
};

/* 定时校对房间内玩家请求  version:1.3.0*/
message BJL_RoomCheckReq
{
   optional int32  iRoomID = 1;                         /*   房间ID  version:1.3.0*/
};

/* 玩家  version:1.3.0*/
message PlayItem
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional int32  iSeat = 3;                           /*   玩家坐位号  version:1.3.0*/
   optional string  szNickName = 4;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 5;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 6;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 7;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 8;                         /*   VIP经验  version:1.3.0*/
   optional LongType  stChips = 9;                      /*   筹码数  version:1.3.0*/
   optional int32  iArchieveId = 10;                    /*   当前成就称号id  version:1.3.0*/
   optional int32  iLottery = 11;                       /*   玩家彩券数  version:1.3.0*/
   optional LongType iDiamond=12;                          /*   玩家钻石数  version:1.3.0*/
};

/* 定时校对房间内玩家请求  version:1.3.0*/
message BJL_RoomCheckRes
{
   repeated PlayItem  astPlayerS = 1;                   /*   房间ID  version:1.3.0*/
};

/*   version:1.3.0*/
message BJL_ChangeSeatReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iSeatID = 2;                         /*   座位ID  version:1.3.0*/
};

/*   version:1.3.0*/
message BJL_ChangeSeatRes
{
   optional int32  iResultId = 1;                       /*   返回换座位结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional int32  iSeatID = 3;                         /*   座位ID  version:1.3.0*/
};

/* 下注  version:1.3.0*/
message BJL_ChipsReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   repeated ChipItem  astChips = 2;                     /*   下注  version:1.3.0*/
   optional int32  iOper = 3;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* 下注  version:1.3.0*/
message BJL_ChipsRes
{
   optional int32  iResultId = 1;                       /*   返回下注结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   repeated ChipItem  astChips = 3;                     /*   下注  version:1.3.0*/
   optional int32  iOper = 4;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* 点击旋转请求  version:1.3.0*/
message BJL_RotatePokerReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iCardId = 2;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
};

/* 点击旋转请求  version:1.3.0*/
message BJL_RotatePokerRes
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iCardId = 2;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
};

/* 设置触控点  version:1.3.0*/
message BJL_SetTouchPointReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iCardId = 2;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
   optional float  fPosX = 4;                           /*   触控点X  version:1.3.0*/
   optional float  fPosY = 5;                           /*   触控点Y  version:1.3.0*/
};

/* 设置触控点  version:1.3.0*/
message BJL_SetTouchPointRes
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iCardId = 2;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
   optional float  fPosX = 4;                           /*   触控点X  version:1.3.0*/
   optional float  fPosY = 5;                           /*   触控点Y  version:1.3.0*/
};

/* 咪牌  version:1.3.0*/
message BJL_DragPokerReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iopenCard = 2;                       /*   是否开牌  version:1.3.0*/
   optional int32  iCardId = 3;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 4;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
   optional float  fdeltaX = 5;                         /*   咪牌x的差值  version:1.3.0*/
   optional float  fdeltaY = 6;                         /*   咪牌y的差值  version:1.3.0*/
};

/* 咪牌  version:1.3.0*/
message BJL_DragPokerRes
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iopenCard = 2;                       /*   是否开牌  version:1.3.0*/
   optional int32  iCardId = 3;                         /*   牌ID  version:1.3.0*/
   optional int32  iWho = 4;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
   optional float  fdeltaX = 5;                         /*   咪牌x的差值  version:1.3.0*/
   optional float  fdeltaY = 6;                         /*   咪牌y的差值  version:1.3.0*/
};

/* 请求牌路  version:1.3.0*/
message BJL_CardRoadReq
{
   optional int32  iRoomId = 1;                         /*   牌ID  version:1.3.0*/
};

/* 返回请求牌路  version:1.3.0*/
message BJL_CardRoadRes
{
   repeated int32  Which = 1;                           /*   牌路  version:1.3.0*/
};

/* 倒计时  version:1.3.0*/
message BJL_TimerRes
{
   optional int32  iCountDown = 1;                      /*   秒  version:1.3.0*/
};

/* 咪牌  version:1.3.0*/
message BJL_Mipai
{
   optional int32  iCardId = 1;                         /*   牌ID  version:1.3.0*/
   optional int32  iPaiMian = 2;                        /*   牌面值  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
   optional int32  iDirection = 4;                      /*   咪牌方向 Bind Macrosgroup:BJL_MiPaiDirection,*/
   optional int32  iPercent = 5;                        /*   咪牌百分比  version:1.3.0*/
};

/* 开牌  version:1.3.0*/
message BJL_Kaipai
{
   optional int32  iCardId = 1;                         /*   牌ID  version:1.3.0*/
};

/* 发牌  version:1.3.0*/
message BJL_SendCardRes
{
   optional int32  iCardId = 1;                         /*   牌ID  version:1.3.0*/
   optional int32  iPaiMian = 2;                        /*   牌面值  version:1.3.0*/
   optional int32  iWho = 3;                            /*   庄和闲 Bind Macrosgroup:BJL_VSType,*/
};

//疯狂水果请求房间没坐下玩家 2046
message BJL_SitPlayerC2S
{
}
message BJL_SitPlayerS2C {
    repeated SANiuNiuSitDown SABJL_SitDown=1;//没坐下的玩家信息1
}



/* SLOTO_JACKPOT_RES 老虎机JackPot数量主动推送  version:1.3.0*/
message SlotsJackPotRes
{
   optional LongType  sttotalJackpot = 1;               /*   Sloto大奖池总数量  version:1.3.0*/
   optional LongType  stMiniJackpot = 2;                /*   miniJackpot奖池数量  version:1.5.0*/
   optional LongType  stMegaJackpot = 3;                /*   megaJackpot奖池数量  version:1.5.0*/
};

/* MSGID_ENTER_SLOTO_REQ 老虎机Spin  version:1.3.0*/
message EnterSlotoReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional int32  iSlotsTypeId = 2;                    /*   slots类型，1：水果机，2：原始人，3：金瓶梅  version:1.3.0*/
   optional string  szToken = 3;                        /*   进入的Token  version:1.3.0*/
};
message SlotFreeTypeReq{
   optional int32 iFreeType = 1;//免费类型
}

message SlotFreeTypeRes{
   optional int32 iFreeType = 1;//免费类型
   optional int32 iFreeCount = 2;//免费次数

}

/* slots玩家数据  version:1.3.0*/
message Slots_PlayerData
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional string  szNickName = 3;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 4;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 5;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 6;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 7;                         /*   VIP经验  version:1.3.0*/
   optional int32  iLottery = 8;                        /*   玩家彩券数  version:1.3.0*/
   optional LongType  stChips = 9;                      /*   筹码数  version:1.3.0*/
   optional int32  iCurTitle = 10;                      /*   玩家头衔  version:1.3.0*/
   optional int32  iAchievementId = 11;                 /*   成就称号  version:1.3.0*/
};

/* 通知玩家有人进入或者离开房间  version:1.3.0*/
message UpdateSlotsRoomMenberRes
{
   optional int32  iJoin = 1;                           /*   1:加入，0：离开  version:1.3.0*/
   repeated Slots_PlayerData  astRoomPlayers = 2;               /*   同一个房间里面的其它玩家  version:1.3.0*/
};

/* MSGID_ENTER_SLOTO_RES 老虎机Spin  version:1.3.0*/
message EnterSlotoRes
{
   optional int32  iResultId = 1;                       /*   返回成功或者失败代码  version:1.3.0*/
   optional int32  ilastBetId = 2;                      /*   玩家上一次每条线押注ID  version:1.3.0*/
   optional int32  ilastBetChip = 3;                    /*   玩家上一次每条线押注筹码  version:1.3.0*/
   optional int32  ilastSpinID = 4;                     /*   玩家上一次Spin的ID  version:1.3.0*/
   optional int32  itotalFreeSpin = 5;                  /*   玩家剩余Spin的次数  version:1.3.0*/
   optional int32  iSlotsType = 6;                      /*   slots类型，1：水果机，2：原始人，3：金瓶梅  version:1.3.0*/
   optional LongType  stplayerMoney = 7;                /*   玩家身上的总筹码数量  version:1.3.0*/
   repeated Slots_PlayerData  astRoomPlayers = 8;               /*   同一个房间里面的其它玩家  version:1.3.0*/
   repeated int32  RoomChipsList = 9;                   /*   当前模式的筹码类型，300,1500,3000,30000,300000  version:1.3.0*/
   optional int32  itotalLottery = 10;                  /*   玩家身上的总积分  version:1.4.0*/
};

/* MSGID_SLOTO_SPIN_REQ 老虎机Spin  version:1.3.0*/
message SlotoSpinReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional int32  iSpinID = 2;                         /*   玩家本次Spin的ID  version:1.3.0*/
   optional int32  iLine = 3;                           /*   玩家选择的线路，暂时默认30条线  version:1.3.0*/
   optional LongType  stBetMoney = 4;                   /*   玩家每条线押注金额  version:1.3.0*/
   optional int32  iBetID = 5;                          /*   玩家每条线押注筹码ID  version:1.3.0*/
};

/* MSGID_SLOTO_SPIN_RES 老虎机Spin返回  version:1.3.0*/
message SlotoSpinRes
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional int32  iResultId = 2;                       /*   返回成功或者失败代码  version:1.3.0*/
   repeated int32  result = 3;                          /*   玩家本次Spin结果，从左到右  version:1.3.0*/
   optional int32  iSpinID = 4;                         /*   本次SpinID的  version:1.3.0*/
   optional int32  ibetCount = 5;                       /*   中奖的倍数，没中奖则为0  version:1.3.0*/
   optional LongType  stcurrentWin = 6;                 /*   玩家本次赢的筹码数量  version:1.3.0*/
   optional int32  icurrentFreeSpin = 7;                /*   玩家本次Spin的次数，没有则为0  version:1.3.0*/
   optional int32  icurrentBigwin = 8;                  /*   是否是bigwin   1是0否，默认0  version:1.3.0*/
   optional int32  icurrentMegawin = 9;                 /*   是否是megawinwin 1是0否，默认0  version:1.3.0*/
   optional LongType  stcurrentJackpot = 10;            /*   当前从奖池中抽取筹码的数量，没有则为0  version:1.3.0*/
   optional LongType  stplayerMoney = 11;               /*   玩家当前背包实际的筹码数量  version:1.3.0*/
   optional int32  itotalFreeSpin = 12;                 /*   玩家剩余免费Spin次数，没有则为0  version:1.3.0*/
   optional int32  iUserGrade = 13;                     /*   玩家等级  version:1.3.0*/
   optional int32  iUserExp = 14;                       /*   玩家当前累计经验值  version:1.3.0*/
   optional int32  itotalLottery = 15;                  /*   玩家身上的总积分  version:1.4.0*/
   repeated int32  oddlist = 16;                        /*   原始人玩法中每次转盘所中的倍数（如果没中转盘或其他玩法，则为0或空）  version:1.5.0*/
   optional LongType  stbaseWin = 17;                   /*   玩家本次赢的基本筹码数量（原始人玩法玩家赢取的总筹码=基础筹码*总倍数）  version:1.5.0*/
   optional LongType  stMiniJackpot = 18;               /*   获得miniJackpot筹码数量，没有则为0  version:1.5.0*/
   optional LongType  stMegaJackpot = 19;               /*   获得megaJackpot筹码数量，没有则为0  version:1.5.0*/
   repeated int32 iSlotLuckyNum = 20;                   /*   转盘倍数*/
   optional int32  iFreeBl = 21; //免费模式特殊倍率 

};
//sloto财神猜奖
message SQSlotoGuess
{
   required int32 GuessType=1;   //1：猜颜色   2:猜花色
}
message SASlotoGuess
{
   required int32 ret=1;      //猜牌结果   1：成功   0：失败
   required int64 allWinNum=2; //当前最终赢钱数
}

/* 一张牌  version:1.3.0*/
message VP_CardItem
{
   optional int32  iCardId = 1;                         /*   牌ID  version:1.3.0*/
   optional int32  iPaiMian = 2;                        /*   牌面值  version:1.3.0*/
};

/* 翻牌机玩家数据  version:1.3.0*/
message VP_PlayerInfo
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iUserLevel = 2;                      /*   玩家等级  version:1.3.0*/
   optional LongType  stChips = 3;                      /*   筹码数  version:1.3.0*/
   optional int32  iBetChips = 4;                       /*   下注筹码数（若未下注则为0）  version:1.3.0*/
   repeated VP_CardItem  astPokers = 5;                     /*   最多5张牌(若未下注则为空)  version:1.3.0*/
   optional int32  iCurStars = 6;                       /*   当前已猜中的星星数  version:1.3.0*/
   optional int32  iCurRewardType = 7;                  /*   当前中奖结果 Bind Macrosgroup:VP_VSResult,*/
   optional int32  itotalLottery = 8;               /*   玩家身上的总积分  version:1.4.0*/
};

/* 加入VideoPoker请求  version:1.3.0*/
message VP_JoinReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional string  szToken = 2;                        /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                     /*   房间限红类型  version:1.3.0*/
};

/* 加入VideoPoker返回  version:1.3.0*/
message VP_JoinRes
{
   optional int32  iResultId = 1;                       /*   成功与失败  version:1.3.0*/
   optional int32  iGameState = 2;                      /*   当前游戏状态 Bind Macrosgroup:VP_GameState,*/
   optional VP_PlayerInfo  stPlayer = 3;                        /*   玩家信息  version:1.3.0*/
   repeated int32  ChipList = 4;                        /*   VP的可下注筹码类型  version:1.3.0*/
};

/* 退出VP游戏  version:1.3.0*/
message VP_QuitGameReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 下注  version:1.3.0*/
message VP_ChipsReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional LongType  stChips = 2;                      /*   下注金额  version:1.3.0*/
   optional int32  iChipsID = 3;                        /*   下注的筹码ID(根据筹码ID读表可以获取筹码的价格)  version:1.3.0*/
   optional int32  iOper = 4;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* 下注  version:1.3.0*/
message VP_ChipsRes
{
   optional int32  iResultId = 1;                       /*   返回下注结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional LongType  stChips = 3;                      /*   下注  version:1.3.0*/
   repeated VP_CardItem  astCard = 4;                       /*   最多5张牌  version:1.3.0*/
   optional int32  iOper = 5;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* 发牌换牌请求  version:1.3.0*/
message VP_ExchangeCardReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   repeated VP_CardItem  astCard = 2;                       /*   最多5张牌  version:1.3.0*/
};

/* 发牌换牌返回  version:1.3.0*/
message VP_ExchangeCardRes
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   repeated VP_CardItem  astCard = 2;                       /*   最多5张牌  version:1.3.0*/
   optional int32  iSendType = 3;                       /*   1是发牌，2是换牌  version:1.3.0*/
   optional int32  iResult = 4;                         /*   牌型结果 Bind Macrosgroup:VP_VSResult,*/
   optional int32  iUserGrade = 5;                      /*   玩家等级  version:1.3.0*/
};

/* 比大小请求  version:1.3.0*/
message VP_CompareReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional int32  iReqIndex = 2;                       /*   请求序号（连续第N次）  version:1.3.0*/
};

/* 比大小返回  version:1.3.0*/
message VP_CompareRes
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional int32  iWinOrLose = 2;                      /*   对or错，0是不中，1是中  version:1.3.0*/
   optional int32  iResIndex = 3;                       /*   请求序号（连续第N次）  version:1.3.0*/
   optional LongType  stMyTotalChips = 4;               /*   我的总筹码数目  version:1.3.0*/
};

/* 结算筹码请求  version:1.3.0*/
message VP_CollectReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
};

/* 结算筹码返回  version:1.3.0*/
message VP_CollectRes
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional LongType  stWinChips = 2;                   /*   赢得的筹码数目  version:1.3.0*/
   optional LongType  stMyTotalChips = 3;               /*   我的总筹码数目  version:1.3.0*/
   optional int32  itotalLottery = 8;               /*   玩家身上的总积分  version:1.4.0*/
};

/* blackjack玩家数据  version:1.3.0*/
message Black_PlayerData
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional int32  iSeat = 3;                           /*   玩家坐位号  version:1.3.0*/
   optional string  szNickName = 4;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 5;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 6;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 7;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 8;                         /*   VIP经验  version:1.3.0*/
   optional int32  iLottery = 9;                        /*   玩家彩券数  version:1.3.0*/
   optional LongType  stChips = 10;                     /*   筹码数  version:1.3.0*/
   repeated int32  Betchips = 11;                       /*   下注金额  version:1.3.0*/
   optional int32  iisBlackJack = 12;                   /*   是否是blackjack  version:1.3.0*/
   optional int32  iIsDoubleChip = 13;                  /*   是否加倍过  version:1.3.0*/
   optional int32  iIsInsurance = 14;                   /*   是否购买过保险  version:1.3.0*/
   optional int32  iIsFirstExplode = 15;                /*   第一路牌是否爆牌了  version:1.3.0*/
   optional int32  iIsSecondExplode = 16;               /*   第一路牌是否爆牌了  version:1.3.0*/
   repeated int32  FirstCardList = 17;                  /*   第一堆牌的牌面值  version:1.3.0*/
   repeated int32  SecondCardList = 18;                 /*   第二堆牌的牌面值  version:1.3.0*/
   optional LongType  stInsurchips = 19;                /*   购买保险筹码数  version:1.3.0*/
   optional int32  iAchievementId = 20;                 /*   成就称号  version:1.3.0*/
};

/* Black筹码  version:1.3.0*/
message Black_Chip_Node
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   repeated int32  ChipCount = 2;                       /*   赢取或者下注的筹码数  version:1.3.0*/
   optional LongType  stTotalChips = 3;                 /*   更新后的总筹码  version:1.3.0*/
};

/* 倒计时  version:1.3.0*/
message Black_TimerRes
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iCountDown = 2;                      /*   秒  version:1.3.0*/
   optional int32  iTimerType = 3;                      /*   倒计时的类型 Bind Macrosgroup:Black_TimerType,*/
};

/* 加入Blackjack请求  version:1.3.0*/
message Blackjack_JoinReq
{
   optional int32  iPlayerID = 1;                       /*   玩家  version:1.3.0*/
   optional string  szToken = 2;                        /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                     /*   房间类型ID  version:1.3.0*/
};

/* 服务器通知Ready  version:1.3.0*/
message BlackJackReadyRes
{
   optional int32  iResultId = 1;                       /*   成功与失败  version:1.3.0*/
   repeated Black_PlayerData  astPlayers = 2;                   /*   房间中的所有玩家  version:1.3.0*/
};

/* 服务器通知开始下注  version:1.3.0*/
message BlackJackStartChipsRes
{
   optional Black_TimerRes  stStartChipsTimer = 1;              /*   下注时钟  version:1.3.0*/
};

/* Blackjack下注请求  version:1.3.0*/
message Blackjack_BetReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   repeated int32  Chips = 2[packed=true];                          /*   下注金额  version:1.3.0*/
   optional int32  iOper = 3;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* Blackjack下注请求  version:1.3.0*/
message Blackjack_BetRes
{
   optional int32  iResultId = 1;                       /*   返回下注结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   repeated int32  Chips = 3;                           /*   下注  version:1.3.0*/
   optional int32  iOper = 4;                           /*   1是增加，2是撤回  version:1.3.0*/
};

/* blackjack的一张牌  version:1.3.0*/
message BlackCardItem
{
   optional int32  iCardId = 1;                         /*   牌ID(序号，第N张)  version:1.3.0*/
   optional int32  iPaiMian = 2;                        /*   牌面值  version:1.3.0*/
   optional int32  iOpen = 3;                           /*   0:暗牌；1:明牌  version:1.3.0*/
   optional int32  iPlayerID = 4;                       /*   玩家ID，庄家的ID为0  version:1.3.0*/
};

/* 每人发两张牌的阶段  version:1.3.0*/
message AssignPokerFirstRes
{
   repeated BlackCardItem  astPokerList = 1;                    /*   首次发牌的列表  version:1.3.0*/
   repeated Black_Chip_Node  astPlayerBetList = 2;              /*   玩家下注列表  version:1.3.0*/
};

/* 通知BlackJack的玩家列表  version:1.3.0*/
message BlackJackPlayerListRes
{
   repeated int32  BlackJackPlayers = 1;                /*   获得BlackJack的玩家的列表  version:1.3.0*/
};

/* BlackJack通知购买保险阶段  version:1.3.0*/
message BlackJackInsuranceWaitingRes
{
   optional Black_TimerRes  stInsuranceTimer = 1;               /*   购买保险时钟  version:1.3.0*/
   repeated int32  InvalidPlayer = 2;                   /*   下注的玩家  version:1.3.0*/
};

/* Blackjack请求购买保险  version:1.3.0*/
message Blackjack_InsuranceReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* Blackjack请求购买保险返回  version:1.3.0*/
message Blackjack_InsuranceRes
{
   optional int32  iResultId = 1;                       /*   返回下注结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
};

/* Blackjack保险结算结果  version:1.3.0*/
message Blackjack_InsuranceResultRes
{
   optional int32  iBankerIsBJ = 1;                     /*   庄家是否是黑杰克，0不是，1是  version:1.3.0*/
   repeated Black_Chip_Node  astInsresulst = 2;                 /*   结算列表  version:1.3.0*/
   optional int32  iBankerCardid = 3;                   /*   庄家是blackjack的时候，发送庄家的暗牌的id  version:1.3.0*/
};

/* BlackJack通知玩家操作  version:1.3.0*/
message BlackJackPlayerOperTimerRes
{
   optional Black_TimerRes  stPlayerTimer = 1;                  /*   玩家操作时钟  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID，庄家的ID为0  version:1.3.0*/
   optional int32  iPlayerCanDoubleChip = 3;            /*   玩家可以双倍筹码  version:1.3.0*/
   optional int32  iPlayerCanBreakUp = 4;               /*   玩家可以分牌  version:1.3.0*/
   optional int32  iPlayerBuyInsurance = 5;             /*   玩家可以购买保险  version:1.3.0*/
   optional int32  iPlayerNewCard = 6;                  /*   玩家可以要牌  version:1.3.0*/
   optional int32  iOperIndex = 7;                      /*   通知玩家操作第几路，0为第一路，1为第二路  version:1.3.0*/
};

/* 玩家操作请求  version:1.3.0*/
message Black_Player_OperateReq
{
   optional int32  iPlayerID = 1;                       /*   玩家id  version:1.3.0*/
   optional int32  iOperateType = 2;                    /*   操作类型（保险、双倍、分牌、要牌、停牌） Bind Macrosgroup:Black_OperateType,*/
};

/* 请求加倍结果  version:1.3.0*/
message Black_Player_DoubleChip_Res
{
   optional int32  iResultId = 1;                       /*   返回结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家id  version:1.3.0*/
   optional BlackCardItem  stCard1 = 3;                         /*   加倍之后补一张牌  version:1.3.0*/
   optional int32  iPlayerPoint = 4;                    /*   玩家的点数  version:1.3.0*/
   optional int32  iPlayerExplode = 5;                  /*   玩家的牌爆了  version:1.3.0*/
};

/* 请求分牌结果  version:1.3.0*/
message Black_Player_BreakUp_Res
{
   optional int32  iResultId = 1;                       /*   返回结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家id  version:1.3.0*/
   optional BlackCardItem  stCard1 = 3;                         /*   分牌之后补牌1  version:1.3.0*/
   optional BlackCardItem  stCard2 = 4;                         /*   分牌之后补牌2  version:1.3.0*/
};

/* 请求停牌结果  version:1.3.0*/
message Black_Player_StopCard_Res
{
   optional int32  iResultId = 1;                       /*   返回结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家id  version:1.3.0*/
};

/* 请求要牌结果  version:1.3.0*/
message Black_Player_GetCard_Res
{
   optional int32  iResultId = 1;                       /*   返回结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家id  version:1.3.0*/
   optional BlackCardItem  stCard = 3;                          /*   玩家补牌  version:1.3.0*/
   optional int32  iFirstQueue = 4;                     /*   是否是第一堆牌  version:1.3.0*/
   optional int32  iPlayerPoint = 5;                    /*   玩家的点数  version:1.3.0*/
   optional int32  iPlayerExplode = 6;                  /*   玩家的牌爆了  version:1.3.0*/
};

/* 庄家请求要牌结果  version:1.3.0*/
message Black_Banker_GetCard_Res
{
   optional int32  iBankerExplode = 1;                  /*   庄家的牌爆了  version:1.3.0*/
   optional int32  iBankerIsBlackJack = 2;              /*   庄家是否是黑杰克(0不是，1是)  version:1.3.0*/
   optional int32  iBankerPoint = 3;                    /*   庄家的点数  version:1.3.0*/
   optional int32  iBankerAnPai = 4;                    /*   庄家暗牌的cardID  version:1.3.0*/
   repeated BlackCardItem  astBankerCards = 5;                  /*   庄家牌item  version:1.3.0*/
};

/* 加入返回  version:1.3.0*/
message Black_JoinRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iRoomId = 2;                         /*   房间ID  version:1.3.0*/
   optional int32  iMaxLimit = 3;                       /*   限红最大值  version:1.3.0*/
   repeated Black_PlayerData  astPlayers = 4;                   /*   房间中的所有玩家  version:1.3.0*/
   optional int32  iRoomSM = 5;                         /*   房间状态 Bind Macrosgroup:BlackJack_RoomStateMachineType,*/
   optional int32  iCurOperPlayerID = 6;                /*   当前操作的玩家的id,庄家的ID为0  version:1.3.0*/
   optional int32  iCurOperPlayerSeatID = 7;            /*   当前操作的玩家的座位id  version:1.3.0*/
   optional int32  iTotalCountDown = 8;                 /*   总倒计时  version:1.3.0*/
   optional int32  iCountDown = 9;                      /*   秒  version:1.3.0*/
   optional int32  iPlayerCanDoubleChip = 10;           /*   玩家可以双倍筹码  version:1.3.0*/
   optional int32  iPlayerCanBreakUp = 11;              /*   玩家可以分牌  version:1.3.0*/
   optional int32  iPlayerNewCard = 12;                 /*   玩家可以要牌  version:1.3.0*/
   optional int32  iPlayerOperIndex = 13;               /*   通知玩家操作第几路，0为第一路，1为第二路  version:1.3.0*/
   repeated int32  BankerCardList = 14;                 /*   庄家的牌  version:1.3.0*/
   repeated int32  ChipList = 15;                       /*   可下注筹码类型  version:1.3.0*/
};

/* 更新房间玩家数据  version:1.3.0*/
message Black_UpdatePlayer
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iAddPlayer = 2;                      /*   是否添加玩家，true：添加玩家，false：删除玩家  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
   optional Black_PlayerData  stPlayer = 4;                     /*   添加或者删除的玩家  version:1.3.0*/
};

/* 退出房间  version:1.3.0*/
message Black_QuitRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
};

/* 结果返回  version:1.3.0*/
message Black_FinalResult_Res
{
   optional int32  iResultId = 1;                       /*   返回结果  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional int32  iPlayerPoint1 = 3;                   /*   玩家第一路点数  version:1.3.0*/
   optional int32  iPlayerPoint2 = 4;                   /*   玩家第二路点数  version:1.3.0*/
   optional int32  iBankerPoints = 5;                   /*   庄家点数  version:1.3.0*/
   optional int32  iBankerIsBlackJack = 6;              /*   庄家是否是黑杰克(0不是，1是)  version:1.3.0*/
   optional int32  iBankerAnPai = 7;                    /*   如果是保险之后立刻结算的，需要告诉客户端庄家的暗牌  version:1.3.0*/
   optional LongType  stChipin = 8;                     /*   玩家的下注筹码  version:1.3.0*/
   optional LongType  stWinChips1 = 9;                  /*   第一路赢取筹码  version:1.3.0*/
   optional LongType  stWinChips2 = 10;                 /*   第二路赢取筹码  version:1.3.0*/
   optional LongType  sttotalChips = 11;                /*   结算之后的总筹码  version:1.3.0*/
   optional int32  iPlayerLevel = 12;                   /*   玩家等级  version:1.3.0*/
   optional int32  iUserLottery = 13;                   /*   玩家积分  version:1.4.0*/
};


/* 发送邮件請求  version:1.3.0*/
message SendEmailReq
{
   optional int32  iPlayerId = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iReceiverId = 2;                     /*   收件人ID  version:1.3.0*/
   optional MailItem  stEmailData = 3;                  /*   邮件数据  version:1.3.0*/
};

/* 发送邮件返回  version:1.3.0*/
message SendEmailRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
};

/* 邮件数据請求  version:1.3.0*/
message EmailDataListReq
{
   optional int32  iPlayerId = 1;                       /*   玩家ID  version:1.3.0*/
   optional int64 iLastMailId=2;                        //邮件分页,每页100条,最后一个邮件ID，如果为0，就发最新的100条
};

/* 邮件数据返回  version:1.3.0*/
message EmailDataListRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   repeated MailItem  astEmailDataList = 2;             /*   邮件数据列表  version:1.3.0*/
};

/* 删除邮件請求  version:1.3.0*/
message DeleteMailReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int64  iMailID = 2;                         /*   删除邮件ID  version:1.3.0*/
};

/* 删除邮件返回  version:1.3.0*/
message DeleteMailRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
};

/* 好友  version:1.3.0*/
message FriendItem
{
   optional int32  iusrid = 1;                          /*   好友id  version:1.3.0*/
   optional int32  iachievement = 2;                    /*   好友称号  version:1.3.0*/
   optional string  szhead = 3;                         /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional string  sznickname = 4;                     /*   好友昵称  version:1.3.0*/
   optional int32  ivipLevel = 5;                       /*   好友VIP等级  version:1.3.0*/
   optional LongType  stchips = 6;                      /*   好友筹码  version:1.3.0*/
   optional int32  istate = 7;                          /*   好友状态 Bind Macrosgroup:FriendState,*/
   optional int32  iisFriend = 8;                       /*   是否是好友  version:1.3.0*/
   optional int32  iisCanSendChips = 9;                  /*  是否可以送筹码给该好友(0不可以，1可以)  version:1.4.0*/
   optional int32  iisCanFollow = 10;                  /*  是否可以跟随该玩家一起玩(0不可以，1可以)  version:1.4.0*/
};

/* 本人好友數據請求 MSGID_FRIENDLIST_REQ version:1.3.0*/
message FriendListReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iFriendsType = 2;                    /*   请求类型（0，默认游戏好友，1，facebook好友）  version:1.4.0*/
};

/* 本人好友数据返回 MSGID_FRIENDLIST_RES version:1.3.0*/
message FriendListRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iCurPermisState = 2;                 /*   当前权限状态  version:1.3.0*/
   repeated FriendItem  astFriendList = 3;               /*   玩家好友列表  version:1.3.0*/
   optional int32  iFriendsType = 4;                    /*   好友类型（0，默认游戏好友，1，facebook好友）  version:1.4.0*/
   optional int32   CanSend= 5;                     /*   赠送系统开关（0关，1开）  version:1.4.0*/
};

/* 请求facebook好友  version:1.4.0*/
message SendFbFriendsListReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
   repeated string  iFacebookFriendsID = 2;                     /*   玩家ID  version:1.4.0*/
};


/* 好友(赠送筹码+加好友)消息数据请求 MSGID_FRIEND_MSG_LIST_REQ version:1.4.0*/
message FriendMessageReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
};

/* 好友（赠送筹码+加好友）消息数据返回 MSGID_FRIEND_MSG_LIST_RES version:1.4.0*/
message FriendMessageRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.4.0*/
   repeated FriendItem  astFriendMsgList = 2;           /*   好友消息列表  version:1.4.0*/
   repeated FriendItem  astAddMeList = 3;       /*   添加我为好友的消息列表  version:1.4.0*/
};

/* 向好友赠送筹码请求 MSGID_FRIEND_SENDCHIPS_REQ-- version:1.4.0*/
message FriendSendChipsReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
   repeated int32  astFriendID = 2;                     /*   好友ID列表  version:1.4.0*/
   
};

/* 向好友赠送筹码返回 MSGID_FRIEND_SENDCHIPS_RES-- version:1.4.0*/
message FriendSendChipsRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.4.0*/
   optional int64  iChipsCount = 3;                     /*   赠送筹码数量  version:1.4.0*/
   repeated int32  astFriendID = 4;                     /*   赠送成功的好友ID列表  version:1.4.0*/
};


/* 筹码交易基本信息请求 MSGID_CHIPS_TRADEBASEINFO_REQ-- version:1.4.0*/
message TradeBaseInfoReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
   optional int32  iFriendID = 2;                       /*   好友ID  version:1.4.0*/
   optional int64  iChipsCount = 3;                     /*   筹码数量  version:1.4.0*/
};

/* 筹码交易基本信息返回 MSGID_CHIPS_TRADEBASEINFO_RES-- version:1.4.0*/
message TradeBaseInfoRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.4.0*/
   optional int32  iMinChipsCount = 2;                   /*   最小交易数量  version:1.4.0*/
   optional int32  iTradeFee = 3;           /*   手续费率*（百分比）  version:1.4.0*/
   optional int32  iIsManager=4;          /*0:不是代理1：是代理*/
   optional string stPlayerName=5;        /*对方名字*/
};

/* 筹码交易请求 MSGID_CHIPS_TRADE_REQ-- version:1.4.0*/
message ChipsTradeReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
   optional int32  iFriendID = 2;                       /*   好友ID  version:1.4.0*/
   optional int64  iChipsCount = 3;                     /*   交易筹码数量  version:1.4.0*/
   optional string stBankPassWord=4;                     /* 银行密码*/
};

/* 筹码交易返回 MSGID_CHIPS_TRADE_RES-- version:1.4.0*/
message ChipsTradeRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.4.0*/
   optional int64  iMyTotalChips = 2;                   /*   交易之后我的剩余总筹码  version:1.4.0*/
   optional int32 strTargetPlayerId=3;                 /*   转账对象Id*/
   optional int64  iTradeNum=4;                         /*   转账金额*/
   optional int64  iEmailId=5;                          /*   对应的EmailId*/
};

message SQCancelTrade
{
   required int64 mailId=1;//邮件ID
}

message SACancelTrade
{
   required SYSTEMRESULT ret=1;//是否成功
   optional int64 mailId=2;//邮件ID
}

/* 其他玩家赠送筹码给我时，服务器推送的消息 MSGID_RECIEVE_TRADECHIPS_RES-- version:1.4.0*/
message ReceiveTradeChips
{
   optional string  szFriendnickname = 1;                 /*   好友昵称  version:1.3.0*/
   optional int64  iTradeChips = 2;         /*   交易筹码数量  version:1.4.0*/
};

/* 领取好友赠送的筹码请求 MSGID_FRIEND_RECIEVECHIPS_REQ version:1.4.0*/
message GetFriendsChipsReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.4.0*/
   repeated int32  astFriendID = 2;                     /*   好友ID列表  version:1.4.0*/   
};

/* 领取好友赠送的筹码返回 MSGID_FRIEND_RECIEVECHIPS_RES version:1.4.0*/
message GetFriendsChipsRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.4.0*/
   optional int64  iMyTotalChips = 2;                   /*   领取之后我的剩余总筹码  version:1.4.0*/
   optional int64  iChipsCount = 3;                     /*   领取筹码总数量  version:1.4.0*/
   repeated int32  astFriendID = 4;                     /*   领取成功的好友ID列表  version:1.4.0*/
};

/* 删除好友請求 MSGID_DELETEFRIEND_REQ-- version:1.3.0*/
message FriendDeleteReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iFriendID = 2;                       /*   删除好友ID  version:1.3.0*/
};

/* 删除好友返回 MSGID_DELETEFRIEND_RES-- version:1.3.0*/
message FriendDeleteRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iFriendID = 2;                       /*   删除好友ID  version:1.3.0*/
};

/* 添加好友請求 MSGID_ADDFRIEND_REQ version:1.3.0*/
message FriendAddReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iFriendID = 2;                       /*   添加好友ID  version:1.3.0*/
   optional int32  action = 3;                          /*   同意或拒绝1同意  version:1.3.0*/
};

/* 添加好友返回 MSGID_ADDFRIEND_RES version:1.3.0*/
message FriendAddRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional FriendItem  stFriendData = 2;                   /*   玩家数据  version:1.3.0*/
};

/* 搜索好友請求 MSGID_SEARCHFRIEND_REQ version:1.3.0*/
message FriendSearchReq
{
   optional int32  iSearchID = 1;                       /*   搜索ID  version:1.3.0*/
};

/* 搜索好友返回 MSGID_SEARCHFRIEND_RES version:1.3.0*/
message FriendSearchRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional FriendItem  stFriendData = 2;                   /*   玩家数据  version:1.3.0*/
};

/* 好友权限操作请求 MSGID_FRIENDPERMISSION_REQ version:1.3.0*/
message FriendPermissionReq
{
   optional int32  iPlayerId = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iPermissionState = 2;                /*   权限状态  version:1.3.0*/
};

/* 好友权限操作返回 MSGID_FRIENDPERMISSION_RES version:1.3.0*/
message FriendPermissionRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iCurPermisState = 2;                 /*   当前权限状态  version:1.3.0*/
};

/* 玩家状态变化，百家乐，21点，老虎机，翻牌机  version:1.3.0*/
message PlayerStateChange
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional int32  iPlayerState = 2;                    /*   玩家状态 Bind Macrosgroup:FriendState,*/
   optional int32  iEnter = 3;                          /*   1:进入，0：离开  version:1.3.0*/
   optional int32  iRoomId = 4;                         /*   玩家房间id  version:1.3.0*/
};

/* MSGID_CHANGEACHIEVEMENT_REQ  version:1.3.0*/
message ChangeAchievementReq
{
   optional int32  iUserId = 1;                         /*   玩家Id  version:1.3.0*/
   optional int32  iAchievementId = 2;                  /*   成就Id  version:1.3.0*/
};

/* MSGID_CHANGEACHIEVEMENT_RES  version:1.3.0*/
message ChangeAchievementRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iAchievementId = 2;                  /*   成就Id  version:1.3.0*/
};

/* 成就单元  version:1.3.0*/
message AchievementItem
{
   optional int32  iAchievementId = 1;                  /*   成就Id  version:1.3.0*/
   optional LongType  stCurValue = 2;                   /*   当前进度  version:1.3.0*/
   optional int32  iIsDone = 3;                         /*   是否完成 0未完成 1完成  version:1.3.0*/
};

/* MSGID_ACHIEVEMENTDATA_REQ  version:1.3.0*/
message AchievementDataReq
{
   optional int32  iUserId = 1;                         /*   玩家Id  version:1.3.0*/
};

/* MSGID_ACHIEVEMENTDATA_RES  version:1.3.0*/
message AchievementDataRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   repeated AchievementItem  astAchievementList = 2;            /*   成就列表  version:1.3.0*/
};

/* 邮件  version:1.5.0*/
message MailItem
{
   optional int64   imailId = 1;                        /*   邮件Id  version:1.5.0*/
   optional int32   iReadState = 2;                     /*   阅读状态  version:1.5.0*/
   optional int32   iRewardState = 3;                   /*   附件领取状态  version:1.5.0*/
   optional int32   imailType = 4;                      /*   邮件类型  version:1.5.0*/
   optional int32   iAttachType = 5;                    /*   附件类型  version:1.5.0*/
   optional string  szmailDate = 6;                     /*   邮件日期  version:1.5.0*/
   optional string  szmailTitle = 7;                    /*   邮件标题  version:1.5.0*/
   optional string  szmailContent = 8;                  /*   邮件正文  version:1.5.0*/
   optional int32   isendId = 9;                        /*   发件人ID  version:1.5.0*/
   optional string  szSendName = 10;                    /*   发件人昵称  version:1.5.0*/
   optional int64   iAttachCounts = 11;                 /*   附件数量  version:1.5.0*/
   optional int32   iIsTrade=12;                        /*   收邮件的人是操作赠送筹码的人 大于0*/
   optional int64   iLastTime=13;                       //   邮件剩余时间
};

/* 操作邮件請求 MSGID_OPERATEEMAIL_REQ version:1.5.0*/
message OperateMailReq
{
   optional int32  iPlayerID = 1;                       /*   玩家ID  version:1.5.0*/
   optional int64  iMailID = 2;                         /*   邮件ID  version:1.5.0*/
   optional int32  iOperateType = 3;                     /*   操作类型（阅读，领取，删除）   version:1.5.0*/
};

/* 操作邮件返回 MSGID_OPERATEEMAIL_RES version:1.5.0*/
message OperateMailRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.5.0*/
   optional int64  iMailID = 2;                         /*   邮件ID  version:1.5.0*/
   optional int32  iOperateType = 3;                     /*   操作类型（阅读，领取，删除）  version:1.5.0*/
   optional int32 strSendPlayerId=4;                    /*   转账人的Id（领取操作成功的时候发）*/
   optional int64 iSendChipNum=5;                        /*   转账金额（领取操作成功的时候发）*/   
};

/* MSGID_ACHIEVEMENTDONE_RES  version:1.3.0*/
message AchievementDoneRes
{
   optional int32  iAchievementId = 1;                  /*   完成成就Id  version:1.3.0*/
   optional int32  iIsAutoChange = 2;                   /*   是否自动更换 0:否 1:是  version:1.3.0*/
};

/* MSGID_TASK_STATE  version:1.3.0*/
message TaskState
{
   optional int32  iUserId = 1;                         /*   玩家id  version:1.3.0*/
   optional int32  iTaskType = 2;                       /*   任务类型  version:1.3.0*/
   optional int32  iTaskArg = 3;                        /*   任务参数  version:1.3.0*/
};

/* MSGID_TASK_STATE  version:1.3.0*/
message Server_Task
{
   optional int32  iUserId = 1;                         /*   玩家id  version:1.3.0*/
   optional int32  iTaskType = 2;                       /*   任务类型  version:1.3.0*/
   optional int32  iTaskArg = 3;                        /*   任务参数  version:1.3.0*/
};

/* 小跑马灯   version:1.3.0*/
message SmallMarquee
{
   optional int32  iMarqueeType = 1;                    /*   跑马灯类型  version:1.3.0*/
   optional int32  iUserId = 2;                         /*   玩家id  version:1.3.0*/
   optional string  szname = 3;                         /*   名字  version:1.3.0*/
   optional int32  ivip = 4;                            /*   VIP等级  version:1.3.0*/
   optional LongType  stchips = 5;                      /*   总筹码数  version:1.3.0*/
   optional int32  iparam1 = 6;                         /*   参数1  version:1.3.0*/
   optional string  szparam2 = 7;                       /*   参数2  version:1.3.0*/
};

/* 顶部小跑马灯 MSGID_TOPSMALLMARQUEE_RES   version:1.3.0*/
message TopSmallMarqueeRes
{
   optional int32  iModeId = 1;                         /*   游戏模式  version:1.3.0*/
   optional int32  ioperate = 2;                        /*   操作 0 插入 1 覆盖  version:1.3.0*/
   repeated SmallMarquee  astmarqueeList = 3;               /*   小跑马灯信息  version:1.3.0*/
};

/* 底部小跑马灯 MSGID_BOTTOMSMALLMARQUEE  version:1.3.0*/
message BottomSmallMarqueeRes
{
   optional int32  iModeId = 1;                         /*   游戏模式  version:1.3.0*/
   optional int32  ioperate = 2;                        /*   操作 0 插入 1 覆盖  version:1.3.0*/
   repeated SmallMarquee  astmarqueeList = 3;               /*   小跑马灯信息  version:1.3.0*/
};

/* 筹码变化 MSGID_SERVER_PLAYER_CHIPCHANGE_RES  version:1.3.0*/
message ChipsChange
{
   optional int32  iPlayerID = 1;                       /*   玩家id  version:1.3.0*/
};

/* 客服消息单元   version:1.3.0*/
message ServiceMessageItem
{
   optional int32  iTime = 1;                           /*   时间  version:1.3.0*/
   optional string  szContent = 2;                      /*   内容  version:1.3.0*/
   optional int32  inotify = 3;                         /*   通知  version:1.3.0*/
   optional int32  iquesid = 4;                         /*   问题id  version:1.3.0*/
};

/* 客服消息组   version:1.3.0*/
message ServiceMessageGroup
{
   optional ServiceMessageItem  stQuestion = 1;                     /*   问题  version:1.3.0*/
   optional ServiceMessageItem  stReply = 2;                        /*   回复  version:1.3.0*/
};

/* 发送客服消息请求 MSGID_SEND_SERVICE_REQ  version:1.3.0*/
message SendServiceReq
{
   optional int32  iUserId = 1;                         /*   玩家Id  version:1.3.0*/
   optional ServiceMessageItem  stMessage = 2;                      /*   客服消息  version:1.3.0*/
};

/* 发送客服消息返回 MSGID_SEND_SERVICE_RES  version:1.3.0*/
message SendServiceRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
};

/* 请求客服消息列表 MSGID_SERVICELIST_REQ  version:1.3.0*/
message RecentServiceListeq
{
   optional int32  iUserId = 1;                         /*   玩家Id  version:1.3.0*/
};

/* 返回客服消息列表 MSGID_SERVICELIST_RES  version:1.3.0*/
message RecentServiceListes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   repeated ServiceMessageGroup  astMessage = 2;                    /*   近期客服消息列表  version:1.3.0*/
};

enum RES
{
   RES_SUCCESS=1;
   RES_FAIL=2;
   RES_EXIT_ACCOUNT=3;//账号已存在
   RES_CODE=4;//验证码错误
   RES_FULL=5;//今日注册超限
   RES_INVITENUM_NOT_EXSITS=6;//邀请码不存在
   RES_PHONE_EXISTS=7;//手机已经注册
}
//验证账号密码
message SQLoginCheck
{
   required string account=1;
   required string password=2;
   required string uniqueIdentifier = 3;
}
message SALoginCheck
{
    required RES result=1;
    optional string openid=2;
    optional string token=3;
}

message SQLoginCheckPhone
{
   required string account=1;
   optional string password=5;
   optional string code=2;//短信验证码,新绑定可不填
   optional string appkey=3;//第三方key,新绑定可不填
   optional string newphone=4;//电话号码
}

//注册账号
message SQRegister
{
   required string account=1;
   required string password=2; 
   required string phone=3;
   optional string ip=4;
   optional string deviceid=5;
   required string wechat = 6;
   required string inviteNum = 7;
   required string  msgCode =8;  
}
message SARegister
{
   required RES result=1;
}

message CSMsgBody
{
   optional FLCSReconnectRes  stFLCSReconnectRes = 1;           /* MSGID_RECONNECT_RES,  重连结果  version:1.3.0*/
   optional CSLoginLogicRes  stLoginLogicRes = 2;               /* MSGID_LOGINLOGIC_RES,  登陆逻辑服结果  version:1.3.0*/
   optional CSDataLoadRes  stDataLoadRes = 3;                   /* MSGID_DATALOAD_RES,  数据加载结果返回  version:1.3.0*/
   optional CGameLoginRes  stCGameLoginRes = 4;                 /* MSGID_LOGIN_RES,  登陆结果  version:1.3.0*/
   optional CGameUserBaseDataRes  stCGameUserBaseDataRes = 5;       /* MSGID_USERBASEDATA_RES,  获取玩家基础数据返回  version:1.3.0*/
   optional FLTestAddItem  stTestAddItem = 6;                   /* MSGID_ADDITEM_REQ,  增加物品  version:1.3.0*/
   optional CSNoticeReq  stNoticeReq = 7;                   /* MSGID_NOTICE_REQ,  公告请求  version:1.3.0*/
   optional CSNoticeRes  stNoticeRes = 8;                   /* MSGID_NOTICE_RES,  公告返回  version:1.3.0*/
   optional CSBroadcastRes  stBroadcastRes = 9;                 /* MSGID_BROADCAST_RES,  下行广播  version:1.3.0*/
   optional BJL_JoinRoomRes  stJoinRoomRes = 10;                /* MSGID_JOIN_ROOM_RES,  加入房间返回  version:1.3.0*/

   //新建//////////////////////////////////////////////////////////////////////////////////////////////////////////////
   optional SQRegister  SQRegister = 11;                /* MSGIDNEW_REGISTER,创建账号 */
   optional SARegister  SARegister = 12;                /* MSGIDNEW_REGISTER,创建账号 */
   optional SQLoginCheck  SQLoginCheck = 13;                /* MSGIDNEW_REGISTER,验证账号 */
   optional SALoginCheck  SALoginCheck = 14;                /* MSGIDNEW_REGISTER,验证账号 */
   optional string webToken = 15;//专享充值的Token
};
//钻石兑换筹码
message SQExchangeDTC
{
   required int32 diamondNum=1;//兑换花费钻石数量
}
message SAExchangeDTC
{
   required SYSTEMRESULT res=1;
}

//绑定账号
message SQBind {
    required string szLoginType=1;//openid类型        
    required string szLoginId=2;//新openid    
}

message SABind {
    required int32 ret = 1;//结果(0成功)
    optional int32 rewardNum=2;//奖励筹码数量
}

//发送聊天
message SQChatWorld
{
   required string szPlayerName=1;//玩家名字
   required string szContent=2;//聊天内容
}
//请求改名价格数据
message SQChangeNamePrice
{
  
}

message SAChangeNamePrice
{
   optional int32 diamondNum=1;//钻石数量
   optional int32 chipNum=2;//筹码数量
}

//请求救济金
message SQReliefChip {
}

message SAReliefChip {
    optional int32 ret=1;//0成功  
}
//敲金猪
message SQGetChipPig{
}

message SAGetChipPig
{
    enum eGetChipPigType
    {
        eGetChipPigType_Ok = 0;
        eGetChipPigType_NoDiamond = 1;
        eGetChipPigType_LittleThanMinSaveing = 2;
    };
  required int32 ret=1;//0成功

  optional string pigChip = 2;//敲金猪得到的钱 
  optional int32 chipType = 3;//敲金猪得到的钱的类别 
}

//申请添加好友
message SQAccpetAddFriend 
{
    required int32 friendid=1;
}

message ApplyUsrData {
    optional int32 applyusrid=2;//申请者ID
    optional string applyusrname=3;//申请者名字
}

//回复加好友结果，并告知对方有人加好友
message SANotifyAccpetAddFriend {
    required int32 ret=1;//0成功
    optional ApplyUsrData ApplyUsrData=2;//申请者
}

//获取申请者列表
message SQGetApplyList {
}

message SAGetApplyList {
    repeated ApplyUsrData ApplyUsrData=2;//申请者
}

//绑定电话
message SQBindPhone {   
    required string code=2;//短信验证码,新绑定可不填
    optional string appkey=3;//第三方key,新绑定可不填
    required string newphone=4;//电话号码
}

message SABindPhone {
    required SYSTEMRESULT ret=1;//成功或失败
    optional int64 chipAwardNum=2; //奖励的筹码
}

//修改密码
message SQModifyPassword
{
   required string account=1;//账号
   required string code=2;//短信验证码
   required string appkey=3;//第三方key
   required string newPassword=4;//新密码
   optional string oldPassword=5;//旧密码
}
message SAModifyPassword
{
    required SYSTEMRESULT ret=1;//成功或失败 
}

//请求mycard交易码
message SQGetMycardAuth 
{
    required int32 itemid=1;//商品ID
}

message SAGetMycardAuth {
    required string auth=1;//交易码
}

//修改银行密码
message SQSetbankPassword 
{
    optional string code=1;//短信验证码
    optional string appkey=2;//第三方key
    optional string oldPassword = 3;//旧密码
    optional string newPassword = 4;//新的密码
}
message SASetbankPassword {
    required SYSTEMRESULT ret=1;//成功或失败
}

//存钱
message SQSaveMoneyInBank {
    optional int64 Chips = 1;//存钱数
}

message SASaveMoneyInBank {
    required SYSTEMRESULT ret=1;//成功或失败
    optional int64 chipNum=2;
}

//取钱
message SQLoadMoneyInBank {
    optional string Password = 1;//密码
    optional int64 Chips = 2;//存钱数
}

message SALoadMoneyInBank {
    required SYSTEMRESULT ret=1;//成功或失败
    optional int64 chipNum=2;
}

// 捕鱼相关开始
/* 捕鱼游戏状态类型 */
enum CatchFish_gameStateType 
{
    CF_GAMESTATE_NORMAL_TIME = 1;       /* 普通时间 */
    CF_GAMESTATE_SPECIAL_TIME = 2;      /* 特殊时间 */
    CF_GAMESTATE_TRANSITION_TIME = 3;   /* 过渡时间 */
};

/* 捕鱼房间状态机类型 */
enum CatchFish_RoomStateMachineType 
{
    CF_ROOMSTATE_NORMAL_TIME = 1;   /* 普通时间 */
    CF_ROOMSTATE_SPECIAL_TIME = 2;  /* 特殊时间 */
    CF_ROOMSTATE_TRANSITION_TIME = 3;   /* 过渡时间 */
};

/* 捕鱼加入房间 */
message CatchFish_JoinRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iRoomId = 2;                         /*   房间ID  version:1.3.0*/
   repeated CatchFish_PlayerData  astPlayers = 3;       /*   房间中的所有玩家  version:1.3.0*/
   optional int32  iRoomSM = 4;                         /*   房间状态 Bind Macrosgroup:BlackJack_RoomStateMachineType,*/
   required int64 serverTicks = 5;
};

message CatchFish_JoinRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家 */
   optional string  szToken = 2;                        /*   登录 */
   optional int32  iRoomTypeId = 3;                     /*   房间类型 */
};

/* 捕鱼退出房间 */
message CatchFish_QuitRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家 */
};

message CatchFish_QuitRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
};

/* catchfish玩家数据 */
message CatchFish_PlayerData
{
   required int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional int32  iSeat = 3;                           /*   玩家坐位号  version:1.3.0*/
   optional string  szNickName = 4;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 5;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 6;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 7;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 8;                         /*   VIP经验  version:1.3.0*/
   optional LongType  stChips = 9;                      /*   筹码数  version:1.3.0*/
};

/* 更新房间玩家数据  version:1.3.0*/
message CatchFish_UpdatePlayer
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iAddPlayer = 2;                      /*   是否添加玩家，true：添加玩家，false：删除玩家  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
   optional CatchFish_PlayerData  stPlayer = 4;         /*   添加或者删除的玩家  version:1.3.0*/
};

message CatchFish_FishMovePoint 
{
    required float x = 1;
    required float y = 2;
}

message CatchFish_SpawnFish
{
    required int32 iFishID = 1;                         // ID
    required int64 iFishGID = 2;                        // 全局ID
    repeated CatchFish_FishMovePoint movePoints = 3;    // 移动点
    required int32 pointCount = 4;                      // 移动点数量
    required int32 fishType = 5;                        // 类型
    required int64 spawnTime = 6;                       // 生成时间
    required int32 tag = 7;                             // 标签
    required int32 pathType = 8;                        // 路径类型
    required float delayTime = 9;                       // 移动延时
    required float moveSpeed = 10;                      // 移动速度
    optional int64 array4centerFish = 11;               // 鱼阵4的中心鱼GID
    optional int32 array4Index = 12;                    // 在鱼阵4的序列
    optional float array4Speed = 13;                    // 鱼阵4的鱼旋转速度
    optional float array4Radius = 14;                   // 鱼阵4的鱼距离中心鱼的距离
    optional float array4Interval = 15;                 // 鱼阵4的鱼的间隔
    required float elapsed =16;                         // 已经消耗的时间
    required float playSpeed = 17;                      // 动作播放速度
}

message CatchFish_PlayerElectromFireReq
{
	required float angle = 1;
	required int64 spawnTicks = 2;
	required float gunPosX = 3;
	required float gunPosY = 4;
	required float bulletPointX = 5;
	required float bulletPointY = 6;
	required int32 weaponID = 7;
}
message CatchFish_PlayerElectromFireRes
{
	required int32 ret = 1;
	required int64 bulletGID = 2;
	required float angle = 3;
	required int32 playerID = 4;
	required int64 spawnTicks = 5;
}

message CatchFish_SpawnFishRes
{
    repeated CatchFish_SpawnFish listFishes = 1;
    required int32 type = 2;
    required string info = 3;
}

message CatchFish_CatchInfo 
{
    required int64 fishGID = 1;
    required int64 getChip = 2;
    optional int32 specialType=3;//特殊玩法类型（鱼王，减速，闪电，炸全屏鱼）
}

message CatchFish_RemoveFishRes
{
    required int32 iPlayerID = 1;
    repeated CatchFish_CatchInfo listCatch = 2;
    required int32 tag = 3;
}

message CatchFish_AsyncFishesRes 
{
    repeated CatchFish_SpawnFish listFishes = 1;
    repeated CatchFish_BulletData bullets = 2;
}

message CatchFish_BulletData
{
    required int32 iID = 1;
    required float angle = 2;
    required int64 lockFishID = 3;
    required float x = 4;
    required float y = 5;
    required int32 playerID = 6;
}

message CatchFish_PlayerFireReq
{
    required int32 weaponID = 1;
    required float angle = 2;
    required int64 lockFishID = 3;
    required int64 spawnTicks = 4;
    required float gunPosX = 5;
    required float gunPosY = 6;
    required float bulletPointX = 7;
    required float bulletPointY = 8;    
}
message CatchFish_ElectromBeginRes
{
	required int32 iPlayerID = 1;
}
message CatchFish_PlayerFireRes
{
    required int32 ret = 1;
    required int32 weaponID = 2;
    required int64 bulletGID = 3;
    required int64 lockFishID = 4;
    required float angle = 5;
    required int32 playerID = 6;
    required int64 spawnTicks = 7;
    required int64 bulletCost = 8;
}

message CatchFish_PlayerSuperFireReq
{
	required float angle = 1;
	required int64 spawnTicks = 2;
	required float gunPosX = 3;
	required float gunPosY = 4;
	required float bulletPointX = 5;
	required float bulletPointY = 6;
	required int32 weaponID = 7;
}

message CatchFish_PlayerSuperFireRes
{
	required int32 ret = 1;
	required int64 bulletGID = 2;
	required float angle = 3;
	required int32 playerID = 4;
	required int64 spawnTicks = 5;
}

message CatchFish_SuperBombRes
{
	required int32 iPlayerID = 1;
}

message CatchFish_SuperBeginRes
{
	required int32 iPlayerID = 1;
}
message CatchFish_PlayerHitReq
{
    required int32 iWeaponID = 1;
    repeated int64 iListFishesGID = 2;
    required int64 iBulletGID =3;
}

message CatchFish_PlayerHitRes
{
    required int32 iRet = 1;
    required int32 iPlayerID = 2;
    required int64 iBulletID = 3;
}

message CatchFish_ChangeAllFishPlaySpeed
{
	required float playSpeed = 1;
	optional int32  iBossID = 2;
}

message CatchFish_ChangeFishPlaySpeed
{
    required int64 fishGID = 1;
    required float playSpeed = 2;
}

message CatchFish_PlayerLockFishReq
{
    required int64 fishGID = 1;
}

message CatchFish_PlayerLockFishRes
{
    required int32 playerID = 1;
    required int64 fishGID = 2;
}

message CatchFish_PlayerUseSkillReq
{
    required int32 playerID = 1;
    required int32 skillID = 2;
}

message CatchFish_PlayerUseSkillRes
{
    required int32 playerID = 1;
    required int32 skillID = 2;
    required int32 ret = 3;
}

message MutiBomb_Res
{
	repeated CatchFish_FishMovePoint bombPoints = 3;	// 移动点
}

// 捕鱼相关结束

//扎金花相关
/* 加入房间 */
//炸金花进入房间 41001
message GoldFlower_JoinRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iRoomId = 2;                         /*   房间ID  version:1.3.0*/
   repeated GoldFlower_PlayerData  astPlayers = 3;       /*   房间中的所有玩家  version:1.3.0*/
   optional int32  iRoomSM = 4;                         /*   房间状态 Bind Macrosgroup:BlackJack_RoomStateMachineType,*/
   required int64 serverTicks = 5;
   required int32 gameState = 6;//房间状态
   required int64 gameClock = 7;//开始倒计时
   optional int32  iCellScore = 8;
};

message GoldFlower_JoinRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家 */
   optional string  szToken = 2;                        /*   登录 */
   optional int32  iRoomTypeId = 3;                     /*   房间类型 */
};

//炸金花离开房间 41002
message GoldFlower_QuitRoomReq
{
   optional int32  iPlayerID = 1;                       /*   玩家 */
};

message GoldFlower_QuitRoomRes
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iPlayerID = 2;                       /*   玩家ID  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
   optional int32  iGameState = 4;
};

/* 玩家数据 */
message GoldFlower_PlayerData
{
   required int32  iPlayerID = 1;                       /*   玩家ID  version:1.3.0*/
   optional string  szUserHead = 2;                     /*   头像地址，游客是id,微信则是微信头像地址  version:1.3.0*/
   optional int32  iSeat = 3;                           /*   玩家坐位号  version:1.3.0*/
   optional string  szNickName = 4;                     /*   玩家昵称  version:1.3.0*/
   optional int32  iLevel = 5;                          /*   玩家等级  version:1.3.0*/
   optional int32  iExp = 6;                            /*   玩家经验值  version:1.3.0*/
   optional int32  iVIP = 7;                            /*   VIP等级  version:1.3.0*/
   optional int32  iVIPExp = 8;                         /*   VIP经验  version:1.3.0*/
   optional LongType  stChips = 9;                      /*   筹码数  version:1.3.0*/
   optional int32  iCurTitle = 10;                    /*当前称号*/
};

message GoldFlowerJoinRoomS2C{
   required int32 result = 1;//加入房间返回
}

/* 更新房间玩家数据  version:1.3.0*/
message GoldFlower_UpdatePlayer
{
   optional int32  iResultId = 1;                       /*   返回ID  version:1.3.0*/
   optional int32  iAddPlayer = 2;                      /*   是否添加玩家，true：添加玩家，false：删除玩家  version:1.3.0*/
   optional int32  iRoomId = 3;                         /*   房间ID  version:1.3.0*/
   optional GoldFlower_PlayerData  stPlayer = 4;         /*   添加或者删除的玩家  version:1.3.0*/
   optional int32  iCellScore = 5; 
};
//扎金花结束

//牛牛相关
//牛牛进入房间
message SQNiuNiuJoinRoom 
{
    optional int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
    optional string  szToken = 2;                       /*   登录Token  version:1.3.0*/
    optional int32  iRoomTypeId = 3;                    /*   房间限红类型  version:1.4.0*/
 }

 message SANiuNiuJoinRoom {
    required int32 iRet = 1;                            //
}

//位置数据
message PosData {
    repeated int32 CardId=1;//牌信息(开牌阶段才有)   
    required int64 BettingChips=2;//已经下注的筹码数
    optional int32 CardType=3;//牌型
    optional int64 WinIndexMoney=5;//输赢情况,庄永远为0,闲家+为赢的，-为输的
    repeated int32 HandCardId=6;//手牌信息(开牌阶段才有)
    optional int32 HandCardType=7;//手牌牌型
}
//请求房间当前数据
message SQGetRoomData
{
}
//获取房间内当前的数据(服务器广播)
message SAGetRoomData {
    optional int32 canChips = 1;//能否下注
    repeated SANiuNiuSitDown SANiuNiuSitDown=2;//坐下的玩家信息
    repeated PosData PosData=3;//固定5组牌
    repeated int64 myBettingChips=4;//我的下注情况
    optional int32 iLastTime=5;//倒计时
    optional int32 iMaxMultiple=6;//最大倍数
    required int64 curMyChip=7;//我当前的筹码数量
}

message SQNiuNiuExitRoom {
}

message SANiuNiuExitRoom {
    required int32 iRet = 1;
    optional int32 iPlayerId=2;
}

message SQNiuNiuSitDown {
    required int32 Index = 1;
}

message SANiuNiuSitDown {
    optional int32 iRet = 1;
    optional int32  iPlayerId = 2;                      /*   玩家ID  version:1.4.0*/
    optional string  szNickName = 3;                    /*   玩家名字  version:1.4.0*/
    optional string  szFaceIcon = 4;                    /*   玩家头像  version:1.4.0*/
    optional int64  iChips = 5;                     /*   钱  version:1.4.0*/
    optional int32  iVIP = 6;                        /*vip等级*/
    optional int32  iAchievementId = 7;                 /*   成就Id  version:1.3.0*/
    optional int32  iSeatID=8;                           /*座位号1-8*/
    optional int32  iGameLoop=9;                           /*当前上座局数*/
    optional int32  iMaxGameLoop=10;                           /*总上座局数*/
}

message PokerBettingData {
    required int32 Index = 1;         //从1到4
    required int64 Chips = 2;
    optional int32  iPlayerId = 3;    /*   玩家ID  version:1.4.0*/
}
//下注
message SQNiuNiuBetting {
    repeated PokerBettingData PokerBettingData=1;
	optional bool iContiueBet = 2;
}
//下注成功广播给所有人
message SANiuNiuBetting {
    required int32 iRet = 1;
    repeated PokerBettingData PokerBettingData=2;
	optional bool iContiueBet = 3;
}

//开始下注
message SQStartNiuNiuGame 
{
    required int32 time=1;//下注阶段倒计时
}

//结算数据
message SitDownBettingData {
    repeated int64 Betting = 1;//+为赢的，pos1开始,索引*5
    required int32 PlayerId=2;
}
message SQNiuNiuOverGame {
    repeated PosData PosData = 1;//庄闲数据
    repeated SitDownBettingData SitDownBettingData = 2;//座位数据*8
    repeated int64 Betting = 3;//自己下注的结果,+为赢的,-为输的，pos1开始,索引*5
    required int64 zhuangNum=4;//庄结果（系统）
}

//从座位起来
message SQNiuNiuStandUp {
    required int32 Index=1;//起来的座位索引
    optional int32 iRet = 2;
}

enum ENiuniu_Type 
{
    ENiuniu_Type_Meiniu = 0;    /* 没牛*/
    ENiuniu_Type_Niu1 = 1;  /* 牛一 */
    ENiuniu_Type_Niu2=2;
    ENiuniu_Type_Niu3=3;
    ENiuniu_Type_Niu4=4;
    ENiuniu_Type_Niu5=5;
    ENiuniu_Type_Niu6=6;
    ENiuniu_Type_Niu7=7;
    ENiuniu_Type_Niu8=8;
    ENiuniu_Type_Niu9=9;
    ENiuniu_Type_Niuniu=10;
    ENiuniu_Type_Shunzi=11;//顺子牛
    ENiuniu_Type_WuHua=12;//无花牛
    ENiuniu_Type_Tonghua=13;//同花牛
    ENiuniu_Type_Hulu=14;//葫芦牛
    ENiuniu_Type_Zhadan=15;//炸弹牛
    ENiuniu_Type_Wuxiaoniu=16;//五小牛
};

//获取胜负走势
message SQGetNiuNiuCompleteTrend {
}

//每个花色的走势
message ColorTrend {
    repeated int32 Trend = 1;//1为胜，2为负
}
message SAGetNiuNiuCompleteTrend {
    repeated ColorTrend ColorTrend = 1;//N个闲家
}

//请求房间没坐下玩家
message SQGetNoSitPlayer
{
}
message SAGetNoSitPlayer {
    repeated SANiuNiuSitDown SANiuNiuSitDown=1;//没坐下的玩家信息1
}

//请求房间庄家列表
message SQGetZhuangList
{
}
message SAGetZhuangList {
    repeated SANiuNiuSitDown SANiuNiuSitDown=1;//庄家列表的玩家信息1
    optional int64 ZhuangChipLimit=8;//下庄限制
}

message SQGetPoolInfo
{
}
message SAGetPoolInfo
{
   required int64 PoolNum=1;
   repeated ENiuniu_Type niuType=2;//抽水牌型列表
   repeated int32 percent=3;// 抽水牌型对应的抽水比例列表
    optional string  szNickName = 4;                    /*   上次获得奖励玩家名字  version:1.4.0*/
    optional string  szFaceIcon = 5;   //上次获得奖励玩家头像
    optional int64 Bigwinnum=6;//超级大奖筹码数
    optional ENiuniu_Type BigwinCardType=7;//超级大奖牌型
    optional int64 LastWinNum=8;//上一次获奖的金额（对应发过来的玩家）
}

//红黑大战相关
//红黑大战进入房间
message SQHHDZJoinRoom 
{
    optional int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
    optional string  szToken = 2;                       /*   登录Token  version:1.3.0*/
    optional int32  iRoomTypeId = 3;                    /*   房间限红类型  version:1.4.0*/
 }

 message SAHHDZJoinRoom {
    required int32 iRet = 1;                            //
}
//请求房间当前数据
message SQHHDZGetRoomData
{
}
//获取房间内当前的数据(服务器广播)
message SAHHDZGetRoomData {
    optional int32 canChips = 1;//能否下注
    repeated SAHHDZSitDown SAHHDZSitDown=2;//坐下的玩家信息
    repeated PosData PosData=3;//固定2组牌
    repeated int64 myBettingChips=4;//我的下注情况
    optional int32 iLastTime=5;//倒计时
    optional int32 iMaxMultiple=6;//最大倍数
    repeated string stMultipleInfo=7;//0号位倍率描述
    optional int64 CurMyChip=8;//当前筹码
}

message SQHHDZExitRoom {
}

message SAHHDZExitRoom {
    required int32 iRet = 1;
    optional int32 iPlayerId=2;
}

//从座位起来
message SQHHDZStandUp {
    required int32 Index=1;//起来的座位索引
}

message SQHHDZSitDown {
    required int32 Index = 1;
}

message SAHHDZSitDown {
    optional int32 iRet = 1;
    optional int32  iPlayerId = 2;                      /*   玩家ID  version:1.4.0*/
    optional string  szNickName = 3;                    /*   玩家名字  version:1.4.0*/
    optional string  szFaceIcon = 4;                    /*   玩家头像  version:1.4.0*/
    optional int64  iChips = 5;                     /*   钱  version:1.4.0*/
    optional int32  iVIP = 6;                        /*vip等级*/
    optional int32  iAchievementId = 7;                 /*   成就Id  version:1.3.0*/
    optional int32  iSeatID=8;                           /*座位号0-5*/
}

//下注
message SQHHDZBetting {
    repeated PokerBettingData PokerBettingData=1;
}
//下注成功广播给所有人
message SAHHDZBetting {
    required int32 iRet = 1;
    repeated PokerBettingData PokerBettingData=2;
}

//开始下注
message SQStartHHDZGame 
{
    required int32 time=1;//下注阶段倒计时
}

message SQHHDZOverGame {
    repeated PosData PosData = 1;//庄闲数据
    repeated SitDownBettingData SitDownBettingData = 2;//座位数据*6
    repeated int64 Betting = 3;//自己下注的结果,+为赢的,-为输的，pos0开始,索引*3
}

message SQGetHHDZCompleteTrend {
}

message SAGetHHDZCompleteTrend {
    repeated int32 winColor = 1;//1:黑 2：红  最近70局的红黑赢家
    repeated int32 cardType=2;//最近20局赢牌的牌型
}

//兑换码
message SQRedeemCode {
   required string stCode=1;//兑换码
}
//兑换成功或失败
message SARedeemCode {
    required int32 iRet = 1;//映射SYSTEMRESULT枚举值
}

enum EHHDZ_CardType 
{
    EHHDZ_CardType_DanPai = 1;  /*单牌*/
    EHHDZ_CardType_DuiZi = 2;   /* 对子 */
    EHHDZ_CardType_ShunZi=3;     /*顺子*/
    EHHDZ_CardType_TongHua=4;    /*同花*/
    EHHDZ_CardType_TongHuaShun=5;/*同花顺*/
    EHHDZ_CardType_BaoZi=6;      /*豹子*/
    EHHDZ_CardType_TeShu=7;      /*特殊*/
};

enum CowBoy_CardType
{
    CowBoy_CardType_GaoPai = 1;     /*高牌*/
    CowBoy_CardType_YiDui = 2;  /* 一对 */
    CowBoy_CardType_LiangDui=3;     /*两对*/
    CowBoy_CardType_SanTiao=4;    /*三条*/
    CowBoy_CardType_ShunZi=5;     /*顺子*/
    CowBoy_CardType_TongHua=6;    /*同花*/
    CowBoy_CardType_HuLu=7;    /*葫芦*/
    CowBoy_CardType_JinGang=8;    /*金刚*/
    CowBoy_CardType_TongHuaShun=9;/*同花顺*/
    CowBoy_CardType_HGTongHuaShun=10;      /*皇冠同花顺*/
};
//德州牛仔相关
enum CowBoy_HandCardType
{
    CowBoy_HandCardType_TongHua = 1;    /*同花*/
    CowBoy_HandCardType_LianPai = 2;    /* 連牌 */
    CowBoy_HandCardType_DuiZi=3;     /*對子*/
    CowBoy_HandCardType_TongHuaShun=4;    /*同花連牌*/
    CowBoy_HandCardType_DuiA=5;     /*對A*/
};

enum CowBoy_WinCardType
{
    CowBoy_WinCardType_GPYD = 1;    /*高牌一對*/
    CowBoy_WinCardType_LiangDui = 2;    /* 兩對 */
    CowBoy_WinCardType_STSZTH=3;     /*三條順子同花*/
    CowBoy_WinCardType_HuLu=4;    /*葫蘆*/
    CowBoy_WinCardType_JGTHSHG=5;     /*金剛同花順皇冠*/
};

message SQCowBoyJoinRoom
{
    optional int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
    optional string  szToken = 2;                       /*   登录Token  version:1.3.0*/
    optional int32  iRoomTypeId = 3;                    /*   房间限红类型  version:1.4.0*/
 }

 message SACowBoyJoinRoom {
    required int32 iRet = 1;                            //
}

//开始下注
message SQStartCowBoyGame
{
    required int32 time=1;//下注阶段倒计时
    repeated int32 PubicCardData = 2;//公共牌数据
}

message SQCowBoyOverGame {
    repeated PosData PosData = 1;//庄闲数据
    repeated SitDownBettingData SitDownBettingData = 2;//座位数据*8
    repeated int64 Betting = 3;//自己下注的结果,+为赢的,-为输的，pos0开始,索引*12
    repeated int32 PubicCardData = 4;//公共牌数据
}

//从座位起来
message SQCowBoyStandUp {
    required int32 Index=1;//起来的座位索引
}

message SQCowBoySitDown {
    required int32 Index = 1;
}

message SACowBoySitDown {
    optional int32 iRet = 1;
    optional int32  iPlayerId = 2;                      /*   玩家ID  version:1.4.0*/
    optional string  szNickName = 3;                    /*   玩家名字  version:1.4.0*/
    optional string  szFaceIcon = 4;                    /*   玩家头像  version:1.4.0*/
    optional int64  iChips = 5;                     /*   钱  version:1.4.0*/
    optional int32  iVIP = 6;                        /*vip等级*/
    optional int32  iAchievementId = 7;                 /*   成就Id  version:1.3.0*/
    optional int32  iSeatID=8;                           /*座位号0-7*/
}

//请求房间当前数据
message SQCowBoyGetRoomData
{
}

//获取房间内当前的数据(服务器广播)
message SACowBoyGetRoomData {
    optional int32 canChips = 1;//能否下注
    repeated SACowBoySitDown SACowBoySitDown=2;//坐下的玩家信息
    repeated PosData PosData=3;//固定2组牌
    repeated int64 myBettingChips=4;//我的下注情况
    optional int32 iLastTime=5;//倒计时
    optional int32 iMaxMultiple=6;//最大倍数
    repeated string stMultipleInfo=7;//0号位倍率描述
    repeated int32 pubilcCards = 8;//公共牌前2张
    optional int64 CurMyChip=9;//当前筹码
}

message CowBoyCompleteTrend {
    repeated int32 CardID = 1;//牌
    optional int32 cardType=2;//牌型
    repeated int32 handCardID = 3;//手牌
    optional int32 handCardType=4;//手牌型
    optional string  sztimestamp = 5; //時間
    optional SACowBoySitDown winPlayer =6 ;//最大贏取玩家
    optional SACowBoySitDown winHandPlayer =7;//最大手牌贏取玩家
    optional int64 maxChips =8;//最大玩家贏取
    optional int64 handMaxChips =9;//手牌最大玩家贏取
}

message SQGetCowBoyCompleteTrend {

}

message SQCowBoyExitRoom {
}

message SACowBoyExitRoom {
    required int32 iRet = 1;
    optional int32 iPlayerId=2;
}

message SAGetCowBoyCompleteTrend {
    repeated CowBoyCompleteTrend CowBoyCompleteTrend = 1;//錄單記錄
    repeated int32 CowBoyTrend = 2;//勝負記錄
    repeated int32 CowBoyTypeTrend = 3;//牌型記錄
    repeated int32 CowBoyHandTypeTrend = 4;//手牌記錄
}

//下注
message SQCowBoyBetting {
    repeated PokerBettingData PokerBettingData=1;
	optional bool iContiueBet = 2;
}
//下注成功广播给所有人
message SACowBoyBetting {
    required int32 iRet = 1;
    repeated PokerBettingData PokerBettingData=2;
	optional bool iContiueBet = 3;
}


//绑定银商账号
message SQBindBankerCode {
    required string stCode=1;//兑换码
}
message SABindBankerCode {
    required int32 iRet = 1;//映射SYSTEMRESULT枚举值
}

//申请充值ping++
message SQPayPing {
    required int32 payId=1;//购买的ItemId
    optional string ip=2;//客户端IP
    optional string channel=3;//客户端选择的支付平台
}
message SAPayPing {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
   optional string payData=2;//支付凭据数据
}

message SQSlotoELMFill
{
}
message SASlotoELMFill
{
   required int64 chipNum=1;
   repeated int32 typeList=2;
   optional int32 icurrentFreeSpin = 3;             /*   玩家本次Spin的次数，没有则为0  version:1.3.0*/
   optional int32  itotalFreeSpin = 4;              /*   玩家剩余免费Spin次数，没有则为0  version:1.3.0*/
}

message SQNiuNiuNextCard {
   optional string NiuNiuCardData=1;//下局开牌牛牛牌
}

message SQSetJackpotCommission {
   optional string JackpotCommission=1;//新的抽税率
}

//申请绑定兑换信息
message SQBindPay {
    required int32 payId=1;//绑定类型
    optional string AlipayID=2;//支付宝账号
    optional string CardID=3;//银行卡账号
    optional string RealName=4;//户名
}
message SABindPay {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
}

//申请绑定兑换信息
message SQRequestPay {
    required int64 moneyNum=1;//兑换数量
    optional Exchange_Account_Type  exchangeType = 2; //兑换类型
}
message SARequestPay {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
   optional int64 moneyNum=2;//兑换数量
}

//提现记录
message SAExchangeData {
   required int64 moneyNum = 1;//兑换数量
   optional Exchange_Account_Type  exchangeType = 2; //兑换类型
   optional Exchange_Operate_Type  exchangeState = 3; //兑换状态
   optional string  exchangeAccoumt = 4; //兑换账号
   optional string  sztimestamp = 5;                    /*   时间戳  version:1.3.0*/
   optional int64  id = 6;    //id用于排序
   optional string  orderNo = 7;    //订单编号
}

//申请兑现记录
message SQGetExchangeData {
}

message SAGetExchangeData {
    required int32 iRet = 1;//映射SYSTEMRESULT枚举值
    repeated SAExchangeData SAExchangeData=2;//兑现记录
}
//无限代
/* UnlimiteRewardType version:1.3.0*/
 enum UnlimiteRewardType
{
    REWARD_PLAYER = 0;  /* 玩家  version:1.3.0*/
    REWARD_NONE = 1;    /* 无保底  version:1.3.0*/
    REWARD_BUSSINESS = 2;   /* 保底  version:1.3.0*/
};

enum UnlimiteRewardState
{
    REWARD_PROCESSING = 0;  /* 未发放  version:1.3.0*/
    REWARD_READY = 1;   /* 已发放  version:1.3.0*/
};
//无限代玩家信息
message UnlimiteDayData {
    required int32 usrid = 1; //玩家ID
    optional int64 teamflow = 2;  //团队流水
    optional int64 playerflow = 3; //玩家流水
    optional int64 ownflow = 4; //自己流水
    optional int64 rewardMoney = 5; //奖励金额
    optional int32 rewardState = 6; //发放状态
    optional string  sztimestamp = 7;                   /*   时间戳  version:1.3.0*/
    optional int32  id = 8;                     /*   排序ID*/
}

message UnlimitePlayerData {
    required int32 usrid = 1; //玩家ID
    repeated UnlimiteDayData dayData = 2;  //日数据
    optional string nickname = 3; //玩家名字
    optional int32 childNum = 4;  //直属玩家个数
    optional int32 teamnum = 5; //团队玩家个数
    optional int64 teamflow = 6; //团队流水
    optional int64 ownflow = 7; //自己流水
    optional int64 playerflow = 8; //玩家流水
    optional int32 awardtype = 9; //奖励类型
    optional int64 AllRewardMoney = 10; //总奖励
    optional int64 WeakRewardMoney = 11; //周总奖励
    optional int64 CompleteRewardMoney = 12; //已领奖励
    optional int64 WaitRewardMoney = 13; //待领奖励
    optional int32 ActiveChildNum = 14; //活跃
    optional int64 CanRewardMoney = 15; //可领奖励
    optional int32 parentid = 16; //可领奖励
    optional int32 awardpercent = 17; //奖励比例
    optional int32 todayChild = 18; //今日新增
    optional int32 curMyLevel = 19;//当前自己等级
}

//每周返佣金累计配置
message UnlimitePerWeekConfigData
{
    repeated UnlimitePerWeekItem perWeekItem = 1;
}
//列表描述
message UnlimitePerWeekItem
{
    required int32 number = 1;//序号
    required string title = 2;//标题
    required string range = 3;//区间
    required string des = 4;//描述
}

//请求无限代信息
message SQUnlimitePlayerList{

}

//发送无限代信息
message SAUnlimitePlayerList {
   required UnlimitePlayerData myUnlimiteData = 1; //自己的代理信息
   repeated UnlimitePlayerData childUnlimitedData = 2; //直属的代理信息
   required UnlimitePerWeekConfigData configData = 3;//每周返佣金累计配置
}

//请求无限代绑定
message SQUnlimitePlayerBind{
    required int32 parentid = 1; //上级ID
}

//发送无限代信息
message SAUnlimitePlayerBind {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
}

//请求成为代理
message SQUnlimitePlayerTrade{

}

//发送无限代信息
message SAUnlimitePlayerTrade {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
}

//设置下级返利
message SQUnlimitePlayerReward{
   required int32 usrid = 1; //玩家ID
   required int64 rewardpercent = 2; //奖励比例
}

//设置下级返利回复
message SAUnlimitePlayerReward {
   required int32 iRet = 1;//映射SYSTEMRESULT枚举值
   optional int32 childID = 2; //玩家ID
   optional int32 rewardPercent = 3; //奖励比例
}
//海王烈焰风暴
message SASeaKingFireStorm {
   required int32 iRet = 1;//0开始--1结束
   required int32 playerID = 2; //玩家ID
   optional int32 fireStormTime = 3;

}

//海王鳄鱼攻击
message SASeaKingFishAttack {
   required int32 playerID = 1;//玩家ID
   required int64 buffChips = 2; //获得筹码

}

 //服务器踢人
message ServerAutokickS2C{
    required int32 userId = 1;
}


//急速时刻进入房间 63001
message JsskJoinRoomC2S{

    required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
    required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
    optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message JsskJoinRoomS2C{
    required int32 result = 1;
}

//急速时刻离开房间 63002
message JsskExitRoomC2S{
    
}

message JsskExtRoomS2C{
    required int32 result = 1;
}

//急速时刻获取房间当前信息 63003
message JsskGetRoomDataC2S{
    required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}
message JsskGetRoomDataS2C{
    repeated int32 chipTypes = 1;               //筹码类型
    repeated JsskAreaData areaLimit = 2;    //区域下注限制
    repeated JsskAreaData totalBets = 3;    //全服下注
    repeated JsskAreaData ownBets = 4;      //自己的下注
    repeated JsskAreaData areaMultiple = 5; //当前区域倍数
    repeated JsskHistoryResult historyResult = 6;//开奖历史结果
	
    required bool iCanBet = 7;                  //能否下注
    required int32 iLastTime = 8;               //倒计时
}

message JsskHistoryResult
{
	required int32 periods = 1;//期数
	repeated int32 results = 2;//开奖结果
}

message JsskAreaData{
    required int32 areaId = 1;
    required int32 data = 2;
}



//急速时刻游戏开始 63004
message JsskGameStartS2C{
    required int32 time=1;//下注阶段倒计时
    repeated JsskAreaData areaMultiple = 2; //当前区域倍数
}

//急速时刻游戏结束 63005
message JsskGameOverS2C{

}


//极速时刻自己下注 63006
message JsskOwnBetC2S{
    required int32  iPlayerID = 1;
    repeated JsskAreaData betData = 2;
}

message JsskOwnBetS2C
{
    required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
    repeated JsskAreaData betData = 2; //返回当前下注总额
}

//极速时刻所有区域下注同步  63007
message JsskAllBetS2C{
    repeated JsskAreaData betData = 1;
}


//极速时刻正在开奖 63008
message JsskIsTheLotteryS2C{
    required bool iSpecial = 1; //是否是特殊开奖
}

//中奖位置和倍数
message JsskResults{
    required int32 areaId = 1; //中奖区域
    required int32 odd = 2;  //倍数
}
//极速时刻开奖结果 63009
message JsskLotteryResultS2C{
    repeated JsskResults results = 1;
   required bool iLeft = 2; //动画是否开在左边
   required int32 userWin =3;
}

//极速时刻自动下注63010

message JsskAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated JsskAreaData betData = 2;
}

message JsskAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}

//极速时刻清空下注 63011
message JsskClearBetC2S{
	
}

message JsskClearBetS2C{
	required int32 iRet = 1;
}

//极速时刻请求房间没坐下玩家 63012
message JsskSitPlayerC2S
{
}
message JsskSitPlayerS2C {
    repeated SANiuNiuSitDown SAJsskSitDown=1;//没坐下的玩家信息1
}


//疯狂水果进入房间 63101
message FksgJoinRoomC2S{

   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
   required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message FksgJoinRoomS2C{
   required int32 result = 1;
   
}

//疯狂水果离开房间 63102
message FksgExitRoomC2S{
   
}

message FksgExtRoomS2C{
   required int32 result = 1;
}

//疯狂水果获取房间当前信息 63103
message FksgGetRoomDataC2S{
   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}

message FksgGetRoomDataS2C{
   repeated int32 chipTypes = 1;               //筹码类型
   repeated FksgAreaData areaLimit = 2;    //区域下注限制
   repeated FksgAreaData totalBets = 3;    //全服下注
   repeated FksgAreaData ownBets = 4;      //自己的下注
   repeated FksgAreaData areaMultiple = 5; //当前区域倍数
   repeated FksgHistoryResult historyResult = 6;//开奖历史结果
  
   required bool iCanBet = 7;                  //能否下注
   required int32 iLastTime = 8;               //倒计时
}

message FksgHistoryResult
{
  required int32 periods = 1;//期数
  repeated int32 results = 2;//开奖结果
}

message FksgAreaData{
   required int32 areaId = 1;
   required int32 data = 2;
}



//疯狂水果游戏开始 63104
message FksgGameStartS2C{
   required int32 time=1;//下注阶段倒计时
   repeated FksgAreaData areaMultiple = 2; //当前区域倍数
}

//疯狂水果游戏结束 63105
message FksgGameOverS2C{

}


//疯狂水果自己下注 63106
message FksgOwnBetC2S{
   required int32  iPlayerID = 1;
   repeated FksgAreaData betData = 2;
}

message FksgOwnBetS2C
{
   required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
   repeated FksgAreaData betData = 2; //返回当前下注总额
}

//疯狂水果所有区域下注同步  63107
message FksgAllBetS2C{
   repeated FksgAreaData betData = 1;
}


//疯狂水果正在开奖 63108
message FksgIsTheLotteryS2C{
   required bool iSpecial = 1; //是否是特殊开奖
}

//中奖位置和倍数
message FksgResults{
   required int32 areaId = 1; //中奖区域
   required int32 odd = 2;  //倍数
}
//疯狂水果开奖结果 63109
message FksgLotteryResultS2C{
   repeated FksgResults results = 1;
  required bool iLeft = 2; //动画是否开在左边
  required int32 userWin =3;
}

//疯狂水果自动下注 63110
message FksgAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated FksgAreaData betData = 2;
}

message FksgAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}

//疯狂水果清空下注 63111
message FksgClearBetC2S{
	
}

message FksgClearBetS2C{
	required int32 iRet = 1;
}
//疯狂水果请求房间没坐下玩家 63112
message FksgSitPlayerC2S
{
}
message FksgSitPlayerS2C {
    repeated SANiuNiuSitDown SAFksgSitDown=1;//没坐下的玩家信息1
}

//9999
message TestMsgIDC2S{
   

}


//魔法宝石进入房间 63201
message MfbsJoinRoomC2S{

   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
   required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message MfbsJoinRoomS2C{
   required int32 result = 1;
}


//魔法宝石离开房间 63202
message MfbsExitRoomC2S{
   
}

message MfbsExtRoomS2C{
   required int32 result = 1;
}


//魔法宝石获取房间当前信息 63203
message MfbsGetRoomDataC2S{
   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}

message MfbsGetRoomDataS2C{
   repeated int32 chipTypes = 1;               //筹码类型
   repeated MfbsAreaData areaLimit = 2;    //区域下注限制
   repeated MfbsAreaData totalBets = 3;    //全服下注
   repeated MfbsAreaData ownBets = 4;      //自己的下注
   repeated MfbsAreaData areaMultiple = 5; //当前区域倍数
   repeated MfbsHistoryResult historyResult = 6;//开奖历史结果
  
   required bool iCanBet = 7;                  //能否下注
   required int32 iLastTime = 8;               //倒计时
}


message MfbsHistoryResult
{
	required int32 periods = 1;//期数
	repeated int32 results = 2;//开奖结果
}

message MfbsAreaData{
    required int32 areaId = 1;
    required int32 data = 2;
}



//魔法宝石游戏开始 63204
message MfbsGameStartS2C{
    required int32 time=1;//下注阶段倒计时
    repeated MfbsAreaData areaMultiple = 2; //当前区域倍数
}

//魔法宝石游戏结束 63205
message MfbsGameOverS2C{

}


//魔法宝石自己下注 63206
message MfbsOwnBetC2S{
    required int32  iPlayerID = 1;
    repeated MfbsAreaData betData = 2;
}

message MfbsOwnBetS2C
{
    required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
    repeated MfbsAreaData betData = 2; //返回当前下注总额
}

//魔法宝石所有区域下注同步  63207
message MfbsAllBetS2C{
    repeated MfbsAreaData betData = 1;
}


//魔法宝石正在开奖 63208
message MfbsIsTheLotteryS2C{
    required bool iSpecial = 1; //是否是特殊开奖
}

//中奖位置和倍数
message MfbsResults{
    required int32 areaId = 1; //中奖区域
    required int32 odd = 2;  //倍数
}
//魔法宝石开奖结果 63209
message MfbsLotteryResultS2C{
   repeated MfbsResults results = 1;
   required bool iLeft = 2; //动画是否开在左边
   required int32 userWin =3;
}

//魔法宝石自动下注63210

message MfbsAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated MfbsAreaData betData = 2;
}

message MfbsAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}

//魔法宝石清空下注 63211
message MfbsClearBetC2S{
	
}

message MfbsClearBetS2C{
	required int32 iRet = 1;
}

//魔法宝石请求房间没坐下玩家 63212
message MfbsSitPlayerC2S
{
}
message  MfbsSitPlayerS2C {
    repeated SANiuNiuSitDown SAMfbsSitDown=1;//没坐下的玩家信息1
}

//战无不胜进入房间 64001
message ZwbsJoinRoomC2S{

   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
   required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message  ZwbsJoinRoomS2C{
   required int32 result = 1;
}

//战无不胜离开房间 64002
message  ZwbsExitRoomC2S{
   
}

message  ZwbsExtRoomS2C{
   required int32 result = 1;
}

//战无不胜获取房间当前信息 64003
message  ZwbsGetRoomDataC2S{
   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}

message  ZwbsGetRoomDataS2C{
   repeated int32 chipTypes = 1;               //筹码类型
   repeated ZwbsAreaData areaLimit = 2;    //区域下注限制
   repeated ZwbsAreaData totalBets = 3;    //全服下注
   repeated ZwbsAreaData ownBets = 4;      //自己的下注
   repeated ZwbsAreaData areaMultiple = 5; //当前区域倍数
   repeated ZwbsHistoryResult historyResult = 6;//开奖历史结果
  
   required bool iCanBet = 7;                  //能否下注
   required int32 iLastTime = 8;               //倒计时
}

message  ZwbsHistoryResult
{
  required int32 periods = 1;//期数
  repeated int32 results = 2;//开奖结果
  optional int32 Type=4;//中奖类型，0 普通中奖 1 黄灯全中 2 绿灯全中 3 黄灯全中 4 孙悟空全中 5 红孩儿全中 6 沙悟净全中 7 牛魔王全中 8 仙女散花 9 封神 10 纵横四海 11 四海归一 12 四大天王 13 七十二变 14 二连 15 三连 16 四连 
}

message  ZwbsAreaData{
   required int32 areaId = 1;
   required int32 data = 2;
}



//战无不胜游戏开始 64004
message  ZwbsGameStartS2C{
   required int32 time=1;//下注阶段倒计时
}

//战无不胜游戏结束 64005
message  ZwbsGameOverS2C{

}


//战无不胜自己下注 64006
message  ZwbsOwnBetC2S{
   required int32  iPlayerID = 1;
   repeated ZwbsAreaData betData = 2;
}

message  ZwbsOwnBetS2C
{
   required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
   repeated ZwbsAreaData betData = 2; //返回当前下注总额
}

//战无不胜所有区域下注同步  64007
message  ZwbsAllBetS2C{
   repeated  ZwbsAreaData betData = 1;
}


//战无不胜正在开奖 64008
message  ZwbsIsTheLotteryS2C{
   
}

//中奖位置和倍数
message  ZwbsResults{
   required int32 areaId = 1; //中奖区域
   required int32 odd = 2;  //倍数
}
//战无不胜开奖结果 64009
message  ZwbsLotteryResultS2C{
  repeated  ZwbsResults results = 1;
  required bool iLeft = 2; //动画是否开在左边
  required int32 userWin =3;
  optional int32 Type=4;//中奖类型，0 普通中奖 1 黄灯全中 2 绿灯全中 3 黄灯全中 4 孙悟空全中 5 红孩儿全中 6 沙悟净全中 7 牛魔王全中 8 仙女散花 9 封神 10 纵横四海 11 四海归一 12 四大天王 13 七十二变 14 二连 15 三连 16 四连 
}

//战无不胜自动下注 64010
message  ZwbsAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated ZwbsAreaData betData = 2;
}



message  ZwbsAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}


//五星宏辉进入房间 64101
message WxhhJoinRoomC2S{

   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
   required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
   optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message  WxhhJoinRoomS2C{
   required int32 result = 1;
}

//五星宏辉离开房间 64102
message  WxhhExitRoomC2S{
   
}

message  WxhhExtRoomS2C{
   required int32 result = 1;
}

//五星宏辉获取房间当前信息 64103
message  WxhhGetRoomDataC2S{
   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}

message  WxhhGetRoomDataS2C{
   repeated int32 chipTypes = 1;               //筹码类型
   repeated WxhhAreaData areaLimit = 2;    //区域下注限制
   repeated WxhhAreaData totalBets = 3;    //全服下注
   repeated WxhhAreaData ownBets = 4;      //自己的下注
   repeated WxhhAreaData areaMultiple = 5; //当前区域倍数
   repeated WxhhHistoryResult historyResult = 6;//开奖历史结果
	required int32 curInning = 7;//当前局数
	required int32 curSpieltag = 8;//当前场次	
   required bool iCanBet = 9;                  //能否下注
   required int32 iLastTime = 10;               //倒计时
  
}

message  WxhhHistoryResult
{
  required int32 periods = 1;//期数 用来排序
  required int32 results = 2;//开奖结果
}

message  WxhhAreaData{
   required int32 areaId = 1;
   required string data = 2;
}



//五星宏辉游戏开始 64104
message  WxhhGameStartS2C{
   required int32 time=1;//下注阶段倒计时
   required int32 inning = 2;//当前局数
	required int32 spieltag = 3;//当前场次	
}


//五星宏辉自己下注 64106
message  WxhhOwnBetC2S{
   required int32  iPlayerID = 1;
   repeated WxhhAreaData betData = 2;
}

message  WxhhOwnBetS2C
{
   required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
   repeated WxhhAreaData betData = 2; //返回本次下注
}

//五星宏辉所有区域下注同步  64107
message  WxhhAllBetS2C{
   repeated  WxhhAreaData betData = 1;
}

//五星宏辉本局游戏结束 64108
message WxhhGameOverS2C{
	required int32 result = 1;
	required string iswin = 2;//中奖分数
}
//五星宏辉正在开奖 64109
message  WxhhIsTheLotteryS2C{
   
}
//五星宏辉自动下注 64110
message  WxhhAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated WxhhAreaData betData = 2;
}

message  WxhhAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}
//五星宏辉请求房间没坐下玩家 64110
message WxhhSitPlayerC2S
{
}
message  WxhhSitPlayerS2C {
    repeated SANiuNiuSitDown SAWxhhSitDown=1;//没坐下的玩家信息1
}


////////////////////////////////飞禽走兽//////////////////////////////////////
//飞禽走兽进入房间64201
message FqzsJoinRoomC2S{
	required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
	required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
	optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/ 
}

message FqzsJoinRoomS2C{
	required int32 result = 1;
}

//飞禽走兽离开房间 64202
message  FqzsExitRoomC2S{
   
}

message  FqzsExtRoomS2C{
   required int32 result = 1;
}

//飞禽走兽获取房间当前信息 64203
message  FqzsGetRoomDataC2S{
   required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}

message  FqzsGetRoomDataS2C{
	repeated int32 chipTypes = 1;               //筹码类型
	repeated FqzsAreaData areaLimit = 2;    //区域下注限制
	repeated FqzsAreaData totalBets = 3;    //全服下注
	repeated FqzsAreaData ownBets = 4;      //自己的下注
	repeated FqzsAreaData areaMultiple = 5; //当前区域倍数
	repeated FqzsHistoryResult historyResult = 6;//开奖历史结果
	required bool iCanBet = 7;                  //能否下注
	required int32 iLastTime = 8;               //倒计时
}

//飞禽走兽历史结果
message  FqzsHistoryResult
{
  required int32 periods = 1;//期数 用来排序
  required int32 results = 2;//开奖结果
  optional int32 multiple = 3;//是否金鲨与银鲨（0为银鲨）
}

message  FqzsAreaData{
   required int32 areaId = 1;
   required string data = 2;
}



//飞禽走兽游戏开始 64204
message  FqzsGameStartS2C{
   required int32 time=1;//下注阶段倒计时
}


//飞禽走兽自己下注 64205
message  FqzsOwnBetC2S{
   required int32  iPlayerID = 1;
   repeated FqzsAreaData betData = 2;
}

message FqzsOwnBetS2C
{
   required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
   repeated FqzsAreaData betData = 2; //返回本次下注
}

//飞禽走兽所有区域下注同步  64206
message  FqzsAllBetS2C{
   repeated  FqzsAreaData betData = 1;
}

//飞禽走兽本局游戏结束 64207
message FqzsGameOverS2C{
    repeated int32 results = 1;
	optional int32 multiple = 2;
	required int32 userWin =3;
}
//飞禽走兽正在开奖 64208
message FqzsIsTheLotteryS2C{
   
}


//飞禽走兽自动下注 64209
message  FqzsAutoBetC2S{
	required int32 autoCount = 1;	// -1无限大，其余是多少就是多少
	repeated FqzsAreaData betData = 2;
}

message  FqzsAutoBetS2C{
	required int32 iRet = 1;
	required int32 autoCount = 2;
}

//飞禽走兽请求房间没坐下玩家 64210
message FqzsSitPlayerC2S
{
}
message  FqzsSitPlayerS2C {
    repeated SANiuNiuSitDown SAFqzsSitDown=1;//没坐下的玩家信息1
}





//众博赛马进入房间64301
message ZbsmJoinRoomC2S{
    required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
    required string  szToken = 2;                       /*   登录Token  version:1.3.0*/
    optional int32  iRoomTypeId = 3;                    /*   房间限红类型　目前应该没有用到 默认先给个１吧 version:1.4.0*/
}

message ZbsmJoinRoomS2C{
    required int32 result = 1;
}
//众博赛马退出房间64302
message ZbsmExitRoomC2S{
    
}
message ZbsmExitRoomS2C{
    required int32 result =1;
}

//众博赛马获取房间当前信息 64303
message ZbsmGetRoomDataC2S{
    required int32  iPlayerID = 1;                      /*   玩家  version:1.3.0*/
}
message ZbsmGetRoomDataS2C{
    repeated int32 chipTypes = 1;           //筹码类型
    repeated ZbsmAreaData areaLimit = 2;    //区域下注限制
    repeated ZbsmAreaData totalBets = 3;    //全服下注
    repeated ZbsmAreaData ownBets = 4;      //自己的下注
    repeated ZbsmAreaData areaMultiple = 5; //当前区域倍数
    repeated ZbsmHistoryResult historyResult = 6;//开奖历史结果
    
    required bool iCanBet = 7;                  //能否下注
    required int32 iLastTime = 8;               //倒计时
    
}

message ZbsmHistoryResult
{
    required int32 periods = 1;//期数
    repeated int32 results = 2;//开奖结果
}

message ZbsmAreaData{
    required int32 areaId = 1;
    required int32 data = 2;
}
//众博赛马游戏开始 64304
message ZbsmGameStartS2C{
    required int32 time=1;//下注阶段倒计时
    repeated ZbsmAreaData areaMultiple = 2; //当前区域倍数
}

//众博赛马游戏结束 64305
message ZbsmGameOverS2C{
    
}
//众博赛马自己下注 64306
message ZbsmOwnBetC2S{
    required int32  iPlayerID = 1;
    repeated ZbsmAreaData betData = 2;
}

message ZbsmOwnBetS2C
{
    required int32 iRet = 1;    //下注结果 成功 - 10000   失败 - 10001
    repeated ZbsmAreaData betData = 2; //返回当前下注总额
}

//众博赛马所有区域下注同步  64307
message ZbsmAllBetS2C{
    repeated ZbsmAreaData betData = 1;
}
//众博赛马清空下注 63011
message ZbsmClearBetC2S{
    
}

message ZbsmClearBetS2C{
    required int32 iRet = 1;
}

//众博赛马正在开奖 64308
message ZbsmIsTheLotteryS2C{
    required bool iSpecial = 1; //是否是特殊开奖
}

//中奖位置和倍数
message ZbsmResults{
    required int32 areaId = 1; //中奖区域
    required int32 odd = 2;  //倍数
}

message ZbsmSingleLine{
    repeated string separateTimes = 1;//每段距离用的时间
}
//众博赛马开奖结果 64309
message ZbsmLotteryResultS2C{
    
    repeated ZbsmResults results = 1;
    required bool iLeft = 2; //动画是否开在左边
    required int32 userWin = 3;
    repeated ZbsmSingleLine Lines = 4; //每匹马的时间段
}

//斗地主进入房间 40001
message LandlordsJoinRoomC2S{
	required int32  iPlayerID = 1;     /*   玩家  version:1.3.0*/
	required string  szToken = 2;      /*   登录Token  version:1.3.0*/
	required int32  iRoomTypeId = 3;   /*   房间类型（房间号）*/ 
}

message LandlordsJoinRoomS2C{
	required int32 result = 1;
	required int64 sTimestamp = 2;//服务器13位时间戳
}

//斗地主离开房间 40002
message LandlordsExitRoomC2S{

}

message LandlordsExitRoomS2C{
	required int32 userId = 1;
	required int32 result = 2;
}

//斗地主获取房间数据 40003
message LandlordsGetRoomDataC2S{
	
}

message LandlordsGetRoomDataS2C{
	repeated LandlordsPlayerData playerDataArr = 1;
	required string baseBet = 2;//底注
	repeated int32 robScoreType = 3;//抢地主分数
	required bool iGameStart = 4;//游戏是否开始
	optional int32 curMultiple = 5;//当前累计倍数
	optional int32 curPlayerOperateId = 6;//当前是谁在操作
	optional int32 allowOperate = 7;//  1-抢地主 2-加倍 3-出牌阶段		
	optional int32 tickTime = 8;//剩余时间（秒）
	repeated int32 basePoker = 9;//3张底牌
	optional int32 curScore = 10;   //当前叫地主的最高分数

}

message LandlordsPlayerData
{
	required int32 userId = 1;
	required string userName = 2;
	required int64 userGoldNum = 3;//玩家金币
	repeated int32 handPoker = 4;//当前剩余手牌
	repeated int32 throwPoker = 5;//当前丢弃的手牌
	required int32 iDoNot = 6;//出牌为不要的标志  1-出牌为不要
	required bool iLandlord = 7;//是否是地主
	required int32 seatId = 8;//座位
	optional int32 callLandlordRes = 9;//叫地主结果
	optional int32 multipleRes = 10;//加倍结果
	required string headUrl = 11;//头像
	optional int32 iCurTitle = 12;//玩家头衔    
	required int32 status = 13;      //0正常  1掉线
	
}

//斗地主玩家进入 40004
message LandlordsPlayerJoinS2C{
	required LandlordsPlayerData playerData = 1;
}

//斗地主游戏开始 40005
message LandlordsGameStartS2C{
	repeated int32 ownHandPoker = 1;//自己的手牌
	required int32 firstRob = 2;//首次抢地主玩家
	repeated int32 basePoker = 3;//3张底牌
	required int32 time = 4;//抢庄时间
}

//斗地主玩家可执行操作 40006
message LandlordsAllowOperateS2C{
	required int32 allowOperate = 1;// 1-抢地主 2-加倍 3-出牌阶段
	required int32 userId = 2;//操作者
   required int32 time = 3;//操作剩余时间(秒)
   optional int32 curScore = 4;   //当前叫地主的最高分数
}

//斗地主玩家操作 40007
message LandlordsPlayerOperateC2S{
	optional int32 robOperate = 1; //抢地主操作
	optional int32 multiple = 2;//加倍操作	
}

message LandlordsPlayerOperateS2C{
	required int32 result = 1;
	required int32 userId = 2;
	optional int32 robOperate = 3; //抢地主操作
	optional int32 multiple = 4;//加倍操作	
}

//斗地主玩家出牌 40008
message LandlordsPlayerPlayPokerC2S{
	repeated int32 pokerId = 1;
	required int32 type = 2;
}

message LandlordsPlayerPlayPokerS2C{
	required int32 result = 1;
	required int32 userId = 2;
	repeated int32 pokerId = 3;
	required int32 type = 4;
}

message LandlordsAccount{
   required int32 userId = 1;  //玩家ID
   required string score = 2;  //底分
   required int32 multiple = 3; //倍数
   required string account = 4;  //结算
   repeated int32 handlPoker = 5;//剩余手牌  
   required int32 landlordMark = 6;//地主叫分
   optional int32 farmerMultiple = 7;//农民加倍
   optional int32 boom = 8; //炸弹
   optional int32 spring = 9; //春天
   required int32 status = 10;  //0正常  1离线
}

//斗地主游戏结束 40009
message LandlordsGameOverS2C{
   repeated LandlordsAccount accountData = 1;
   required int32 time = 2;  
}

//斗地主更新抢地主成功玩家的牌 40010
message LandlordsUpdateLandlordPokserS2C{
   required int32 userId = 1;
}

//斗地主倍数变化 40011
message LandlordsPlayPokerTipS2C{
	required int32 multiple = 1;
}

//斗地主继续游戏	40012
message LandlordsContinueGameC2S{
	
}

message LandlordsContinueGameS2C{
	required int32 result = 1;
}

//斗地主玩家是否离线 40013
message LandlordsPlayerStatusS2C{
   required int32 userId = 1;   //用户ID
   required int32 status = 2;      //0正常  1掉线
}

//炸金花获取房间数据 41003
// message GoldFlowerGetRoomDataC2S{
	
// }   

// message GoldFlowerGetRoomDataS2C{
// 	repeated GoldFlowerPlayerData playerDataArr = 1;
// 	required string baseBet = 2;//底注
// 	required bool iGameStart = 3;//游戏是否开始
// 	optional int32 curPlayerOperateId = 4;//当前是谁在操作
// 	optional int32 curRound = 5;//当前轮数
// 	optional int32 tickTime = 6;//剩余时间（秒）
// 	optional string totalBets  = 7;//总下注
// }

message GoldFlowerPlayerData
{
	required int32 userId = 1;
	// required string userName = 2;
	// required string userGoldNum = 3;//玩家金币
	// repeated int32 handPoker = 4;//当前手牌	
	// required bool isBanker = 5;//是否是庄家
   required int32 seatId = 2;//座位	
   required LongType iChip = 3;//玩家的筹码 
	// required string allBet = 7;//下注总额	
}
//炸金花玩家进入 41004
message GoldFlowerPlayerJoinS2C{
	// required GoldFlowerPlayerData playerData = 1;
}
//炸金花游戏开始 41005
message CMD_S2C_GameStart{
   required int32 lCellScore = 1; //底注
   required int32 lUserMaxScore = 2;//加注上限
   required int32 wBankUser=3;//当前庄家
   required int32 wCurrentUser=4;//当前玩家
   repeated bool  cbPlayStatus = 5;//玩家状态 在线 不在线
   repeated GoldFlowerPlayerData playerDataArr = 6;//玩家基础数据
   required int32 wCurRough = 7;//当前轮数
   required string addTime = 8;//跟到底时间间隔
}
//炸金花比牌 41006
message GoldFlowerUserCompareCardC2S{
   required int32 lCompareUser = 1;//比牌用户
   required int32 lScore = 2;//下注筹码
   required int32 lTag = 3;//特殊比牌
}

message GoldFlowerUserCompareCardS2C{
   required int32 lCurrentUser = 1;//当前用户
   repeated int32 lCompareUsers = 2;//比牌用户
   required int32 lLostUser = 3;//输牌用户
   required int32 wCurRough = 4;//当前轮数
   required int32 zCompareUser = 5;//发起比牌用户
   required int32 lScore = 6;//下注筹码
   repeated GoldFlower_PlayerData  astPlayers = 7;
   required int32 lTag = 8;//特殊比牌
}

//炸金花跟到底 41007
message GoldFlowerAlwaysFollowC2S{
	required int32 userId = 1;	
}
message GoldFlowerAlwaysFollowS2C{
	required int32 iRect=1;
	optional string followBets  = 2;//跟随的下注额
}

//炸金花全部下注41008
message GoldFlowerAllBetS2C{
   repeated GoldFlowerPlayerData playerDataArr = 1;
   required int32 wCurRough = 2;//当前轮数
}

//炸金花游戏结束 41009
message GoldFlowerGameOverS2C{

   repeated string lGameScore = 1;
   repeated GoldFlowerCardData CbCardData = 2;
   required int32 wCurRough = 3;//当前轮数
   repeated GoldFlower_PlayerData  astPlayers = 4;
}

message GoldFlowerCardData {
	repeated int32 lCardData = 1;     
}
//炸金花弃牌41010
message GoldFlowerUserGiveUpC2S{
   required int32 iSeatID = 1;

}
message GoldFlowerUserGiveUpS2C{
   required int32 CurrentUserSeatID = 1;//当前轮到的玩家的座位
   required int32 GiveUpUserSeatID = 2;//弃牌玩家座位ID
   required int32 wCurRough = 3;//当前轮数

}

//炸金花玩家看牌41011
message GoldFlowerUserLookC2S{
   required int32 CurrentUserSeatID = 1;
} 
message GoldFlowerUserLookCardS2C{
   required int32 CurrentUserSeatID = 1;//当前轮到的玩家的座位
   repeated int32 UserCardArray = 2;//玩家三张牌
   repeated bool MingZhu = 3;//看过牌的玩家
   required int32 wCurRough = 4;//当前轮数

}

//炸金花玩家加注41012
message GoldFlowerUserAddScoreC2S{
   required int32 lScore = 1;//加注数目
   required int32 wAddTag = 2;//加注1 跟注2
}
message GoldFlowerUserAddScoreS2C{
   required int32 lCurrentTimes = 1;//当前倍数
   required int32 lCurrentUser = 2;//下一位玩家
   required int32 lAddScoreUser = 3;//当前加注玩家
   required int32 lScore = 4;//加注数目
   required int32 wCurRough = 5;//当前轮数
   required int32 wAddTag = 6;//加注 跟注
   repeated GoldFlower_PlayerData  astPlayers = 7;
}

message GoldFlowerGameAboutStart{

}

//转盘 45
message TurnTableCTS{
   required int32 isFree = 1;//是否免费
}

message TurnTableSTC{
   required int32 iRewardId = 1;//奖品ID
   required int32 iRewardType = 2;//奖品类型
   required string iRewardCount = 3;//奖品数量
   required string iCurRewardCount = 4;//奖品本次数量
}
//转盘获取奖励47
message TurnTableGetRewardCTS{
   
}
//转盘获取免费次数49
message TurnTableGetFreeCTS{
   
}
message TurnTableGetFreeSTC{
   optional int32 freeCount = 1;//每天免费1次
   optional int32 turnFreeCount = 2;//免费次数
   repeated TurnConfigArray iTurnConfig = 3;//转盘配置
}

message TurnConfigArray{
   optional string iRewardId = 1;//编号
   optional string iRewardType = 2;//类型
   optional string iRewardCount = 3;//数量
}

message TurnTableGetRewardSTC{
   optional int32 iRewardId = 1;//奖品ID
   optional int32 iRewardType = 2;//奖品类型
   optional string iRewardCount = 3;//奖品数量
   optional string iCurRewardCount = 4;//奖品本次数量
}


